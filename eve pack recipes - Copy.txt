
        ItemStack last_bat = (GAConfig.GT5U.replaceUVwithMAXBat ? MAX_BATTERY : ZPM2);
        if (GAConfig.GT5U.enableZPMandUVBats) {
            ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(2000).EUt(100000)
                    .inputItems(plate, Rutherfordium, 16)
                    .inputItems(circuit, MarkerMaterials.Tier.Ultimate)
                    .inputItems(circuit, MarkerMaterials.Tier.Ultimate)
                    .inputItems(circuit, MarkerMaterials.Tier.Ultimate)
                    .inputItems(circuit, MarkerMaterials.Tier.Ultimate)
                    .inputItems(dust,ENERGY_LAPOTRONIC_ORB2, 8)
                    .inputItems(dust,FIELD_GENERATOR_LUV, 2)
                    .inputItems(dust,NANO_CENTRAL_PROCESSING_UNIT.getStackForm(64))
                    .inputItems(dust,NANO_CENTRAL_PROCESSING_UNIT.getStackForm(64))
                    .inputItems(dust,SMD_DIODE, 8)
                    .inputItems(cableGtSingle, Naquadah, 32)
                    .inputFluids(SolderingAlloy.getFluid(2880))
                    .inputFluids(Water.getFluid(8000))
                    .outputItems(ENERGY_MODULE)
                    .save(provider);

            ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(2000).EUt(200000)
                    .inputItems(plate, Dubnium, 16)
                    .inputItems(circuit, MarkerMaterials.Tier.Superconductor)
                    .inputItems(circuit, MarkerMaterials.Tier.Superconductor)
                    .inputItems(circuit, MarkerMaterials.Tier.Superconductor)
                    .inputItems(circuit, MarkerMaterials.Tier.Superconductor)
                    .inputItems(dust,ENERGY_MODULE, 8)
                    .inputItems(dust,FIELD_GENERATOR_ZPM, 2)
                    .inputItems(dust,HIGH_POWER_INTEGRATED_CIRCUIT.getStackForm(64))
                    .inputItems(dust,HIGH_POWER_INTEGRATED_CIRCUIT.getStackForm(64))
                    .inputItems(dust,SMD_DIODE, 16)
                    .inputItems(cableGtSingle, NaquadahAlloy, 32)
                    .inputFluids(SolderingAlloy.getFluid(2880))
                    .inputFluids(Water.getFluid(16000))
                    .outputItems(ENERGY_CLUSTER)
                    .save(provider);

            ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(2000).EUt(300000)
                    .inputItems(plate, Neutronium, 16)
                    .inputItems(dust,ENERGY_CLUSTER, 8)
                    .inputItems(dust,FIELD_GENERATOR_UV, 2)
                    .inputItems(dust,HIGH_POWER_INTEGRATED_CIRCUIT.getStackForm(64))
                    .inputItems(dust,HIGH_POWER_INTEGRATED_CIRCUIT.getStackForm(64))
                    .inputItems(wireGtSingle, MarkerMaterials.Tier.Superconductor, 32)
                    .inputItems(dust,SMD_DIODE, 16)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputFluids(SolderingAlloy.getFluid(2880))
                    .inputFluids(Water.getFluid(16000))
                    .inputFluids(Naquadria.getFluid(1152))
                    .outputItems(last_bat)
                    .save(provider);

            ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(2000).EUt(300000)
                    .inputItems(plate, Neutronium, 16)
                    .inputItems(dust,ENERGY_LAPOTRONIC_ORB2, 8)
                    .inputItems(dust,FIELD_GENERATOR_UV, 2)
                    .inputItems(dust,HIGH_POWER_INTEGRATED_CIRCUIT.getStackForm(64))
                    .inputItems(dust,HIGH_POWER_INTEGRATED_CIRCUIT.getStackForm(64))
                    .inputItems(dust,SMD_DIODE, 16)
                    .inputItems(wireGtSingle, MarkerMaterials.Tier.Superconductor, 32)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputItems(circuit, MarkerMaterials.Tier.Infinite)
                    .inputFluids(SolderingAlloy.getFluid(2880))
                    .inputFluids(Water.getFluid(16000))
                    .outputItems(last_bat)
                    .save(provider);
        }
    }





public class BrineChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // NH3 + C3H6 + 3O -> 3H2O + C3H3N
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .notConsumable(dust, Platinum)
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(Propene.getFluid(1000))
                .inputFluids(Oxygen.getFluid(3000))
                .outputFluids(Water.getFluid(3000))
                .outputFluids(AcryloNitrile.getFluid(1000))
                .save(provider);

        // S + NaCN -> NaSCN
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Sulfur)
                .inputFluids(SodiumCyanide.getFluid(1000))
                .outputFluids(SodiumThiocyanate.getFluid(1000))
                .save(provider);

        // NO + C3H3N + NaSCN -> [C3H3N]n(NaSCN) polymerized with Oxygen bond
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(30)
                .inputFluids(NitricOxide.getFluid(1000))
                .inputFluids(AcryloNitrile.getFluid(1000))
                .inputFluids(SodiumThiocyanate.getFluid(1000))
                .outputFluids(PolyacrylonitrileSolution.getFluid(1000))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(240).EUt(7680)
                .inputItems(plate, RhodiumPlatedPalladium, 4)
                .inputItems(dust,ELECTRIC_MOTOR_LUV)
                .outputItems(RAPIDLY_ROTATING_CRUCIBLE)
                .save(provider);

        // [C3H3N]n -> NaSCN + (solidified)[C3H3N]n
        BLAST_RECIPES.recipeBuilder().duration(180).EUt(120).blastFurnaceTemp(600)
                .notConsumable(RAPIDLY_ROTATING_CRUCIBLE)
                .inputFluids(PolyacrylonitrileSolution.getFluid(1000))
                .outputItems(AcrylicFibers)
                .outputFluids(SodiumThiocyanate.getFluid(1000))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(60).EUt(24)
                .inputItems(dust,AcrylicFibers)
                .inputItems(wireFine, Gold)
                .outputItems(ACRYLIC_YARN)
                .save(provider);

        // CH2O2 + CH3OH -> H2O + C2H4O2
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputFluids(FormicAcid.getFluid(1000))
                .inputFluids(Methanol.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(MethylFormate.getFluid(1000))
                .save(provider);

        // C2H4O2 + 2NH3 + 2O -> 2CH3NO(H2O)
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(120)
                .inputFluids(MethylFormate.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(Oxygen.getFluid(2000))
                .outputFluids(WetFormamide.getFluid(1000))
                .save(provider);

        // CH3NO(H2O) -> CH3NO + H2O
        DISTILLATION_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputFluids(WetFormamide.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(Formamide.getFluid(1000))
                .save(provider);

        // CH3NO(H2O) -> CH3NO + H2O
        FLUID_HEATER_RECIPES.recipeBuilder().duration(60).EUt(30)
                .circuitMeta(0)
                .inputFluids(WetFormamide.getFluid(100))
                .outputFluids(Formamide.getFluid(100))
                .save(provider);

        // NH4NO3 + 2 SO2 + 3 H2O + 2 NH3 = [(NH3OH)2SO4 + (NH4)2SO4]
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputFluids(AmmoniumNitrate.getFluid(1000))
                .inputFluids(SulfurDioxide.getFluid(2000))
                .inputFluids(Water.getFluid(3000))
                .inputFluids(Ammonia.getFluid(2000))
                .outputFluids(HydroxylamineDisulfate.getFluid(2000))
                .save(provider);

        // [(NH3OH)2SO4 + (NH4)2SO4] + 2 NH3 -> 2H3NO + 2 (NH4)2SO4
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputFluids(HydroxylamineDisulfate.getFluid(2000))
                .inputFluids(Ammonia.getFluid(2000))
                .outputFluids(Hydroxylamine.getFluid(2000))
                .outputFluids(AmmoniumSulfate.getFluid(2000))
                .save(provider);

        // CH3NO + H3NO -> H3N2O(CH) + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputFluids(Formamide.getFluid(1000))
                .inputFluids(Hydroxylamine.getFluid(1000))
                .outputFluids(Amidoxime.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(40).EUt(480)
                .inputItems(dust,ACRYLIC_YARN)
                .inputFluids(Amidoxime.getFluid(100))
                .outputItems(HEAVY_METAL_ABSORBING_YARN)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust,HEAVY_METAL_ABSORBING_YARN)
                .inputFluids(SeaWater.getFluid(16000))
                .outputItems(URANIUM_SATURATED_YARN)
                .outputFluids(SaltWater.getFluid(16000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(1920)
                .inputItems(dust,URANIUM_SATURATED_YARN)
                .inputFluids(NitricAcid.getFluid(100))
                .chancedOutput(HEAVY_METAL_ABSORBING_YARN, 9900, 0)
                .outputFluids(PureUranylNitrateSolution.getFluid(100))
                .save(provider);

        // ? -> UO2(NO3)2
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(PureUranylNitrateSolution.getFluid(900))
                .outputItems(UranylNitrate, 11)
                .save(provider);

        // UO2(NO3)2 + H2O -> UO2 + 2HNO3(dil.)
        BLAST_RECIPES.recipeBuilder().duration(200).EUt(120).blastFurnaceTemp(500)
                .inputItems(dust,UranylNitrate, 11)
                .inputFluids(Water.getFluid(1000))
                .outputItems(dioxide, UraniumRadioactive.getMaterial(), 3)
                .outputFluids(DiluteNitricAcid.getFluid(2000))
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder().duration(300).EUt(480)
                .inputFluids(DiluteNitricAcid.getFluid(2000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(NitricAcid.getFluid(1000))
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(DebrominatedWater.getFluid(1000))
                .outputFluids(Brine.getFluid(100))
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(200).EUt(480)
                .circuitMeta(1)
                .inputFluids(SaltWater.getFluid(1000))
                .outputFluids(Brine.getFluid(100))
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(SeaWater.getFluid(1000))
                .outputFluids(Brine.getFluid(100))
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputFluids(Brine.getFluid(1000))
                .outputFluids(ConcentratedBrine.getFluid(800))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(BrominatedBrine.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(AcidicBrominatedBrine.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(AcidicBrominatedBrine.getFluid(1000))
                .inputFluids(SulfurDioxide.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(Brine.getFluid(1000))
                .outputFluids(SulfuricBromineSolution.getFluid(1000))
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputFluids(ConcentratedBrine.getFluid(1000))
                .outputFluids(CalciumFreeBrine.getFluid(1000))
                .outputItems(CalciumSalts, 13)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(160).EUt(120)
                .inputFluids(CalciumFreeBrine.getFluid(1000))
                .outputFluids(SodiumFreeBrine.getFluid(1000))
                .outputItems(SodiumSalts, 4)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputFluids(SodiumFreeBrine.getFluid(1000))
                .outputFluids(PotassiumFreeBrine.getFluid(1000))
                .outputItems(PotassiumMagnesiumSalts, 30)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(480)
                .inputItems(dust,BORON_RETAINING_YARN)
                .inputFluids(PotassiumFreeBrine.getFluid(1000))
                .outputItems(BORON_SATURATED_YARN)
                .outputFluids(BoronFreeSolution.getFluid(1000))
                .save(provider);

        // Na2CO3, CaO
        MIXER_RECIPES.recipeBuilder().duration(80).EUt(1920)
                .inputItems(dust, SodaAsh ,6)
                .inputItems(dust, Quicklime, 2)
                .inputFluids(BoronFreeSolution.getFluid(1000))
                .outputItems(CalciumMagnesiumSalts, 16)
                .outputFluids(SodiumLithiumSolution.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(480)
                .inputItems(dust,LITHIUM_SIEVE)
                .inputFluids(SodiumLithiumSolution.getFluid(1000))
                .outputFluids(SaltWater.getFluid(1000))
                .outputItems(LITHIUM_SATURATED_LITHIUM_SIEVE)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputItems(dust,LITHIUM_SATURATED_LITHIUM_SIEVE)
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .chancedOutput(LITHIUM_SIEVE, 9000, 0)
                .outputFluids(LithiumChlorideSolution.getFluid(1000))
                .save(provider);

        // Al + 3H -> AlH3
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(30)
                .inputItems(dust, Aluminium)
                .inputFluids(Hydrogen.getFluid(3000))
                .outputItems(AluminiumHydride, 4)
                .save(provider);

        // NaH + AlH3 -> NaAlH4
        MIXER_RECIPES.recipeBuilder().duration(190).EUt(30)
                .inputItems(dust,SodiumHydride, 2)
                .inputItems(dust,AluminiumHydride, 4)
                .outputItems(SodiumAluminiumHydride, 6)
                .save(provider);

        // LiCl + NaAlH4 + H2O -> NaCl(H2O) + LiAlH4
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(3000)
                .inputItems(dust,LithiumChloride, 2)
                .inputItems(dust,SodiumAluminiumHydride, 6)
                .inputFluids(Water.getFluid(1000))
                .outputItems(LithiumAluminiumHydride, 6)
                .outputFluids(SaltWater.getFluid(1000))
                .save(provider);

        // C12H22O11 + H2O -> C6H12O6 + C6H12O6
        // Input 2 sugar, 45 is too hard
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(300).EUt(480)
                .inputItems(dust, Sugar, 2)
                .inputFluids(Water.getFluid(1000))
                .outputItems(Glucose, 24)
                .outputItems(Fructose, 24)
                .save(provider);

        // C6H10O5 + bacteria -> C6H12O6
        BIO_REACTOR_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust,Cellulose.getItemStack(21))
                .inputItems(dust,EschericiaColi)
                .outputItems(Glucose, 24)
                .save(provider);

        // Na + NH3 -> H + NaNH2
        CHEMICAL_RECIPES.recipeBuilder().duration(110).EUt(120)
                .inputItems(dust, Sodium)
                .inputFluids(Ammonia.getFluid(1000))
                .circuitMeta(0)
                .outputFluids(Hydrogen.getFluid(1000))
                .outputItems(SodiumAzanide, 4)
                .save(provider);

        // NH4NO3 -> N2O + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputFluids(AmmoniumNitrate.getFluid(1000))
                .circuitMeta(1)
                .outputFluids(NitrousOxide.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // 2NaNH2 + N2O -> NH3 + NaOH + NaN3
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(120)
                .inputItems(dust,SodiumAzanide, 8)
                .inputFluids(NitrousOxide.getFluid(1000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputItems(dust, SodiumHydroxide, 3)
                .outputItems(SodiumAzide, 4)
                .save(provider);

        // NaOH + H2O -> NaOH(H2O)
        MIXER_RECIPES.recipeBuilder().duration(60).EUt(30)
                .circuitMeta(0)
                .inputItems(dust, SodiumHydroxide, 3)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(SodiumHydroxideSolution.getFluid(1000))
                .save(provider);

        // C6H12O6 + LiAlH4 + NaN3 + H2SO4 + H2O -> LiOH(H2O) + C6H11O5NH2 + AlH3 + NaHSO4 + 2 N
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(120)
                .inputItems(dust,Glucose, 24)
                .inputItems(dust,LithiumAluminiumHydride, 6)
                .inputItems(dust,SodiumAzide, 4)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(Nitrogen.getFluid(2000))
                .outputFluids(LithiumHydroxideSolution.getFluid(1000))
                .outputItems(dust, Glucosamine.getItemStack(25))
                .outputItems(AluminiumHydride, 4)
                .outputItems(dust, SodiumBisulfate, 7)
                .save(provider);

        // AlH3 + 3H2O -> Al(OH)3 + 6H
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputItems(dust,AluminiumHydride, 4)
                .inputFluids(Water.getFluid(3000))
                .outputItems(AluminiumHydroxide, 7)
                .outputFluids(Hydrogen.getFluid(6000))
                .save(provider);

        // [C6H11NO4]n + bacteria -> C6H13NO5
        BIO_REACTOR_RECIPES.recipeBuilder().duration(100).EUt(4096)
                .inputFluids(Chitosan.getFluid(1000))
                .inputItems(dust,EschericiaColi)
                .outputItems(dust, Glucosamine.getItemStack(25))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(50).EUt(480)
                .inputItems(dust,Glucosamine, 2)
                .inputItems(wireFine, Gold)
                .inputFluids(Polystyrene.getFluid(144))
                .outputItems(BORON_RETAINING_YARN)
                .save(provider);

        // 2NaOH + H2SO4 + HBO2 -> H3BO3 + Na2SO4(H2O)
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(480)
                .inputItems(dust,BORON_SATURATED_YARN)
                .inputItems(dust, SodiumHydroxide, 6)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(BoricAcid.getFluid(1000))
                .outputFluids(SodiumSulfateSolution.getFluid(1000))
                .chancedOutput(BORON_RETAINING_YARN, 9900, 0)
                .save(provider);

        // 2H3BO3 -> 3H2O + B2O3 (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(100).EUt(120)
                .notConsumable(dust, Boron)
                .inputFluids(BoricAcid.getFluid(2000))
                .outputItems(BoronOxide, 5)
                .save(provider);

        // B2O3 -> 2B + 3O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(400).EUt(120)
                .inputItems(dust,BoronOxide, 5)
                .outputItems(dust, Boron, 2)
                .outputFluids(Oxygen.getFluid(3000))
                .save(provider);

        // B2O3 + 6HF -> 3H2O + 2BF3
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(120)
                .inputItems(dust,BoronOxide, 5)
                .inputFluids(HydrofluoricAcid.getFluid(6000))
                .outputFluids(Water.getFluid(3000))
                .outputFluids(BoronFluoride.getFluid(2000))
                .save(provider);

        // 4BF3 + 3LiAlH4 -> 2B2H6 + 3AlF4Li
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(30)
                .inputFluids(BoronFluoride.getFluid(4000))
                .inputItems(dust,LithiumAluminiumHydride, 18)
                .outputFluids(Diborane.getFluid(2000))
                .outputItems(dust, LithiumAluminiumFluoride, 18)
                .save(provider);

        // LiAlF4 -> AlF3 + LiF
        ELECTROLYZER_RECIPES.recipeBuilder().duration(250).EUt(120)
                .inputItems(dust,LithiumAluminiumFluoride, 6)
                .outputItems(dust, AluminiumTrifluoride, 4)
                .outputItems(dust, LithiumFluoride, 2)
                .save(provider);

        // 2AlF3 + 3H2O -> Al2O3 + 6HF
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputItems(dust,AluminiumTrifluoride, 8)
                .inputFluids(Water.getFluid(3000))
                .outputItems(dust, Alumina, 5)
                .outputFluids(HydrofluoricAcid.getFluid(6000))
                .save(provider);

        // B2H6 -> 2B + 6H (H lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(60).EUt(480)
                .notConsumable(dust, Boron)
                .inputFluids(Diborane.getFluid(1000))
                .outputItems(dust, Boron, 2)
                .save(provider);

        // Na + H -> NaH
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(30)
                .inputItems(dust, Sodium)
                .inputFluids(Hydrogen.getFluid(1000))
                .outputItems(dust, SodiumHydride, 2)
                .save(provider);

        // C + 2S -> CS2
        BLAST_RECIPES.recipeBuilder().duration(120).EUt(120).blastFurnaceTemp(1000)
                .inputItems(dust, Carbon)
                .inputItems(dust, Sulfur, 2)
                .outputFluids(CarbonSulfide.getFluid(1000))
                .outputItems(dustTiny, Ash)
                .save(provider);

        // 3C + 2HCl + 2CH3NH2 + CS2 -> 2C3H6ClNS
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputItems(dust, Carbon, 3)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputFluids(Methylamine.getFluid(2000))
                .inputFluids(CarbonSulfide.getFluid(1000))
                .outputFluids(DimethylthiocarbamoilChloride.getFluid(2000))
                .outputFluids(Oxygen.getFluid(6000))
                .save(provider);

        // C6H6O2 + (CH3)2NCClS  + LiAlH4 -> C6H6OS + (CH3)2NCHO + LiCl + AlH3
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(500)
                .notConsumable(dust, Palladium)
                .notConsumable(dust, SodiumHydride)
                .notConsumable(Dimethylformamide.getFluid(500))
                .inputFluids(Resorcinol.getFluid(1000))
                .inputFluids(DimethylthiocarbamoilChloride.getFluid(1000))
                .inputItems(dust,LithiumAluminiumHydride, 6)
                .outputFluids(Mercaptophenol.getFluid(1000))
                .outputFluids(Dimethylformamide.getFluid(1000))
                .outputItems(LithiumChloride, 2)
                .outputItems(AluminiumHydride, 4)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder().duration(40).EUt(120)
                .inputFluids(Hydrogen.getFluid(250))
                .inputFluids(Dimethylformamide.getFluid(750))
                .outputFluids(Formaldehyde.getFluid(120))
                .outputFluids(Dimethylamine.getFluid(160))
                .save(provider);

        // CH3OH + NH3 -> CH3OH(NH3)
        MIXER_RECIPES.recipeBuilder().duration(160).EUt(960)
                .notConsumable(dust, Nickel)
                .inputFluids(Methanol.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(AmineMixture.getFluid(2000))
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(AmineMixture.getFluid(2000))
                .outputFluids(Trimethylamine.getFluid(500))
                .outputFluids(Dimethylamine.getFluid(800))
                .outputFluids(Methylamine.getFluid(700))
                .save(provider);

        //(CH3)2NH + HCOOCH3 -> (CH3)2NCHO + CH3OH
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(Dimethylamine.getFluid(1000))
                .inputFluids(MethylFormate.getFluid(1000))
                .outputFluids(Dimethylformamide.getFluid(1000))
                .outputFluids(Methanol.getFluid(1000))
                .save(provider);

        // MoO3 + 2NaOH -> Na2MoO4 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(30)
                .inputItems(dust,MolybdenumTrioxide, 4)
                .inputItems(dust, SodiumHydroxide, 6)
                .outputItems(SodiumMolybdate, 7)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // 12Na2MoO4 + H3PO4 -> Mo12Na3O40P + 10 Na2O + H2O + NaOH (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(180).EUt(1920)
                .inputItems(dust,SodiumMolybdate, 84)
                .inputFluids(PhosphoricAcid.getFluid(1000))
                .outputItems(SodiumPhosphomolybdate, 56)
                .outputItems(dust, SodiumHydroxide, 3)
                .outputItems(SodiumOxide, 30)
                .save(provider);

        // 12Na2WO4 + H3PO4 -> Na3O40PW12 + 10 Na2O + H2O + NaOH (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(180).EUt(1920)
                .inputFluids(SodiumTungstate.getFluid(12000))
                .inputFluids(PhosphoricAcid.getFluid(1000))
                .outputItems(SodiumPhosphotungstate, 56)
                .outputItems(dust, SodiumHydroxide, 3)
                .outputItems(SodiumOxide, 30)
                .save(provider);

        // C3H6 + H2O -> C3H8O
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputFluids(Propene.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(IsopropylAlcohol.getFluid(1000))
                .notConsumable(SodiumPhosphomolybdate)
                .notConsumable(SodiumPhosphotungstate)
                .save(provider);

        //2 IrCl3 + 2 C8H12 -> (C8H12)2Ir2Cl2 + 4 Cl
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, IridiumChloride, 8)
                .inputFluids(Cyclooctadiene.getFluid(2000))
                .outputItems(IridiumCyclooctadienylChlorideDimer, 44)
                .outputFluids(Chlorine.getFluid(4000))
                .save(provider);

        //4 Li + PCl3 + 2 C3H8O + 2 H2O -> 2 LiCl + 2 [LiOH + H2O] + P(C3H7)2Cl
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(500)
                .inputItems(dust, Lithium, 4)
                .inputFluids(Water.getFluid(2000))
                .inputFluids(PhosphorusTrichloride.getFluid(1000))
                .inputFluids(IsopropylAlcohol.getFluid(2000))
                .outputItems(LithiumChloride, 4)
                .outputFluids(LithiumHydroxideSolution.getFluid(2000))
                .outputFluids(ChlorodiisopropylPhosphine.getFluid(1000))
                .save(provider);

        //4 P(C3H7)2Cl + (C8H12)2Ir2Cl2 + 2 C6H6OS -> 2 IrP2C18H32SOCl + 2 C8H12 + 4 HCl (divided by 2)
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(1200)
                .inputItems(dust,IridiumCyclooctadienylChlorideDimer.getItemStack(22))
                .inputFluids(ChlorodiisopropylPhosphine.getFluid(2000))
                .inputFluids(Mercaptophenol.getFluid(1000))
                .notConsumable(dust, BerylliumFluoride)
                .outputItems(DehydrogenationCatalyst, 56)
                .outputFluids(Cyclooctadiene.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // C4H8 + C8H18 -> C4H10 + C8H16
        CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(120)
                .notConsumable(DehydrogenationCatalyst)
                .inputFluids(Butene.getFluid(1000))
                .inputFluids(Octane.getFluid(1000))
                .outputFluids(Butane.getFluid(1000))
                .outputFluids(Oct1ene.getFluid(1000))
                .save(provider);

        // N(CH3)3 + Br + C8H18 + C8H16 -> C19H42BrN + H
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(480)
                .inputFluids(Trimethylamine.getFluid(1000))
                .inputFluids(Bromine.getFluid(1000))
                .inputFluids(Octane.getFluid(1000))
                .inputFluids(Oct1ene.getFluid(1000))
                .outputFluids(CetaneTrimethylAmmoniumBromide.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(480)
                .inputFluids(Styrene.getFluid(1000))
                .notConsumable(AmmoniumPersulfate.getFluid(0))
                .inputFluids(CetaneTrimethylAmmoniumBromide.getFluid(20))
                .outputItems(PolystyreneNanoParticles)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(480)
                .inputItems(dust, LithiumTitanate, 2)
                .inputItems(dust,PolystyreneNanoParticles, 2)
                .outputItems(LITHIUM_SIEVE)
                .outputFluids(Styrene.getFluid(2000))
                .save(provider);

        // CaCO3, CaSO4(H2O)2
        CENTRIFUGE_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust,CalciumSalts, 13)
                .outputItems(dust, Calcite, 5)
                .outputItems(dust, Gypsum, 8)
                .save(provider);

        // NaCl, NaF
        CENTRIFUGE_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust,SodiumSalts, 2)
                .outputItems(dust, Salt, 2)
                .chancedOutput(ChemicalHelper.get(dustTiny, SodiumFluoride, 2), 400, 0)
                .save(provider);

        // KCl, MgSO4, K2SO4
        CENTRIFUGE_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust,PotassiumMagnesiumSalts, 15)
                .outputItems(dust, RockSalt, 2)
                .outputItems(MagnesiumSulfate, 6)
                .outputItems(PotassiumSulfate, 7)
                .chancedOutput(ChemicalHelper.get(dustTiny, PotassiumFluoride, 2), 400, 0)
                .save(provider);

        // CaCO3, CO2, MgO
        CENTRIFUGE_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust,CalciumMagnesiumSalts, 8)
                .outputItems(dust, Calcite, 5)
                .chancedOutput(StrontiumCarbonate, 5, 40, 0)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(dust, Magnesia, 2)
                .save(provider);

        // MgSO4 -> Mg + S + 4O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust,MagnesiumSulfate, 6)
                .outputItems(dust, Magnesium)
                .outputItems(dust, Sulfur)
                .outputFluids(Oxygen.getFluid(4000))
                .save(provider);

        // MgO + 2HCl -> 2H2O + MgCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(120)
                .inputItems(dust, Magnesia, 2)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(Water.getFluid(2000))
                .outputItems(dust, MagnesiumChloride, 3)
                .save(provider);

        // SrSO4 + Na2CO3 + 2C -> SrCO3 + 2CO2 + Na2S
        BLAST_RECIPES.recipeBuilder().duration(360).EUt(120).blastFurnaceTemp(1200)
                .inputItems(dust, Celestine, 6)
                .inputItems(dust, SodaAsh, 6)
                .inputItems(dust, Carbon, 2)
                .outputItems(StrontiumCarbonate, 5)
                .outputFluids(CarbonDioxide.getFluid(2000))
                .outputItems(dust, SodiumSulfide, 3)
                .save(provider);

        // SrCO3 -> SrO + CO2
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust,StrontiumCarbonate, 5)
                .outputItems(StrontiumOxide, 2)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // SrO -> Sr + O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(300).EUt(120)
                .inputItems(dust,StrontiumOxide, 2)
                .outputItems(dust, Strontium)
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputFluids(Brine.getFluid(6400))
                .outputFluids(ChilledBrine.getFluid(3000))
                .save(provider);

        // CaCO3, CaSO4(H2O)2, NaCl, KCl
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(190).EUt(480)
                .inputFluids(ChilledBrine.getFluid(2000))
                .outputFluids(MagnesiumContainingBrine.getFluid(1000))
                .outputItems(dust, Calcite, 5)
                .outputItems(dust, Gypsum, 8)
                .outputItems(dust, Salt, 2)
                .outputItems(dust, RockSalt, 2)
                .save(provider);

        // MgCl2, MgSO4
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(270).EUt(480)
                .inputFluids(MagnesiumContainingBrine.getFluid(1000))
                .outputItems(dust, MagnesiumChloride, 3)
                .outputItems(MagnesiumSulfate, 6)
                .outputFluids(LithiumChlorideSolution.getFluid(200))
                .save(provider);
    }
}





public class ChromiumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Na2CO3 + H2O -> Na2CO3(H2O)
        MIXER_RECIPES.recipeBuilder().duration(60).EUt(30)
                .inputItems(dust, SodaAsh, 6)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(SodiumCarbonateSolution.getFluid(1000))
                .save(provider);

        // 2NaOH + CO2 -> Na2CO3 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(480)
                .inputItems(dust, SodiumHydroxide, 6)
                .inputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(dust, SodaAsh, 6)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // CaCO3 + 2NaCl -> Na2CO3 + CaCl2
        BLAST_RECIPES.recipeBuilder().duration(120).EUt(120).blastFurnaceTemp(500)
                .inputItems(dust, Calcite, 5)
                .inputItems(dust, Salt, 4)
                .outputItems(dust, SodaAsh, 6)
                .outputItems(dust, CalciumChloride, 3)
                .save(provider);

        // 2Cr2FeO4 + 4Na2CO3(H2O) + 7O -> Fe2O3 + 4CO2 + 4Na2CrO4(H2O)
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust, Chromite, 7)
                .inputFluids(SodiumCarbonateSolution.getFluid(4000))
                .inputFluids(Oxygen.getFluid(7000))
                .outputItems(dust, BandedIron, 5)
                .outputFluids(CarbonDioxide.getFluid(4000))
                .outputFluids(SodiumChromateSolution.getFluid(4000))
                .save(provider);

        // 2Na2CrO4(H2O) + H2SO4 -> Na2Cr2O7(H2O) + Na2SO4 + 2H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputFluids(SodiumChromateSolution.getFluid(2000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(SodiumDichromateSolution.getFluid(1000))
                .outputItems(dust, SodiumSulfate, 7)
                .save(provider);

        // 2C + Na2Cr2O7(H2O) -> Na2CO3 + Cr2O3 + CO + H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust, Carbon, 2)
                .inputFluids(SodiumDichromateSolution.getFluid(1000))
                .outputItems(dust, SodaAsh, 6)
                .outputItems(ChromiumIIIOxide, 5)
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .save(provider);

        // Cr2O3 + 2Al -> 2 Cr + Al2O3
        BLAST_RECIPES.recipeBuilder().duration(200).EUt(120).blastFurnaceTemp(1200)
                .inputItems(dust,ChromiumIIIOxide, 5)
                .inputItems(dust, Aluminium, 2)
                .outputItems(dust, Chrome, 2)
                .outputItems(dust, Alumina, 5)
                .save(provider);

        // Combined Step - Chromite
        CHEMICAL_BATH_RECIPES.recipeBuilder().EUt(1920).duration(200)
                .inputItems(dust, Chromite, 7)
                .inputFluids(SulfuricAcid.getFluid(3000))
                .outputItems(dust, BandedIron, 5)
                .outputItems(dust, Sulfur, 3)
                .outputItems(dust, Chrome, 4)
                .save(provider);

        // Na2SO4(H2O) -> Na2SO4
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputFluids(SodiumSulfateSolution.getFluid(1000))
                .outputItems(dust, SodiumSulfate, 7)
                .save(provider);

        // Al2O3Cr + (HNO3 + HCl) -> Al2O3Cr(HNO3HCl)
        MIXER_RECIPES.recipeBuilder().duration(280).EUt(1920)
                .inputItems(dust, Ruby, 6)
                .inputFluids(AquaRegia.getFluid(2000))
                .outputFluids(RubySlurry.getFluid(2000))
                .save(provider);

        // Al2O3Cr(HNO3HCl) -> 2Al + Cr + 3O + Ti + Fe + V + HNO3 + HCl
        CENTRIFUGE_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputFluids(RubySlurry.getFluid(2000))
                .outputItems(dust, Aluminium, 2)
                .outputItems(dust, Chrome)
                .chancedOutput(ChemicalHelper.get(dustTiny, Titanium), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Iron), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Vanadium), 2000, 0)
                .outputFluids(Oxygen.getFluid(3000))
                .outputFluids(NitricAcid.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .save(provider);

        // Al2O3 + (HNO3 + HCl) -> Al2O3(HNO3HCl)
        MIXER_RECIPES.recipeBuilder().duration(280).EUt(1920)
                .inputItems(dust, Sapphire, 5)
                .inputFluids(AquaRegia.getFluid(2000))
                .outputFluids(SapphireSlurry.getFluid(2000))
                .save(provider);

        // Al2O3(HNO3HCl) -> 2Al + 3O + Ti + Fe + V + HNO3 + HCl
        CENTRIFUGE_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputFluids(SapphireSlurry.getFluid(2000))
                .outputItems(dust, Aluminium, 2)
                .chancedOutput(ChemicalHelper.get(dustTiny, Titanium), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Iron), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Vanadium), 2000, 0)
                .outputFluids(Oxygen.getFluid(3000))
                .outputFluids(NitricAcid.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .save(provider);

        // Al2O3 + (HNO3 + HCl) -> Al2O3(HNO3HCl)
        MIXER_RECIPES.recipeBuilder().duration(280).EUt(1920)
                .inputItems(dust, GreenSapphire, 5)
                .inputFluids(AquaRegia.getFluid(2000))
                .outputFluids(GreenSapphireSlurry.getFluid(2000))
                .save(provider);

        // Al2O3(HNO3HCl) -> 2Al + 3O + Be + Ti + Fe + V + HNO3 + HCl
        CENTRIFUGE_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputFluids(GreenSapphireSlurry.getFluid(2000))
                .outputItems(dust, Aluminium, 2)
                .chancedOutput(ChemicalHelper.get(dustTiny, Beryllium), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Titanium), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Iron), 2000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Vanadium), 2000, 0)
                .outputFluids(Oxygen.getFluid(3000))
                .outputFluids(NitricAcid.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .save(provider);
    }
}



public class CombinedChains {

        public static void init(Consumer<FinishedRecipe> provider) {

        // Fullerenes ================================================================================================

        // 10C10H8 + 10C8H10 -> 3C60H30 + 90H (H voided)
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(40).EUt(31457280) // UIV
                .inputFluids(Naphthalene.getFluid(10000))
                .inputFluids(EthylBenzene.getFluid(10000))
                .outputItems(UnfoldedFullerene, 3)
                .save(provider);


        // Naquadah ==================================================================================================

        // Naquadric Compound [Nq] + KHSO5 + 2H -> Nq + KOH + H2SO4
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(50).EUt(491520) // UV
                .inputItems(dust, NaquadricCompound)
                .inputItems(dust,PotassiumPeroxymonosulfate, 8)
                .inputFluids(Hydrogen.getFluid(2000))
                .outputItems(dust, Naquadah)
                .outputFluids(PotassiumHydroxide.getFluid(1000))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .save(provider);

        // Enriched Naquadric Compound [Nq+] + Au2Cl6 + Xe + 3O -> Nq+ + 2Au + 6Cl + XeO3
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(50).EUt(491520) // UV
                .inputItems(dust, EnrichedNaquadricCompound)
                .inputFluids(AuricChloride.getFluid(1000))
                .inputFluids(Xenon.getFluid(1000))
                .inputFluids(Oxygen.getFluid(3000))
                .outputItems(dust, NaquadahEnriched)
                .outputItems(dust, Gold, 2)
                .outputFluids(Chlorine.getFluid(6000))
                .outputFluids(XenonTrioxide.getFluid(1000))
                .save(provider);

        // Naquadriatic Compound [*Nq*] + Rn + Xe + 6O -> *Nq* + RnO3 + XeO3
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(50).EUt(491520) // UV
                .inputItems(dust, NaquadriaticCompound)
                .inputFluids(Radon.getFluid(1000))
                .inputFluids(Xenon.getFluid(1000))
                .inputFluids(Oxygen.getFluid(6000))
                .outputItems(dust, Naquadria)
                .outputFluids(RadonTrioxide.getFluid(1000))
                .outputFluids(XenonTrioxide.getFluid(1000))
                .save(provider);


        // Polymers ==================================================================================================


        // Rubber (unneeded)

        // Polyethylene (unneeded)

        // Polyvinyl Chloride (unneeded)

        // Polystyrene (unneeded)

        // Styrene-Butadiene Rubber (unneeded)

        // Polytetrafluoroethylene (unneeded)

        // Epoxy
        // 2C6H6 + 8O + 2C2H4 + C3H6 -> C2H4O + CO2 + 3H2O (gtce epoxy is not balanced)
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(60).EUt(30720) // LuV
                .inputFluids(Benzene.getFluid(2000))
                .inputFluids(Oxygen.getFluid(8000))
                .inputFluids(Ethylene.getFluid(2000))
                .inputFluids(Propene.getFluid(1000))
                .notConsumable(HydrochloricAcid.getFluid(0))
                .outputFluids(Epoxid.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .save(provider);

        // 4,4'-Oxydianiline-Pyromellitimide
        // C6H4(CH3)2 + 2CH3Cl + 12O + 2C6H5NH2 + C2H5OH -> C22H14N2O7 + 2CH4 + 6H2O + 2HCl
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(80).EUt(491520) // UV
                .notConsumable(dust, Tin)
                .inputFluids(OrthoXylene.getFluid(1000))
                .inputFluids(Chloromethane.getFluid(2000))
                .inputFluids(Oxygen.getFluid(12000))
                .inputFluids(Aniline.getFluid(2000))
                .inputFluids(Phenol.getFluid(1000))
                .outputFluids(Polyimide.getFluid(1008))
                .outputFluids(Methane.getFluid(2000))
                .outputFluids(Water.getFluid(6000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // Fluorinated-Ethylene Proplyene (unneeded)

        // Polybenzimidazole
        // 2NH3 + 2HNO3 + 3C6H6 + 3O + C2H4 -> C20H12N4 + 9H2O
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(70).EUt(1966080) // UHV
                .notConsumable(dust, Zinc)
                .inputFluids(Oxygen.getFluid(3000))
                .inputFluids(Ethylene.getFluid(1000))
                .inputFluids(Ammonia.getFluid(2000))
                .inputFluids(NitricAcid.getFluid(2000))
                .inputFluids(Benzene.getFluid(3000))
                .outputFluids(Polybenzimidazole.getFluid(1008))
                .outputFluids(Water.getFluid(10000))
                .save(provider);

        // PolyEtherEtherKetone
        // C6H6O2 + 2C6H5F + Na2CO3 -> [(OC6H4)3C]n + 2NaF + 2H2O
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(120).EUt(31457280) // UIV
                .inputItems(dust, SodaAsh, 6)
                .inputFluids(Hydroquinone.getFluid(1000))
                .inputFluids(FluoroBenzene.getFluid(2000))
                .outputFluids(Polyetheretherketone.getFluid(2592))
                .outputFluids(Water.getFluid(2000))
                .outputItems(dust, SodiumFluoride, 4)
                .EUt(122880)
                .duration(250)
                .save(provider);

        // Zylon
        // C6H6O2 + 2HNO3 + C8H10 -> C14H6N2O2 + 6H2O
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(30).EUt(31457280) // UIV
                .notConsumable(AuPdCCatalyst)
                .inputFluids(Resorcinol.getFluid(1000))
                .inputFluids(NitricAcid.getFluid(2000))
                .inputFluids(OrthoXylene.getFluid(1000))
                .outputItems(dust, Zylon)
                .outputFluids(Water.getFluid(6000))
                .save(provider);

        // Fullerene Polymer Matrix
        // Pd + C10H10Fe + C60 + C3H7NO2 -> PdC73H15NFe + H2O + O (voided water)
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(60).EUt(31457280 * 2) // UXV
                .inputItems(dust,Fullerene)
                .inputItems(dust,Sarcosine, 13)
                .inputItems(dust, Palladium, 1)
                .inputFluids(Ferrocene.getFluid(1000))
                .notConsumable(AceticAcid.getFluid(500))
                .notConsumable(SodiumEthoxide)
                .notConsumable(AluminiumChloride)
                .notConsumable(Chloroform)
                .notConsumable(Toluene)
                .outputItems(PdFullereneMatrix)
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);


        // 7C8H8 + 8CH2Cl2 + 8C60 + 8C11H14O2 + 8C2H6S + 8C6H5Cl -> 8C7H8 + 8H2S + 8C80H21O2 + 24HCl
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(60).EUt(31457280 * 4) // UXV
                .notConsumable(Dimethylaminopyridine)
                .inputItems(dust,Fullerene, 8)
                .inputFluids(Styrene.getFluid(7000))
                .inputFluids(Dichloromethane.getFluid(8000))
                .inputFluids(Phenylpentanoicacid.getFluid(8000))
                .inputFluids(Dimethylsulfide.getFluid(8000))
                .inputFluids(Chlorobenzene.getFluid(8000))
                .outputFluids(Toluene.getFluid(8000))
                .outputFluids(HydrogenSulfide.getFluid(8000))
                .outputFluids(HydrochloricAcid.getFluid(24000))
                .outputFluids(PCBS.getFluid(8000))
                .save(provider);

        // Combined Process - Uraninite
        CHEMICAL_PLANT_RECIPES.recipeBuilder().EUt(7680).duration(864)
                .inputItems(dust, Uraninite, 3)
                .inputFluids(NitrationMixture.getFluid(4000))
                .outputItems(dioxide, UraniumRadioactive.getMaterial(), 3)
                .outputFluids(UraniumSulfateWasteSolution.getFluid(1000))
                .outputFluids(UraniumRefinementWasteSolution.getFluid(1000))
                .outputFluids(ThoriumNitrateSolution.getFluid(1000))
                .save(provider);
    }
}




public class CosmicChain { // TODO

        public static void init(Consumer<FinishedRecipe> provider) {

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(60).EUt(14000000)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.LEPTONIC_CHARGE))
                .inputItems(dust,DEGENERATE_RHENIUM_DUST)
                .outputFluids(QuarkGluonPlasma.getFluid(4000))
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(60).EUt(14000000)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.LEPTONIC_CHARGE))
                .inputItems(dust,DEGENERATE_RHENIUM_PLATE)
                .outputFluids(QuarkGluonPlasma.getFluid(2000))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(600).EUt(122880)
                .inputItems(wireFine, YttriumBariumCuprate, 64)
                .inputItems(wireFine, NiobiumTitanium, 64)
                .inputItems(plate, NiobiumNitride, 8)
                .inputItems(foil, Polybenzimidazole, 16)
                .inputItems(stickLong, VanadiumGallium)
                .outputItems(SEPARATION_ELECTROMAGNET)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder().duration(200).EUt(1200000)
                .inputFluids(QuarkGluonPlasma.getFluid(1000))
                .notConsumable(SEPARATION_ELECTROMAGNET)
                .outputFluids(HeavyQuarks.getFluid(750))
                .outputFluids(Gluons.getFluid(500))
                .outputFluids(LightQuarks.getFluid(250))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(100).EUt(2400000)
                .inputFluids(HeavyLeptonMix.getFluid(1000))
                .inputFluids(HeavyQuarks.getFluid(1000))
                .inputFluids(Gluons.getFluid(1000))
                .outputFluids(CosmicComputingMix.getFluid(3000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(100).EUt(3250000)
                .inputFluids(HeavyQuarks.getFluid(750))
                .inputFluids(LightQuarks.getFluid(250))
                .outputFluids(HeavyQuarkEnrichedMix.getFluid(1000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(130).EUt(450000)
                .inputFluids(Titanium50.getFluid(144))
                .inputFluids(Scandium.getFluid(144))
                .outputFluids(ScandiumTitanium50Mix.getFluid(288))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(130).EUt(450000)
                .inputFluids(Radon.getFluid(1000))
                .inputFluids(Radium.getFluid(144))
                .outputFluids(RadonRadiumMix.getFluid(288))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(140).EUt(4500000)
                .inputFluids(Deuterium.getFluid(2000))
                .inputFluids(MetastableHassium.getFluid(144))
                .inputFluids(MetastableFlerovium.getFluid(144))
                .inputFluids(MetastableOganesson.getFluid(144))
                .outputFluids(DeuteriumSuperheavyMix.getFluid(2592))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(1100000).coilTier(3).euStart(5000000000L).euReturn(50)
                .inputFluids(DeuteriumSuperheavyMix.getFluid(144))
                .inputFluids(HeavyQuarkEnrichedMix.getFluid(144))
                .outputFluids(HeavyQuarkDegenerateMatter.getFluid(144))
                .save(provider);

        // 3HCl + Fl -> FlCl3 + 3H
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(7680)
                .inputFluids(HydrochloricAcid.getFluid(3000))
                .inputItems(dust, MetastableFlerovium)
                .outputFluids(Trichloroferane.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(3000))
                .save(provider);

        // C6H5F + 2Na -> C6H5Na + NaF
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(480)
                .inputFluids(FluoroBenzene.getFluid(1000))
                .inputItems(dust, Sodium, 2)
                .outputFluids(Phenylsodium.getFluid(1000))
                .outputItems(dust, SodiumFluoride, 2)
                .save(provider);

        // LiAlH4 + C4H6O4 -> C4H6O2 + Li + Al + 2H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(15360)
                .inputItems(dust,LithiumAluminiumHydride, 4)
                .inputItems(dust,SuccinicAcid, 14)
                .outputFluids(Succinaldehyde.getFluid(1000))
                .outputItems(dust, Lithium)
                .outputItems(dust, Aluminium)
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // 2KF + H + C6H4Cl2 + N -> 2KCl + C6H5F2N
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputItems(dust, PotassiumFluoride, 4)
                .inputFluids(Hydrogen.getFluid(1000))
                .inputFluids(Dichlorobenzene.getFluid(1000))
                .inputFluids(Nitrogen.getFluid(1000))
                .notConsumable(AluminiumChloride)
                .outputItems(dust, RockSalt, 4)
                .outputFluids(Difluoroaniline.getFluid(1000))
                .save(provider);

        // C6H5F2N + C4H6O2 -> C10H7F2N + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(480)
                .inputFluids(Difluoroaniline.getFluid(1000))
                .inputFluids(Succinaldehyde.getFluid(1000))
                .notConsumable(dust, PhosphorousPentoxide)
                .outputFluids(NDifluorophenylpyrrole.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // 6 H2O + 2 HCl + 2 AgBF4 + 8 C6H5Na + 2C8H20NBr + 2 AgClO4 + 3 (C5H5)2Cl2Ti + 6 C10H7F2N -> 4AgCl + 2NaBr + 6H2ONaCl + [3 (C5H5)2(C10H6F2N)2Ti + 2 (C6H5)4NBF4 + 8 C2H5OH]
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(350).EUt(30720)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputFluids(Silvertetrafluoroborate.getFluid(2000))
                .inputFluids(Phenylsodium.getFluid(8000))
                .inputFluids(TetraethylammoniumBromide.getFluid(2000))
                .inputItems(dust,SilverPerchlorate, 12)
                .inputItems(dust,TitaniumCyclopentadienyl.getItemStack(69))
                .inputItems(dust, Ice, 42)
                .inputFluids(NDifluorophenylpyrrole.getFluid(6000))
                .outputItems(dust, SilverChloride, 8)
                .outputItems(SodiumBromide, 4)
                .outputFluids(SaltWater.getFluid(6000))
                .outputFluids(PhotopolymerSolution.getFluid(8000))
                .save(provider);

        // 3NaClO -> 2NaCl + NaClO3
        ELECTROLYZER_RECIPES.recipeBuilder().duration(210).EUt(120)
                .inputItems(dust,SodiumHypochlorite, 9)
                .outputItems(dust, Salt, 4)
                .outputItems(SodiumChlorate, 5)
                .save(provider);

        // NaClO3 + H2O2 -> NaClO4 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust,SodiumChlorate, 5)
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputItems(SodiumPerchlorate, 6)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // Ag2O + 2NaClO4 + HCl -> 2AgClO4 + Na2O + dil.HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(480)
                .inputItems(dust, SilverOxide, 3)
                .inputItems(dust,SodiumPerchlorate, 12)
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .outputItems(SilverPerchlorate, 12)
                .outputItems(SodiumOxide, 3)
                .outputFluids(DilutedHydrochloricAcid.getFluid(1000))
                .save(provider);

        // 2AgCl + H2O -> Ag2O + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputItems(dust, SilverChloride, 4)
                .notConsumable(dust, SodiumHydroxide)
                .inputFluids(Water.getFluid(1000))
                .outputItems(dust, SilverOxide, 3)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // Ag2O + C -> 2Ag + CO
        BLAST_RECIPES.recipeBuilder().duration(80).EUt(120).blastFurnaceTemp(1200)
                .inputItems(dust, SilverOxide, 3)
                .inputItems(dust, Carbon)
                .outputItems(ingot, Silver, 2)
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .save(provider);

        // Ge + 2S -> GeS2
        CHEMICAL_RECIPES.recipeBuilder().duration(340).EUt(120)
                .inputItems(dust, Germanium)
                .inputItems(dust, Sulfur, 2)
                .outputItems(GermaniumSulfide, 3)
                .save(provider);

        // GeS2 + 6O -> GeO2 + 2SO2
        BLAST_RECIPES.recipeBuilder().duration(240).EUt(120).blastFurnaceTemp(2500)
                .inputItems(dust,GermaniumSulfide, 3)
                .inputFluids(Oxygen.getFluid(6000))
                .outputItems(GermaniumOxide, 3)
                .outputFluids(SulfurDioxide.getFluid(2000))
                .save(provider);

        // WC + 4O -> WO3 + CO
        CHEMICAL_RECIPES.recipeBuilder().duration(400).EUt(480)
                .inputItems(dust, TungstenCarbide, 2)
                .inputFluids(Oxygen.getFluid(4000))
                .outputItems(dust, TungstenTrioxide, 4)
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .save(provider);

        // CdS + WO3 + 3O -> CdWO4 + SO2
        BLAST_RECIPES.recipeBuilder().duration(320).EUt(120).blastFurnaceTemp(2800)
                .inputItems(dust,CadmiumSulfide, 2)
                .inputItems(dust, TungstenTrioxide, 4)
                .inputFluids(Oxygen.getFluid(3000))
                .outputItems(CadmiumTungstate, 6)
                .outputFluids(SulfurDioxide.getFluid(1000))
                .save(provider);

        // CsI + Tm + Tl -> CsITmTl
        BLAST_RECIPES.recipeBuilder().duration(260).EUt(120).blastFurnaceTemp(2853)
                .inputItems(dust,CesiumIodide)
                .inputItems(dustSmall, Thulium, 2)
                .inputItems(dustSmall, Thallium, 2)
                .outputItems(TlTmCesiumIodide, 2)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(240).EUt(7680)
                .inputFluids(Anthracene.getFluid(1000))
                .inputItems(dust,Tetracene, 2)
                .outputItems(PolycyclicAromaticMix, 3)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(340).EUt(120)
                .inputItems(dust, Caesium)
                .inputItems(dust, Iodine)
                .outputItems(CesiumIodide, 2)
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(500000)
                .inputFluids(BismuthNitrateSoluton.getFluid(4000))
                .inputItems(dust,GermaniumOxide, 3)
                .notConsumable(LOW_FREQUENCY_LASER)
                .outputItems(BismuthGermanate, 33)
                .outputItems(dust, Potash, 18)
                .outputFluids(NitrogenDioxide.getFluid(12000))
                .outputFluids(Water.getFluid(4000))
                .save(provider);
    }
}




public class FullereneChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // NaCN + 2 Br + C10H8 -> NaBr + C10H7CN + HBr
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Naphthalene.getFluid(1000))
                .inputFluids(SodiumCyanide.getFluid(1000))
                .inputFluids(Bromine.getFluid(2000))
                .outputItems(SodiumBromide, 2)
                .notConsumable(UVA_HALIDE_LAMP)
                .outputFluids(HydrobromicAcid.getFluid(1000))
                .outputItems(Cyanonaphthalene, 19)
                .EUt(1920)
                .duration(80)
                .save(provider);

        //HBr + Cl -> HCl + Br
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrobromicAcid.getFluid(1000))
                .inputFluids(Chlorine.getFluid(1000))
                .outputFluids(Bromine.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .duration(160)
                .EUt(125)
                .save(provider);

        //2 NaBr + H3PO4 -> 2 HBr + Na2HPO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,SodiumBromide, 4)
                .inputFluids(PhosphoricAcid.getFluid(1000))
                .outputFluids(HydrobromicAcid.getFluid(2000))
                .outputItems(DisodiumPhosphate, 8)
                .duration(190)
                .EUt(125)
                .save(provider);

        // C10H7CN + H2O + 3HCl -> C11H8O + NH4Cl + 2Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Cyanonaphthalene, 19)
                .notConsumable(TinChloride)
                .inputFluids(Water.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(3000))
                .outputFluids(Naphthaldehyde.getFluid(1000))
                .outputFluids(AmmoniumChloride.getFluid(1000))
                .outputFluids(Chlorine.getFluid(2000))
                .EUt(1920)
                .duration(80)
                .save(provider);

        // NH4Cl -> HCl + NH3
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(AmmoniumChloride.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(Ammonia.getFluid(1000))
                .duration(200)
                .EUt(120)
                .save(provider);

        // C11H8O + C8H10 + O -> C19H14 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Naphthaldehyde.getFluid(1000))
                .inputFluids(EthylBenzene.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .notConsumable(dust, Iodine)
                .notConsumable(Triphenylphosphine)
                .outputFluids(Water.getFluid(2000))
                .outputItems(Methylbenzophenanthrene, 33)
                .EUt(1920)
                .duration(100)
                .save(provider);

        // C19H14 + KCN + C4H4BrNO2 -> C20H13N + KBr + C4H5NO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Methylbenzophenanthrene, 33)
                .inputItems(dust,PotassiumCyanide, 3)
                .inputItems(dust,Bromosuccinimide, 12)
                .outputItems(Benzophenanthrenylacetonitrile, 34)
                .outputItems(PotassiumBromide, 2)
                .outputItems(Succinimide, 12)
                .EUt(1920)
                .duration(100)
                .save(provider);

        // 3C20H13N -> C60H30 + 3NH3
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Benzophenanthrenylacetonitrile.getItemStack(102))
                .notConsumable(TiAlChloride)
                .outputItems(UnfoldedFullerene)
                .outputFluids(Ammonia.getFluid(3000))
                .EUt(7680)
                .duration(250)
                .save(provider);

        // C60H30 + 10N -> C60 + 10NH3
        LARGE_ENGRAVER_RECIPES.recipeBuilder()
                .notConsumable(craftingLens, Magenta)
                .inputItems(dust,UnfoldedFullerene)
                .inputFluids(Nitrogen.getFluid(10000))
                .outputItems(Fullerene)
                .outputFluids(Ammonia.getFluid(10000))
                .EUt(2000000)
                .duration(200)
                .save(provider);

        // 6Na + PCl3 + 3C6H5Cl -> 6NaCl + C18H15P
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Sodium, 6)
                .inputFluids(PhosphorusTrichloride.getFluid(1000))
                .inputFluids(Chlorobenzene.getFluid(3000))
                .outputItems(dust, Salt, 12)
                .outputItems(Triphenylphosphine, 34)
                .EUt(7680)
                .duration(250)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputItems(dust,EschericiaColi)
                .inputItems(dust, Sugar)
                .EUt(480)
                .outputItems(SuccinicAcid, 14)
                .duration(200)
                .save(provider);

        // C4H6O4 + NH3 -> C4H5NO2 + 2H2O
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,SuccinicAcid, 14)
                .inputFluids(Ammonia.getFluid(1000))
                .outputItems(Succinimide, 12)
                .outputFluids(Water.getFluid(2000))
                .EUt(120)
                .duration(500)
                .blastFurnaceTemp(2100)
                .save(provider);

        // C4H5NO2 + 2Br -> C4H4BrNO2 + HBr
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Succinimide, 12)
                .inputFluids(Bromine.getFluid(2000))
                .outputItems(Bromosuccinimide, 12)
                .outputFluids(HydrobromicAcid.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // C4H4BrNO2 -> HBr + NO2 + 4C + 3H
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,Bromosuccinimide, 12)
                .outputItems(dust, Carbon, 4)
                .outputFluids(Hydrogen.getFluid(3000))
                .outputFluids(HydrobromicAcid.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .duration(158)
                .EUt(120)
                .save(provider);


        // SO3 + S + 2Cl -> SO2 + SOCl2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(SulfurTrioxide.getFluid(1000))
                .inputItems(dust, Sulfur)
                .inputFluids(Chlorine.getFluid(2000))
                .outputFluids(SulfurDioxide.getFluid(1000))
                .outputFluids(ThionylChloride.getFluid(1000))
                .EUt(480)
                .duration(400)
                .save(provider);

        // TiCl4 + AlCl3 -> TiAlCl7
        MIXER_RECIPES.recipeBuilder()
                .inputFluids(TitaniumTetrachloride.getFluid(1000))
                .inputItems(dust,AluminiumChloride, 4)
                .EUt(7680)
                .duration(50)
                .outputItems(TiAlChloride, 9)
                .save(provider);

        // HCN + KOH -> KCN + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrogenCyanide.getFluid(1000))
                .inputFluids(PotassiumHydroxide.getFluid(1000))
                .circuitMeta(0)
                .outputItems(PotassiumCyanide, 3)
                .outputFluids(Water.getFluid(1000))
                .EUt(1920)
                .duration(200)
                .save(provider);

        // KCN -> K + C + N
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,PotassiumCyanide, 3)
                .outputItems(dust, Potassium)
                .outputItems(dust, Carbon)
                .outputFluids(Nitrogen.getFluid(1000))
                .duration(150)
                .EUt(120)
                .save(provider);

        // KCl + H2O -> KOH + HCl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, RockSalt, 2)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(PotassiumHydroxide.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .EUt(480)
                .duration(270)
                .save(provider);

        // K + Cl -> KCl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Potassium)
                .inputFluids(Chlorine.getFluid(1000))
                .outputItems(dust, RockSalt, 2)
                .EUt(30)
                .duration(220)
                .save(provider);

        // H + FeCl3 -> FeCl2 + HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(40).EUt(30)
                .inputFluids(Hydrogen.getFluid(1000))
                .inputFluids(IronChloride.getFluid(1000))
                .outputFluids(Iron2Chloride.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .save(provider);

        // 2C5H6 + FeCl2 -> C10H10Fe + 2HCl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,ZeoliteSievingPellets)
                .notConsumable(PdIrReOCeOS)
                .inputFluids(Iron2Chloride.getFluid(1000))
                .inputFluids(Cyclopentadiene.getFluid(2000))
                .outputFluids(Ferrocene.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .outputItems(WetZeoliteSievingPellets)
                .EUt(30720)
                .duration(100)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, Palladium)
                .inputItems(dust, Iridium)
                .inputItems(dust, Rhenium)
                .inputItems(dust, Cerium)
                .inputItems(dust, Osmium)
                .inputItems(dust, Silicon)
                .inputFluids(Oxygen.getFluid(4000))
                .outputItems(PdIrReOCeOS, 10)
                .EUt(7680)
                .duration(50)
                .save(provider);

        // C10H10Fe + C60 + C3H7NO2 + CHCl3 + 3 NaOC2H5 ->
        // 3 NaCl + 3 C2H5OH + [C73H15NFe] + CO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Fullerene)
                .inputItems(dust,Sarcosine, 13)
                .inputItems(dust,SodiumEthoxide.getItemStack(27))
                .inputFluids(Chloroform.getFluid(1000))
                .inputFluids(Ferrocene.getFluid(1000))
                .notConsumable(TitaniumTetrachloride)
                .notConsumable(Toluene)
                .outputItems(dust, Salt, 6)
                .outputFluids(Ferrocenylfulleropyrrolidine.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputFluids(Ethanol.getFluid(3000))
                .EUt(500000)
                .duration(750)
                .save(provider);

        // NaOH + C2H5OH -> H2O + C2H5ONa
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, SodiumHydroxide, 3)
                .inputFluids(Ethanol.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .outputItems(SodiumEthoxide, 9)
                .EUt(7680)
                .duration(50)
                .save(provider);

        // CH3NH2 + 2Cl + CH3COOH -> C3H7NO2 + 2HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Methylamine.getFluid(1000))
                .inputFluids(Chlorine.getFluid(2000))
                .inputFluids(AceticAcid.getFluid(1000))
                .notConsumable(AceticAnhydride.getFluid(0))
                .outputItems(Sarcosine, 13)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        // NH3 + CH4O -> CH3NH2 + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(Methanol.getFluid(1000))
                .notConsumable(dust, AluminoSilicateWool)
                .circuitMeta(3)
                .outputFluids(Methylamine.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // C73H15NFe + Pd -> PdC73H15NFe
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ferrocenylfulleropyrrolidine.getFluid(1000))
                .inputItems(dust, Palladium)
                .notConsumable(AceticAcid)
                .notConsumable(NitricAcid)
                .outputItems(PdFullereneMatrix)
                .EUt(2000000)
                .duration(200)
                .save(provider);

        // H2S + 2CH4O -> C2H6S + 2H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrogenSulfide.getFluid(1000))
                .inputFluids(Methanol.getFluid(2000))
                .outputFluids(Dimethylsulfide.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .EUt(1920)
                .duration(100)
                .save(provider);

        // 2C7H8 + SOCl2 + 4KMnO4 -> H2O + 4MnO2 + 4KOH + SO2 + 2C7H5ClO
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,PotassiumPermanganate, 24)
                .inputFluids(ThionylChloride.getFluid(1000))
                .inputFluids(Toluene.getFluid(2000))
                .outputItems(dust, Pyrolusite, 12)
                .outputFluids(Water.getFluid(1000))
                .outputFluids(PotassiumHydroxide.getFluid(4000))
                .outputFluids(SulfurDioxide.getFluid(1000))
                .outputFluids(BenzoylChloride.getFluid(2000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // H2O2 + 2C7H5ClO -> C14H10O4 + 2HCl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .inputFluids(BenzoylChloride.getFluid(2000))
                .outputFluids(BenzoylPeroxide.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .EUt(1920)
                .duration(160)
                .save(provider);

        //4 I + N2H4 -> 2 N + 4 HI
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Iodine, 4)
                .inputFluids(Hydrazine.getFluid(1000))
                .outputFluids(Nitrogen.getFluid(2000))
                .outputFluids(HydroiodicAcid.getFluid(4000))
                .duration(210)
                .EUt(500)
                .save(provider);

        //C3H3N + HI + 2 H2O + C8H8 + LiAlH4 -> C11H14O2 + LiI + AlH3 + NH3 (SnMe3Cl cat.)
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(AcryloNitrile.getFluid(1000))
                .inputFluids(HydroiodicAcid.getFluid(1000))
                .inputFluids(Water.getFluid(2000))
                .inputFluids(Styrene.getFluid(1000))
                .inputItems(dust,LithiumAluminiumHydride, 6)
                .notConsumable(TrimethyltinChloride.getFluid(100))
                .outputFluids(Phenylpentanoicacid.getFluid(1000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputItems(AluminiumHydride, 4)
                .outputItems(LithiumIodide, 2)
                .EUt(3840)
                .duration(110)
                .save(provider);

        // 2 C60 + 2 C11H14O2 + C2H6S + 2 C6H5Cl -> 2 C71H12O2 + 2 C7H8 + H2S + 2 HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Fullerene, 2)
                .inputFluids(Phenylpentanoicacid.getFluid(2000))
                .inputFluids(Dimethylsulfide.getFluid(1000))
                .inputFluids(Chlorobenzene.getFluid(2000))
                .notConsumable(BenzoylPeroxide.getFluid(0))
                .outputFluids(Toluene.getFluid(2000))
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(PCBA.getFluid(2000))
                .EUt(500000)
                .duration(450)
                .save(provider);

        // Ag + Cl -> AgCl
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(120)
                .inputItems(dust, Silver)
                .inputFluids(Chlorine.getFluid(1000))
                .outputItems(dust, SilverChloride, 2)
                .save(provider);

        // 3Ag2O + 8BF3 -> 6AgBF4 + B2O3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(BoronFluoride.getFluid(8000))
                .inputItems(dust, SilverOxide, 9)
                .notConsumable(Benzene)
                .outputFluids(Silvertetrafluoroborate.getFluid(6000))
                .outputItems(BoronOxide, 5)
                .EUt(7680)
                .duration(100)
                .save(provider);

        // 2NH3 + COCl2 + 2C3H8O -> C7H14N2 + 3H2O + 2HCl
        // loses 1B water, but keeps it out of an LCR. Good tradeoff I think
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ammonia.getFluid(2000))
                .inputFluids(Phosgene.getFluid(1000))
                .inputFluids(IsopropylAlcohol.getFluid(2000))
                .notConsumable(Triphenylphosphine)
                .outputFluids(DilutedHydrochloricAcid.getFluid(4000))
                .outputFluids(Diisopropylcarbodiimide.getFluid(1000))
                .EUt(7680)
                .duration(250)
                .save(provider);

        // CO + 2Cl -> COCl2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(CarbonMonoxide.getFluid(1000))
                .inputFluids(Chlorine.getFluid(2000))
                .notConsumable(dust, Carbon)
                .outputFluids(Phosgene.getFluid(1000))
                .EUt(1920)
                .duration(400)
                .save(provider);

        // (CH3)2NH + C5H5N -> H2 + C7H10N2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Dimethylamine.getFluid(1000))
                .inputFluids(Pyridine.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .outputItems(Dimethylaminopyridine, 19)
                .EUt(7680)
                .duration(200)
                .save(provider);

         // C71H12O2 + C8H8 + CH2Cl2 -> C80H20O2 + 2 HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(Dimethylaminopyridine)
                .notConsumable(Diisopropylcarbodiimide.getFluid(10))
                .inputFluids(PCBA.getFluid(1000))
                .inputFluids(Styrene.getFluid(1000))
                .inputFluids(Dichloromethane.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(PCBS.getFluid(1000))
                .EUt(500000)
                .duration(400)
                .save(provider);

        // PdC73H15NFe + C80H21O2 -> [PdC73H15NFe + C80H21O2]
        CHEMICAL_BATH_RECIPES.recipeBuilder()
                .inputFluids(PCBS.getFluid(1000))
                .inputItems(dust,PdFullereneMatrix)
                .outputItems(dust, FullerenePolymerMatrix, 2)
                .EUt(8000000)
                .duration(40)
                .save(provider);
    }
}




public class FusionElementsChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        advFusionRecipes();
        fusionRecipes();

        // Li + 2H2O -> H + LiOH(H2O)
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputItems(dust, Lithium)
                .inputFluids(Water.getFluid(2000))
                .outputFluids(Hydrogen.getFluid(1000))
                .outputFluids(LithiumHydroxideSolution.getFluid(1000))
                .save(provider);

        // 2LiOH(H2O) + H2O2 -> Li2O2(H2O) + 3H2O (H2O lost to Dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputFluids(LithiumHydroxideSolution.getFluid(2000))
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputFluids(LithiumPeroxideSolution.getFluid(1000))
                .save(provider);

        // CO + Li2O2(H2O) -> Li2CO3(H2O)
        MIXER_RECIPES.recipeBuilder().duration(240).EUt(30)
                .inputFluids(CarbonMonoxide.getFluid(1000))
                .inputFluids(LithiumPeroxideSolution.getFluid(1000))
                .outputFluids(LithiumCarbonateSolution.getFluid(1000))
                .save(provider);

        // 6O -> 2O3
        ELECTROLYZER_RECIPES.recipeBuilder().duration(120).EUt(480)
                .inputFluids(Oxygen.getFluid(6000))
                .outputFluids(Ozone.getFluid(2000))
                .save(provider);

        // 6NO2 + O3 -> 3N2O5
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputFluids(NitrogenDioxide.getFluid(6000))
                .inputFluids(Ozone.getFluid(1000))
                .outputFluids(NitrogenPentoxide.getFluid(3000))
                .save(provider);

        // 2N2O5 + TiCl4 + 2O -> 4Cl + Ti(NO3)4
        CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(480)
                .inputFluids(NitrogenPentoxide.getFluid(2000))
                .inputFluids(TitaniumTetrachloride.getFluid(1000))
                .inputFluids(Oxygen.getFluid(2000))
                .outputFluids(Chlorine.getFluid(4000))
                .outputItems(TitaniumNitrate, 17)
                .save(provider);

        // Ti(NO3)4 + 2NaOH + Li2CO3(H2O) -> 4HNO3 + Li2TiO3 + Na2CO3
        BLAST_RECIPES.recipeBuilder().duration(320).EUt(120).blastFurnaceTemp(3100)
                .inputItems(dust,TitaniumNitrate, 17)
                .inputItems(dust, SodiumHydroxide, 6)
                .inputFluids(LithiumCarbonateSolution.getFluid(1000))
                .outputFluids(NitricAcid.getFluid(4000))
                .outputItems(ingot, LithiumTitanate, 6)
                .outputItems(dust, SodaAsh, 6)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(340).EUt(1920)
                .inputFluids(Carbon.getFluid(10000))
                .outputFluids(Carbon12.getFluid(9893))
                .outputFluids(Carbon13.getFluid(107))
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(340).EUt(1920)
                .inputFluids(Nitrogen.getFluid(100000))
                .outputFluids(Nitrogen14.getFluid(99636))
                .outputFluids(NItrogen15.getFluid(364))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(250).EUt(7680)
                .inputFluids(Carbon12.getFluid(1000))
                .inputFluids(Carbon13.getFluid(1000))
                .inputFluids(Nitrogen14.getFluid(1000))
                .inputFluids(NItrogen15.getFluid(1000))
                .outputFluids(CNOcatalyst.getFluid(4000))
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(150).EUt(7680)
                .inputFluids(HeliumCNO.getFluid(800))
                .outputFluids(Helium.getFluid(640))
                .outputFluids(CNOcatalyst.getFluid(160))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(180).EUt(480)
                .inputItems(dust, Radium)
                .outputFluids(Radon.getFluid(1000))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(180).EUt(7680)
                .inputFluids(Titanium44.getFluid(144))
                .outputFluids(Calcium44.getFluid(144))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(180).EUt(7680)
                .inputFluids(Chromium48.getFluid(144))
                .outputFluids(Titanium.getFluid(144))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(180).EUt(7680)
                .inputFluids(Iron52.getFluid(144))
                .outputFluids(Chrome.getFluid(144))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(180).EUt(7680)
                .inputFluids(Nickel56.getFluid(144))
                .outputFluids(Iron.getFluid(144))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(160).EUt(122880)
                .inputFluids(QuassifissioningPlasma.getFluid(1000))
                .outputFluids(FlYbPlasma.getFluid(1000))
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(290).EUt(1920)
                .inputFluids(FlYbPlasma.getFluid(1000))
                .outputFluids(MetastableFlerovium.getFluid(288))
                .outputFluids(Ytterbium178.getFluid(288))
                .save(provider);

        DECAY_CHAMBERS_RECIPES.recipeBuilder().duration(120).EUt(30720)
                .inputFluids(Ytterbium178.getFluid(144))
                .outputFluids(Hafnium.getFluid(144))
                .save(provider);

        // Ti + 4HF -> TiF4 + 4H
        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(120)
                .inputItems(dust, Titanium)
                .inputFluids(HydrofluoricAcid.getFluid(4000))
                .outputFluids(TitaniumTetrafluoride.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(4000))
                .save(provider);

        GAS_CENTRIFUGE_RECIPES.recipeBuilder().duration(210).EUt(30720)
                .circuitMeta(0)
                .inputFluids(TitaniumTetrafluoride.getFluid(10000))
                .outputFluids(Titanium50Tetrafluoride.getFluid(518))
                .outputFluids(Fluorine.getFluid(9482))
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120)
                .blastFurnaceTemp(Titanium.blastFurnaceTemperature)
                .inputFluids(Titanium50Tetrafluoride.getFluid(1000))
                .inputItems(dust, Sodium, 4)
                .outputItems(ingotHot, Titanium50)
                .outputItems(dust, SodiumFluoride, 8)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(120).EUt(7680)
                .inputFluids(Titanium50.getFluid(288))
                .inputFluids(Californium252.getMaterial().getFluid(288))
                .outputFluids(OgannesonBreedingBase.getFluid(2000))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(600000)
                .inputFluids(Curium250.getMaterial().getFluid(36))
                .inputFluids(OgannesonBreedingBase.getFluid(125))
                .outputFluids(HotMetastableOganesson.getFluid(125))
                .coilTier(2).euStart(2500000000L).euReturn(50)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(3800).EUt(120)
                .notConsumable(SHAPE_MOLD_INGOT)
                .inputFluids(HotMetastableOganesson.getFluid(125))
                .outputItems(ingotHot, MetastableOganesson)
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(350).EUt(120).blastFurnaceTemp(3000)
                .inputItems(dust, Hafnium)
                .inputItems(dust, Graphite)
                .outputItems(HafniumCarbide, 2)
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(260).EUt(120).blastFurnaceTemp(2500)
                .inputItems(dust, Tantalum)
                .inputItems(dust, Graphite)
                .outputItems(TantalumCarbide, 2)
                .save(provider);

        // NaSgO3 + Cl + 4C -> SgC + NaCl + 3CO
        BLAST_RECIPES.recipeBuilder().duration(280).EUt(120).blastFurnaceTemp(3000)
                .inputItems(dust,SodiumSeaborgate, 5)
                .inputFluids(Chlorine.getFluid(1000))
                .inputItems(dust, Carbon, 4)
                .outputItems(SeaborgiumCarbide, 2)
                .outputItems(dust, Salt, 2)
                .outputFluids(CarbonMonoxide.getFluid(3000))
                .save(provider);

        // 12TaC + 3HfC + SgC -> Ta12Hf3SgC16
        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(6200)
                .inputItems(dust,TantalumCarbide, 24)
                .inputItems(dust,HafniumCarbide, 6)
                .inputItems(dust,SeaborgiumCarbide, 2)
                .outputItems(ingotHot, TantalumHafniumSeaborgiumCarbide, 32)
                .save(provider);
    }

    private static void advFusionRecipes() {

        // Alpha Process
        ADV_FUSION_RECIPES.recipeBuilder().duration(384).EUt(7000).euStart(1200000000).coilTier(1).euReturn(100)
                .inputFluids(Helium.getFluid(375))
                .inputFluids(Helium.getFluid(375))
                .outputFluids(Carbon.getPlasma(250))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(1280000000).coilTier(1).euReturn(100)
                .inputFluids(Carbon.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Oxygen.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(1280000000).coilTier(1).euReturn(100)
                .inputFluids(Oxygen.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Neon.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(1280000000).coilTier(1).euReturn(100)
                .inputFluids(Neon.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Magnesium.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(1280000000).coilTier(1).euReturn(95)
                .inputFluids(Magnesium.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Silicon.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(1280000000).coilTier(1).euReturn(95)
                .inputFluids(Silicon.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Sulfur.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(160000000L).coilTier(2).euReturn(95)
                .inputFluids(Sulfur.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Argon.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(180000000L).coilTier(2).euReturn(90)
                .inputFluids(Argon.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Calcium.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(200000000L).coilTier(2).euReturn(90)
                .inputFluids(Calcium.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Titanium44.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(220000000L).coilTier(2).euReturn(90)
                .inputFluids(Titanium44.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Chromium48.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(230000000L).coilTier(2).euReturn(85)
                .inputFluids(Calcium44.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Titanium.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(240000000L).coilTier(2).euReturn(85)
                .inputFluids(Chromium48.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Iron52.getPlasma(125))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(7000).euStart(250000000L).coilTier(2).euReturn(80)
                .inputFluids(Iron52.getFluid(125))
                .inputFluids(Helium.getFluid(125))
                .outputFluids(Nickel56.getPlasma(125))
                .save(provider);

        // CNO Cycle
        ADV_FUSION_RECIPES.recipeBuilder().duration(128).EUt(8192).euStart(100000000).coilTier(1)
                .inputFluids(CNOcatalyst.getFluid(160))
                .inputFluids(Hydrogen.getFluid(640))
                .outputFluids(HeliumCNO.getPlasma(800))
                .save(provider);

        // Flerovium Production
        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(600000).coilTier(2).euStart(2500000000L).euReturn(50)
                .inputFluids(Uranium.getFluid(125))
                .inputFluids(Uranium.getFluid(125))
                .outputFluids(QuassifissioningPlasma.getFluid(125))
                .save(provider);

        // Carbon-Burning Process
        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(600000).coilTier(2).euStart(2500000000L).euReturn(46)
                .inputFluids(Carbon12.getFluid(125))
                .inputFluids(Carbon12.getFluid(125))
                .outputFluids(Neon.getPlasma(125))
                .outputFluids(Helium4.getFluid(125))
                .save(provider);

        // Other Advanced Fusion Materials
        ADV_FUSION_RECIPES.recipeBuilder().duration(50).EUt(1000000).euStart(1000000000).coilTier(1).euReturn(40)
                .inputFluids(Curium.getMaterial().getFluid(144))
                .inputFluids(Sodium.getFluid(144))
                .outputFluids(Bohrium.getFluid(288))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(2000000).coilTier(1).euStart(1000000000).euReturn(40)
                .inputFluids(Trinium.getFluid(144))
                .inputFluids(Tritanium.getFluid(144))
                .outputFluids(Adamantium.getFluid(288))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(8000000).coilTier(2).euStart(2500000000L).euReturn(40)
                .inputFluids(Adamantium.getFluid(144))
                .inputFluids(Seaborgium.getFluid(144))
                .outputFluids(Vibranium.getFluid(288))
                .save(provider);

        ADV_FUSION_RECIPES.recipeBuilder().duration(100).EUt(900000).coilTier(2).euStart(2500000000L).euReturn(50)
                .inputFluids(ScandiumTitanium50Mix.getFluid(36))
                .inputFluids(RadonRadiumMix.getFluid(144))
                .outputFluids(MetastableHassium.getFluid(144))
                .save(provider);
    }

    public static void fusionRecipes() {
        // Fusion Recipes
        FUSION_RECIPES.recipeBuilder().duration(16).EUt(4096).EUToStart(40000000)
                .inputFluids(Deuterium.getFluid(125))
                .inputFluids(Tritium.getFluid(125))
                .outputFluids(Helium.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(16).EUt(2048).EUToStart(60000000)
                .inputFluids(Deuterium.getFluid(125))
                .inputFluids(Helium3.getFluid(125))
                .outputFluids(Helium.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(16).EUt(2048).EUToStart(60000000)
                .inputFluids(Fluorine.getFluid(125))
                .inputFluids(Helium3.getFluid(125))
                .outputFluids(Potassium.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(32).EUt(4096).EUToStart(80000000)
                .inputFluids(Carbon.getFluid(125))
                .inputFluids(Helium3.getFluid(125))
                .outputFluids(Oxygen.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(16).EUt(16384).EUToStart(180000000)
                .inputFluids(Beryllium.getFluid(16))
                .inputFluids(Deuterium.getFluid(375))
                .outputFluids(Nitrogen.getPlasma(175))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(32).EUt(8192).EUToStart(360000000)
                .inputFluids(Silicon.getFluid(16))
                .inputFluids(Magnesium.getFluid(16))
                .outputFluids(Iron.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(16).EUt(32768).EUToStart(480000000)
                .inputFluids(Potassium.getFluid(16))
                .inputFluids(Fluorine.getFluid(125))
                .outputFluids(Nickel.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(32).EUt(32768).EUToStart(150000000)
                .inputFluids(Beryllium.getFluid(16))
                .inputFluids(Tungsten.getFluid(16))
                .outputFluids(Platinum.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(24576).EUToStart(150000000)
                .inputFluids(Neodymium.getFluid(16))
                .inputFluids(Hydrogen.getFluid(48))
                .outputFluids(Europium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(96).EUt(49152).EUToStart(200000000)
                .inputFluids(Lutetium.getFluid(16))
                .inputFluids(Chrome.getFluid(16))
                .outputFluids(Americium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(32768).EUToStart(300000000)
                .inputFluids(Plutonium.getFluid(16))
                .inputFluids(Thorium.getFluid(16))
                .outputFluids(Naquadah.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(24578).EUToStart(150000000)
                .inputFluids(Tungsten.getFluid(16))
                .inputFluids(Helium.getFluid(16))
                .outputFluids(Osmium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(8192).EUToStart(120000000)
                .inputFluids(Manganese.getFluid(16))
                .inputFluids(Hydrogen.getFluid(16))
                .outputFluids(Iron.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(49152).EUToStart(240000000)
                .inputFluids(Mercury.getFluid(16))
                .inputFluids(Magnesium.getFluid(16))
                .outputFluids(Uranium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(49152).EUToStart(240000000)
                .inputFluids(Gold.getFluid(16))
                .inputFluids(Aluminium.getFluid(16))
                .outputFluids(Uranium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(128).EUt(8192).EUToStart(120000000)
                .inputFluids(Uranium.getFluid(16))
                .inputFluids(Helium.getFluid(16))
                .outputFluids(Plutonium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(128).EUt(49152).EUToStart(480000000)
                .inputFluids(Nickel.getFluid(16))
                .inputFluids(Polonium.getFluid(16))
                .outputFluids(Copernicium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(24576).EUToStart(140000000)
                .inputFluids(Vanadium.getFluid(16))
                .inputFluids(Hydrogen.getFluid(125))
                .outputFluids(Chrome.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(16384).EUToStart(180000000)
                .inputFluids(Gallium.getFluid(16))
                .inputFluids(Radon.getFluid(125))
                .outputFluids(Duranium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(32768).EUToStart(200000000)
                .inputFluids(Titanium.getFluid(48))
                .inputFluids(Duranium.getFluid(32))
                .outputFluids(Tritanium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(32768).EUToStart(200000000)
                .inputFluids(Gold.getFluid(16))
                .inputFluids(Mercury.getFluid(16))
                .outputFluids(Radon.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(16).EUt(24576).EUToStart(200000000)
                .inputFluids(Tantalum.getFluid(16))
                .inputFluids(Tritium.getFluid(16))
                .outputFluids(Tungsten.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(32).EUt(24576).EUToStart(380000000)
                .inputFluids(Silver.getFluid(16))
                .inputFluids(Lithium.getFluid(16))
                .outputFluids(Indium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(64).EUt(49152).EUToStart(400000000)
                .inputFluids(NaquadahEnriched.getFluid(15))
                .inputFluids(Radon.getFluid(125))
                .outputFluids(Naquadria.getFluid(3))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(16).EUt(8192).EUToStart(80000000)
                .inputFluids(Lanthanum.getFluid(16))
                .inputFluids(Silicon.getFluid(16))
                .outputFluids(Lutetium.getFluid(16))
                .save(provider);

        // Should technically be Pu242
        FUSION_RECIPES.recipeBuilder().duration(64).EUt(24576).EUToStart(150000000)
                .inputFluids(Plutonium244Isotope.getMaterial().getFluid(16))
                .inputFluids(Neon.getFluid(16))
                .outputFluids(Rutherfordium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(96).EUt(49152).EUToStart(200000000)
                .inputFluids(Americium.getFluid(16))
                .inputFluids(Neon.getFluid(16))
                .outputFluids(Dubnium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(96).EUt(49152).EUToStart(200000000)
                .inputFluids(Americium243.getMaterial().getFluid(16))
                .inputFluids(Neon.getFluid(16))
                .outputFluids(Dubnium.getFluid(16))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(400000000)
                .inputFluids(Plutonium.getFluid(144))
                .inputFluids(Calcium.getFluid(144))
                .outputFluids(Seaborgium.getFluid(288))
                .save(provider);

        // Carbon-Burning Process (lossy)
        FUSION_RECIPES.recipeBuilder().duration(100).EUt(7680).EUToStart(120000000)
                .inputFluids(Carbon12.getFluid(125))
                .inputFluids(Carbon12.getFluid(125))
                .outputFluids(Neon.getPlasma(125))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(400_000_000)
                .inputFluids(Polonium.getFluid(144))
                .inputFluids(Chrome.getFluid(144))
                .outputFluids(Meitnerium.getFluid(288))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(420_000_000)
                .inputFluids(Americium.getFluid(144))
                .inputFluids(Titanium.getFluid(144))
                .outputFluids(Tennessine.getFluid(288))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(360_000_000)
                .inputFluids(Plutonium.getFluid(144))
                .inputFluids(Titanium.getFluid(144))
                .outputFluids(Livermorium.getFluid(288))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(380_000_000)
                .inputFluids(Neptunium.getMaterial().getFluid(144))
                .inputFluids(Titanium.getFluid(144))
                .outputFluids(Moscovium.getFluid(288))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(410_000_000)
                .inputFluids(Astatine.getFluid(144))
                .inputFluids(Nickel.getFluid(144))
                .outputFluids(Nihonium.getFluid(288))
                .save(provider);

        FUSION_RECIPES.recipeBuilder().duration(100).EUt(75000).EUToStart(460_000_000)
                .inputFluids(Radium.getFluid(144))
                .inputFluids(Vanadium.getFluid(144))
                .outputFluids(Roentgenium.getFluid(288))
                .save(provider);
    }
}




public class InsulationWireAssemblyChain {

        public static void init(Consumer<FinishedRecipe> provider) {

        // 4C2H4 + NH3 + HBr -> C8H20NBr
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputFluids(Ethylene.getFluid(4000))
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(HydrobromicAcid.getFluid(1000))
                .outputFluids(TetraethylammoniumBromide.getFluid(1000))
                .save(provider);

        // H2O + C6H12O6 -> C6H14O2 + 5O
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)
                .notConsumable(PdIrReOCeOS)
                .inputFluids(Water.getFluid(1000))
                .inputItems(dust,Fructose, 24)
                .notConsumable(TetraethylammoniumBromide.getFluid(0))
                .outputFluids(Hexanediol.getFluid(1000))
                .outputFluids(Oxygen.getFluid(5000))
                .save(provider);

        // 2NH3 + C6H14O2 -> 2H2O + C6H16N2
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputFluids(Hexanediol.getFluid(1000))
                .inputFluids(Ammonia.getFluid(2000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(Hexamethylenediamine.getFluid(1000))
                .notConsumable(dust, Ruthenium)
                .notConsumable(dust, Alumina)
                .save(provider);

        // C6H12O6 + 3 O -> C6H10O8 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputItems(dust,Glucose, 24)
                .inputFluids(Oxygen.getFluid(3000))
                .outputFluids(Water.getFluid(1000))
                .outputItems(SaccharicAcid, 24)
                .save(provider);

        // C6H10O8 + 8H -> C6H10O4 + 4H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputItems(dust,SaccharicAcid, 24)
                .notConsumable(AuPdCCatalyst)
                .notConsumable(ScandiumTriflate)
                .inputFluids(Hydrogen.getFluid(8000))
                .outputItems(AdipicAcid, 20)
                .outputFluids(Water.getFluid(4000))
                .save(provider);

        // C3H6O + CH4 -> C4H10O
        CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(120)
                .notConsumable(dust, MagnesiumChloride)
                .inputItems(dust,ZeoliteSievingPellets)
                .inputFluids(Acetone.getFluid(1000))
                .inputFluids(Methane.getFluid(1000))
                .outputFluids(Tertbutanol.getFluid(1000))
                .outputItems(WetZeoliteSievingPellets)
                .save(provider);

        // 2C4H10O + 2CO2 -> H2O + C10H18O5
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(480)
                .inputFluids(Tertbutanol.getFluid(2000))
                .inputFluids(CarbonDioxide.getFluid(2000))
                .notConsumable(Toluenesulfonate.getFluid(0))
                .outputFluids(Water.getFluid(1000))
                .outputItems(DitertbutylDicarbonate, 33)
                .save(provider);

        // C4H8 + C10H18O5 + 4NH3 + 3C -> 2 C4H10O + C6H18N4 + 3CO
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(370).EUt(480)
                .inputItems(dust,DitertbutylDicarbonate, 33)
                .inputItems(dust, Carbon, 3)
                .inputFluids(Butene.getFluid(1000))
                .inputFluids(Ammonia.getFluid(4000))
                .notConsumable(Trimethylchlorosilane.getFluid(0))
                .outputFluids(Tertbutanol.getFluid(2000))
                .outputFluids(CarbonMonoxide.getFluid(3000))
                .outputFluids(Triaminoethaneamine.getFluid(1000))
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(30720)
                .inputItems(foil, Polyetheretherketone)
                .inputItems(foil, SiliconeRubber)
                .inputItems(dust,AdipicAcid, 20)
                .inputFluids(Hexamethylenediamine.getFluid(1000))
                .inputFluids(Triaminoethaneamine.getFluid(500))
                .outputItems(PEEK_POLYAMIDE_FOIL, 3)
                .save(provider);

        // 2K + 2NaN3 + C10H18O5 -> 2Na + K2O + 2C5H9N3O2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(480)
                .inputItems(dust, Potassium,2)
                .inputItems(dust,SodiumAzide, 8)
                .inputItems(dust,DitertbutylDicarbonate, 33)
                .outputItems(dust, Sodium, 2)
                .outputItems(dust, Potash, 6)
                .outputFluids(TertButylAzidoformate.getFluid(2000))
                .save(provider);

        // Aminated Fullerene is a Secondary Amine
        // C60 + 4C5H9N3O2 + 8H2O + 4CO -> C60N12H12 + 4C4H10O + 8CO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(30720)
                .inputItems(dust,Fullerene)
                .inputFluids(TertButylAzidoformate.getFluid(4000))
                .inputFluids(Water.getFluid(8000))
                .inputFluids(CarbonMonoxide.getFluid(4000))
                .outputFluids(AminatedFullerene.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(8000))
                .outputFluids(Tertbutanol.getFluid(4000))
                .save(provider);

        FLUID_HEATER_RECIPES.recipeBuilder().duration(120).EUt(480)
                .inputFluids(AminatedFullerene.getFluid(1000))
                .outputFluids(Azafullerene.getFluid(1000))
                .notConsumable(wireFine, Rhenium)
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(30).EUt(7680)
                .inputItems(dust,PEEK_POLYAMIDE_FOIL)
                .inputFluids(Azafullerene.getFluid(10))
                .outputItems(HIGHLY_INSULATING_FOIL)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(Resorcinol.getFluid(500))
                .inputFluids(Formaldehyde.getFluid(1000))
                .inputItems(dust,GrapheneOxide, 3)
                .outputItems(GrapheneGelSuspension)
                .save(provider);

        AUTOCLAVE_RECIPES.recipeBuilder().duration(260).EUt(480)
                .inputItems(dust,GrapheneGelSuspension)
                .inputFluids(Acetone.getFluid(100))
                .outputItems(DryGrapheneGel)
                .save(provider);

        FLUID_HEATER_RECIPES.recipeBuilder().duration(80).EUt(480)
                .inputFluids(CarbonDioxide.getFluid(1000))
                .outputFluids(SupercriticalCO2.getFluid(1000))
                .circuitMeta(0)
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(400).EUt(120).blastFurnaceTemp(5000)
                .inputItems(dust,DryGrapheneGel)
                .inputFluids(SupercriticalCO2.getFluid(1000))
                .outputItems(AEROGRAPHENE)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(210).EUt(30720)
                .inputItems(stick, Polyurethane)
                .inputItems(stick, ReinforcedEpoxyResin)
                .inputItems(dust,MEMORY_FOAM_BLOCK)
                .inputItems(dust,HIGHLY_INSULATING_FOIL)
                .inputItems(dust,AEROGRAPHENE)
                .inputFluids(Argon.getFluid(1000))
                .outputItems(INSULATION_WIRE_ASSEMBLY, 2)
                .save(provider);
    }
}




public class IodineChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // NaNO3·KNO3·KCl·NaIO3 + H2O = [NaNO3·KNO3·KCl·NaIO3 + H2O]
        MIXER_RECIPES.recipeBuilder().duration(30).EUt(7680)
                .inputItems(dust, Caliche)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(CalicheIodateBrine.getFluid(1000))
                .save(provider);

        // [NaNO3·KNO3·KCl·NaIO3 + H2O] + 3H2O + 3SO2 = [NaNO3·KNO3·KCl·NaI + H2O] + 3H2SO4
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(120)
                .inputFluids(CalicheIodateBrine.getFluid(1000))
                .inputFluids(SulfurDioxide.getFluid(3000))
                .inputFluids(Water.getFluid(3000))
                .outputFluids(IodideSolution.getFluid(1000))
                .outputFluids(SulfuricAcid.getFluid(3000))
                .save(provider);

        // 5[NaNO3·KNO3·KCl·NaI] + [NaNO3·KNO3·KCl·NaIO3 + H2O] -> 6[NaNO3·KNO3·KCl·NaOH + H2O + I]
        MIXER_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputFluids(CalicheIodateBrine.getFluid(1000))
                .inputFluids(IodideSolution.getFluid(5000))
                .outputFluids(CalicheIodineBrine.getFluid(6000))
                .save(provider);

        // [NaNO3·KNO3·KCl·NaOH + H2O + I] +  Kerosene ->  [NaNO3·KNO3·KCl·NaOH + H2O] + [Kerosene + I]
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(480)
                .inputFluids(CalicheIodineBrine.getFluid(1000))
                .inputFluids(Kerosene.getFluid(1000))
                .outputFluids(CalicheNitrateSolution.getFluid(1000))
                .outputFluids(KeroseneIodineSolution.getFluid(1000))
                .save(provider);

        // [Kerosene + I] = Kerosene + I
        CENTRIFUGE_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputFluids(KeroseneIodineSolution.getFluid(1000))
                .outputFluids(Kerosene.getFluid(1000))
                .outputItems(dust, Iodine)
                .save(provider);

        // [NaNO3·KNO3·KCl·NaOH + H2O] = NaNO3 + KNO3 + KCl + NaOH + H2O (Water voided - Dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(CalicheNitrateSolution.getFluid(1000))
                .outputItems(dust, SodiumNitrate, 5)
                .outputItems(dust, Niter, 5)
                .outputItems(dust, RockSalt, 2)
                .outputItems(dust, SodiumHydroxide, 3)
                .save(provider);

        // 2[I + Oil] = Oil + I?
        CENTRIFUGE_RECIPES.recipeBuilder().duration(160).EUt(30)
                .inputFluids(IodizedOil.getFluid(2000))
                .outputFluids(Oil.getFluid(1000))
                .outputFluids(IodizedBrine.getFluid(1000))
                .save(provider);

        // I? + 0.3Cl = 1.3I??
        MIXER_RECIPES.recipeBuilder().duration(240).EUt(7680)
                .inputFluids(IodizedBrine.getFluid(1000))
                .inputFluids(Chlorine.getFluid(300))
                .outputFluids(IodineBrineMix.getFluid(1300))
                .save(provider);

        // 1.3I?? = Br? + 0.3I?
        CENTRIFUGE_RECIPES.recipeBuilder().duration(150).EUt(7680)
                .inputFluids(IodineBrineMix.getFluid(1300))
                .outputFluids(BrominatedBrine.getFluid(1000))
                .outputFluids(IodineSlurry.getFluid(300))
                .save(provider);

        // I? = I
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(200).EUt(7680)
                .inputFluids(IodineSlurry.getFluid(1000))
                .outputItems(dust, Iodine)
                .save(provider);
    }
}



public class LithiumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // LiAlSi2O6 = LiAlSi2O6
        BLAST_RECIPES.recipeBuilder().duration(80).EUt(120).blastFurnaceTemp(1400)
                .inputItems(dust, Spodumene, 4)
                .outputItems(RoastedSpodumene)
                .save(provider);

        // KLi3Al4F2O10 + CaO = CaF2 + (KLi3Al4O10)O
        BLAST_RECIPES.recipeBuilder().duration(160).EUt(120).blastFurnaceTemp(1400)
                .inputItems(dust, Lepidolite, 8)
                .inputItems(dust, Quicklime, 2)
                .outputItems(RoastedLepidolite)
                .outputItems(dust, Fluorite, 3)
                .save(provider);

        // LiAlSi2O6 + H2SO4 = [LiAlO2 + H2SO4] + 2SiO2
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust,RoastedSpodumene)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(DissolvedLithiumOre.getFluid(1000))
                .outputItems(dust, SiliconDioxide, 6)
                .save(provider);

        // (KLi3Al4O10)O + Al + 3H2SO4 = 3[LiAlO2 + H2SO4] + Al2O3 + K2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputItems(dust,RoastedLepidolite)
                .inputItems(dust, Aluminium)
                .inputFluids(SulfuricAcid.getFluid(3000))
                .outputFluids(DissolvedLithiumOre.getFluid(3000))
                .outputItems(dust, Potash, 3)
                .outputItems(dust, Alumina, 5)
                .save(provider);

        // 2[LiAlO2 + H2SO4] + H2SO4 + CO2 = Al2(SO4)3 + [Li2CO3 + H2O] + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputFluids(DissolvedLithiumOre.getFluid(2000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .inputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(AluminiumSulfate, 17)
                .outputFluids(LithiumCarbonateSolution.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // K2SO4 -> 2K + S + 4O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust,PotassiumSulfate, 7)
                .outputItems(dust, Potassium, 2)
                .outputItems(dust, Sulfur)
                .outputFluids(Oxygen.getFluid(4000))
                .save(provider);

        // Al2(SO4)3 = 2Al + 3S + 12O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust,AluminiumSulfate, 17)
                .outputItems(dust, Aluminium, 2)
                .outputItems(dust, Sulfur, 3)
                .outputFluids(Oxygen.getFluid(12000))
                .save(provider);

        // [Li2CO3 + H2O] + 2HCl + 2Na = 2[LiCl + H2O] + Na2CO3
        // off by 1 oxygen, which is fine since water is lost in dehydrator step
        CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(120)
                .inputItems(dust, Sodium, 2)
                .inputFluids(LithiumCarbonateSolution.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputItems(dust, SodaAsh, 6)
                .outputFluids(LithiumChlorideSolution.getFluid(2000))
                .save(provider);

        // [LiCl + H2O] = LiCl + H2O (H2O Voided - Dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputFluids(LithiumChlorideSolution.getFluid(1000))
                .outputFluids(Chlorine.getFluid(1000))
                .outputItems(dust, Lithium)
                .save(provider);

        // Combined Step - Lepidolite
        CHEMICAL_BATH_RECIPES.recipeBuilder().EUt(1920).duration(200)
                .inputItems(dust, Lepidolite, 8)
                .inputFluids(SulfuricAcid.getFluid(3000))
                .outputItems(dust, LithiumFluoride, 4)
                .outputItems(dust, Potash, 3)
                .outputItems(AluminiumSulfate, 17)
                .save(provider);

        // Combined Step - Spodumene
        CHEMICAL_BATH_RECIPES.recipeBuilder().EUt(1920).duration(200)
                .inputItems(dust, Spodumene, 8)
                .inputFluids(SulfuricAcid.getFluid(3000))
                .outputItems(dust, SiliconDioxide, 12)
                .outputItems(AluminiumSulfate, 17)
                .outputItems(dust, Lithium, 2)
                .save(provider);
    }
}



public class NanotubeChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // C6H6 + C7H8 -> C12H10 + CH4
        CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(480)
                .inputFluids(Benzene.getFluid(1000))
                .inputFluids(Toluene.getFluid(1000))
                .outputFluids(Methane.getFluid(1000))
                .outputItems(Biphenyl.getItemStack(22))
                .save(provider);

        // (NH4)2SO4 + H2SO4 -> (NH4)2(SO4)2 + H2
        CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(120)
                .circuitMeta(0)
                .inputFluids(AmmoniumSulfate.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(AmmoniumPersulfate.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // 2I + C12H10 + H2SO4 + (NH4)2SO4 -> C12H8I2 + (NH4)2(SO4)2 + 2H2
        CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(480)
                .inputItems(dust, Iodine, 2)
                .inputItems(dust,Biphenyl.getItemStack(22))
                .inputFluids(AmmoniumSulfate.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(Diiodobiphenyl.getItemStack(22))
                .outputFluids(AmmoniumPersulfate.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(4000))
                .save(provider);

        // Li + C4H10 -> C4H9Li + H
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(480)
                .inputItems(dust, Lithium)
                .inputFluids(Butane.getFluid(1000))
                .outputFluids(ButylLithium.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(1000))
                .save(provider);

        // Sn + 2Cl -> SnCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(65).EUt(30)
                .inputItems(dust, Tin)
                .inputFluids(Chlorine.getFluid(2000))
                .outputItems(TinChloride, 3)
                .save(provider);

        // SnCl2 + 3CH4 + O -> C3H9SnCl + HCl(H2O)
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(1920)
                .inputItems(dust,TinChloride, 3)
                .notConsumable(dust, Magnesium)
                .notConsumable(dust, Iodine)
                .inputFluids(Methane.getFluid(3000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(TrimethyltinChloride.getFluid(1000))
                .outputFluids(DilutedHydrochloricAcid.getFluid(2000))
                .save(provider);

        // 2Tl + 2HCl -> 2TlCl + 2H
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Thallium, 2)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputItems(ThalliumChloride, 4)
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // CH2O + 2C2H4O + NH3 -> C5H5N + 3H2O + 2H
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .notConsumable(ThalliumChloride)
                .inputFluids(Formaldehyde.getFluid(1000))
                .inputFluids(Acetaldehyde.getFluid(2000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(Pyridine.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // Ni + Al -> NiAl
        MIXER_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Nickel)
                .inputItems(dust, Aluminium)
                .outputItems(NiAlCatalyst, 2)
                .save(provider);

        // 2C5H5N -> C10H8N2 + H2
        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(1920)
                .inputFluids(Pyridine.getFluid(2000))
                .notConsumable(NiAlCatalyst)
                .outputItems(Bipyridine, 20)
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // C7H5ClO + 2H -> C7H6O + HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(480)
                .notConsumable(dust, Barite)
                .notConsumable(PdCCatalyst)
                .inputFluids(BenzoylChloride.getFluid(2000))
                .inputFluids(Hydrogen.getFluid(1000))
                .outputFluids(Benzaldehyde.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .save(provider);

        // 2C7H6O + C3H6O -> C17H14O + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(450).EUt(480)
                .inputFluids(Benzaldehyde.getFluid(2000))
                .inputFluids(Acetone.getFluid(1000))
                .outputFluids(Dibenzylideneacetone.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // Pd + 2Cl -> PdCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(30)
                .inputItems(dust, Palladium)
                .inputFluids(Chlorine.getFluid(2000))
                .outputItems(PalladiumChloride, 3)
                .save(provider);

        // 3C17H14O + 2PdCl2 -> 4Cl + C51H42O3Pd2
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(1920)
                .inputFluids(Dibenzylideneacetone.getFluid(3000))
                .inputItems(dust,PalladiumChloride, 6)
                .outputFluids(Chlorine.getFluid(4000))
                .outputItems(PalladiumBisDibenzylidieneacetone, 16)
                .save(provider);

        // Pt + 4HNO3 + 6HCl -> H2PtCl6 + 4NO2 + 4H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(115).EUt(1920)
                .inputItems(dust, Platinum)
                .inputFluids(NitricAcid.getFluid(4000))
                .inputFluids(HydrochloricAcid.getFluid(6000))
                .outputFluids(ChloroPlatinicAcid.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(4000))
                .save(provider);

        // H2PtCl6 + 2K -> K2PtCl4 + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(480)
                .inputFluids(ChloroPlatinicAcid.getFluid(1000))
                .inputItems(dust, Potassium, 2)
                .outputItems(PotassiumTetrachloroplatinate, 7)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // Ni + 2Cl -> NiCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(60).EUt(30)
                .inputItems(dust, Nickel)
                .inputFluids(Chlorine.getFluid(2000))
                .outputItems(NickelChloride, 3)
                .save(provider);

        // NiCl2 -> Ni + 2Cl
        ELECTROLYZER_RECIPES.recipeBuilder().duration(60).EUt(30)
                .inputItems(dust,NickelChloride, 3)
                .outputItems(dust, Nickel)
                .outputFluids(Chlorine.getFluid(2000))
                .save(provider);

        // NiCl2 + 6C6H5OH + 2PCl3 -> C36H30Cl2NiP2 + 6HCl + 6O
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(1920)
                .inputItems(dust,NickelChloride, 3)
                .inputFluids(Phenol.getFluid(6000))
                .inputFluids(PhosphorusTrichloride.getFluid(2000))
                .outputItems(NickelTriphenylPhosphite, 16)
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .outputFluids(Oxygen.getFluid(6000))
                .save(provider);

        // 2C4H6 -> C8H12
        CHEMICAL_RECIPES.recipeBuilder().duration(110).EUt(480)
                .inputFluids(Butadiene.getFluid(2000))
                .notConsumable(NickelTriphenylPhosphite)
                .outputFluids(Cyclooctadiene.getFluid(1000))
                .save(provider);

        // C8H12 + K2PtCl4 -> C8H12Cl2Pt + 2KCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(480)
                .inputFluids(Cyclooctadiene.getFluid(1000))
                .inputItems(dust,PotassiumTetrachloroplatinate, 7)
                .outputItems(Dichlorocycloctadieneplatinium.getItemStack(23))
                .outputItems(dust, RockSalt, 4)
                .save(provider);

        // 4C12H8I2 + 2C8H12Cl2Pt + 8C + 4AgBF4 + 4C3H9SnCl -> 10C6H4 + 4BF3 + 3C8H16 + 4HF + 2PtCl2 + 8I + 4AgCl + 4Sn
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(460).EUt(491520)
                .notConsumable(Bipyridine)
                .notConsumable(PalladiumBisDibenzylidieneacetone)
                .inputItems(dust,Diiodobiphenyl, 4)
                .inputItems(dust,Dichlorocycloctadieneplatinium.getItemStack(23))
                .inputItems(dust, Carbon, 8)
                .inputFluids(Silvertetrafluoroborate.getFluid(4000))
                .inputFluids(TrimethyltinChloride.getFluid(4000))
                .outputFluids(Cycloparaphenylene.getFluid(10000))
                .outputFluids(BoronFluoride.getFluid(4000))
                .outputFluids(Oct1ene.getFluid(3000))
                .outputFluids(HydrofluoricAcid.getFluid(4000))
                .outputItems(dust, PlatinumRawPowder, 6)
                .outputItems(dust, Iodine, 8)
                .outputItems(dust, SilverChloride, 8)
                .outputItems(dust, Tin, 4)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(300).EUt(200000)
                .inputItems(dust,ELECTRIC_MOTOR_UV)
                .inputItems(dust,SENSOR_UV)
                .inputItems(gemExquisite, Diamond)
                .inputItems(dust,PIEZOELECTRIC_CRYSTAL)
                .inputItems(stick, Duranium, 2)
                .inputItems(plate, Polybenzimidazole)
                .inputFluids(SolderingAlloy.getFluid(432))
                .outputItems(NANOTOME)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(320000)
                .inputFluids(Cycloparaphenylene.getFluid(200))
                .inputFluids(Methane.getFluid(800))
                .notConsumable(plate, Rhenium)
                .circuitMeta(0)
                .outputItems(ingot, CarbonNanotubes)
                .save(provider);
        
        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(320000)
                .inputFluids(Cycloparaphenylene.getFluid(200))
                .inputFluids(Methane.getFluid(800))
                .inputItems(dust, Seaborgium)
                .notConsumable(plate, Rhenium)
                .outputFluids(SeaborgiumDopedNanotubes.getFluid(1000))
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(320000)
                .inputFluids(Cycloparaphenylene.getFluid(3600))
                .inputFluids(Methane.getFluid(14400))
                .inputItems(dust,Fullerene)
                .notConsumable(plate, Rhenium)
                .outputFluids(FullereneDopedNanotubes.getFluid(18000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(240).EUt(122880)
                .inputItems(foil, Graphene)
                .inputItems(dust, CarbonNanotubes)
                .outputItems(GrapheneNanotubeMix)
                .save(provider);

        ELECTROMAGNETIC_SEPARATOR_RECIPES.recipeBuilder().duration(260).EUt(122880)
                .inputItems(dust,GrapheneNanotubeMix)
                .outputItems(dustSmall, CarbonNanotubes, 3)
                .outputItems(GrapheneAlignedCNT)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(200).EUt(983040)
                .notConsumable(NANOTOME)
                .inputItems(dust,GrapheneAlignedCNT)
                .outputItems(foil, Graphene)
                .outputFluids(Cycloparaphenylene.getFluid(250))
                .save(provider);
    }
}




public class NaquadahChain {

        public static void init(Consumer<FinishedRecipe> provider) {

        // Nq + 2[HNO3 + HCl] -> Naquadric Solution [Nq + NO2] + [H2O + HNO3] + HCl + Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, NaquadricCompound)
                .inputFluids(AquaRegia.getFluid(4000))
                .outputFluids(NaquadricSolution.getFluid(1000))
                .outputFluids(DiluteNitricAcid.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(Chlorine.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // Nq + 2[HNO3 + HCl] = Enriched Naquadric Solution [Nq + NO2] + [H2O + HNO3] + HCl + Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, EnrichedNaquadricCompound)
                .inputFluids(AquaRegia.getFluid(4000))
                .outputFluids(EnrichedNaquadricSolution.getFluid(1000))
                .outputFluids(DiluteNitricAcid.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(Chlorine.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // Nq + 2[HNO3 + HCl] = Naquadriatic Solution [Nq + NO2] + [H2O + HNO3] + HCl + Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, NaquadriaticCompound)
                .inputFluids(AquaRegia.getFluid(4000))
                .outputFluids(NaquadriaticSolution.getFluid(1000))
                .outputFluids(DiluteNitricAcid.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(Chlorine.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // Sb2O3 + 6HF = 2SbF3 + 3H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, AntimonyTrioxide, 5)
                .inputFluids(HydrofluoricAcid.getFluid(6000))
                .outputItems(AntimonyTrifluoride, 8)
                .outputFluids(Water.getFluid(3000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // SbF3 + 2F = SbF5
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,AntimonyTrifluoride, 4)
                .inputFluids(Fluorine.getFluid(2000))
                .outputFluids(AntimonyPentafluoride.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // SbF5 + 2HF = H2SbF7
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .circuitMeta(0)
                .inputFluids(AntimonyPentafluoride.getFluid(1000))
                .inputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(FluoroantimonicAcid.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // Naquadric Solution [Nq + NO2] + H2SbF7 = SbF3 + Fluoronaquadric Acid [H2NqF4] + NO2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NaquadricSolution.getFluid(1000))
                .inputFluids(FluoroantimonicAcid.getFluid(1000))
                .outputItems(AntimonyTrifluoride, 4)
                .outputFluids(FluoronaquadricAcid.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // Enriched Naquadric Solution [Nq + NO2] + H2SbF7 = SbF3 + Enriched Fluoronaquadric Acid [H2NqF4] + NO2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(EnrichedNaquadricSolution.getFluid(1000))
                .inputFluids(FluoroantimonicAcid.getFluid(1000))
                .outputItems(AntimonyTrifluoride, 4)
                .outputFluids(EnrichedFluoronaquadricAcid.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // Naquadriatic Solution [Nq + NO2] + H2SbF7 = SbF3 + Fluoronaquadriatic Acid [H2NqF4] + NO2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NaquadriaticSolution.getFluid(1000))
                .inputFluids(FluoroantimonicAcid.getFluid(1000))
                .outputItems(AntimonyTrifluoride, 4)
                .outputFluids(FluoronaquadriaticAcid.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // Fluoronaquadric Acid [H2NqF4] = 2HF + Naquadah Difluoride [NqF2]
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(FluoronaquadricAcid.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(NaquadahDifluoride.getFluid(1000))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // Enriched Fluoronaquadric Acid [H2NqF4] = 2HF + Enriched Naquadah Difluoride [NqF2]
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(EnrichedFluoronaquadricAcid.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(EnrichedNaquadahDifluoride.getFluid(1000))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // Fluoronaquadriatic Acid [H2NqF4] = 2HF + Naquadria Difluoride [NqF2]
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(FluoronaquadriaticAcid.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(NaquadriaDifluoride.getFluid(1000))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // 3 Naquadah Difluoride [NqF2] + 2In = 2InF3 + 3 Naquadah Concentrate [Nq]
        BLAST_RECIPES.recipeBuilder()
                .inputFluids(NaquadahDifluoride.getFluid(3000))
                .inputItems(dust, Indium, 2)
                .outputItems(IndiumTrifluoride, 8)
                .outputItems(NaquadahConcentrate, 3)
                .EUt(30720)
                .duration(100)
                .blastFurnaceTemp(4500)
                .save(provider);

        // 3 Enriched Naquadah Difluoride [NqF2] + 2In = 2InF3 + 3 Enriched Naquadah Concentrate [Nq]
        BLAST_RECIPES.recipeBuilder()
                .inputFluids(EnrichedNaquadahDifluoride.getFluid(3000))
                .inputItems(dust, Indium, 2)
                .outputItems(IndiumTrifluoride, 8)
                .outputItems(EnrichedNaquadahConcentrate, 3)
                .EUt(30720)
                .duration(100)
                .blastFurnaceTemp(4500)
                .save(provider);

        // 3 Naquadria Difluoride [NqF2] + 2In = 2InF3 + 3 Naquadria Concentrate [Nq]
        BLAST_RECIPES.recipeBuilder()
                .inputFluids(NaquadriaDifluoride.getFluid(3000))
                .inputItems(dust, Indium, 2)
                .outputItems(IndiumTrifluoride, 8)
                .outputItems(NaquadriaConcentrate, 3)
                .EUt(30720)
                .duration(100)
                .blastFurnaceTemp(4500)
                .save(provider);

        // 6F + Naquadria Concentrate [Nq] = Naquadria Hexafluoride [NqF6]
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Fluorine.getFluid(6000))
                .inputItems(dust,NaquadriaConcentrate)
                .outputFluids(NaquadriaHexafluoride.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // Rn + 2F = RnF2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Radon.getFluid(1000))
                .inputFluids(Fluorine.getFluid(2000))
                .outputFluids(RadonDifluoride.getFluid(1000))
                .EUt(120)
                .duration(200)
                .save(provider);

        // RnF2 + Naquadria Hexafluoride [NqF6] = Radon Naquadriaoctafluoride [RnNqF8]
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(RadonDifluoride.getFluid(1000))
                .inputFluids(NaquadriaHexafluoride.getFluid(1000))
                .outputFluids(RadonNaquadriaoctafluoride.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // Xe + 3O = XeO3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Xenon.getFluid(1000))
                .inputFluids(Oxygen.getFluid(3000))
                .outputFluids(XenonTrioxide.getFluid(1000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // XeO3 -> Xe + O3
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(XenonTrioxide.getFluid(1000))
                .outputFluids(Xenon.getFluid(1000))
                .outputFluids(Oxygen.getFluid(3000))
                .EUt(30)
                .duration(370)
                .save(provider);

        // Cs + F = CsF
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Caesium)
                .inputFluids(Fluorine.getFluid(1000))
                .outputFluids(CesiumFluoride.getFluid(1000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // CsF + XeO3 = CsXeO3F
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(CesiumFluoride.getFluid(1000))
                .inputFluids(XenonTrioxide.getFluid(1000))
                .outputFluids(CesiumXenontrioxideFluoride.getFluid(1000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // CsXeO3F + Radon Naquadriaoctafluoride [RnNqF8] = RnO3 + NqCsXeF9
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(CesiumXenontrioxideFluoride.getFluid(1000))
                .inputFluids(RadonNaquadriaoctafluoride.getFluid(1000))
                .outputFluids(RadonTrioxide.getFluid(1000))
                .outputFluids(NaquadriaCesiumXenonNonfluoride.getFluid(1000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        // NO2 + F = NO2F
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NitrogenDioxide.getFluid(1000))
                .inputFluids(Fluorine.getFluid(1000))
                .outputFluids(NitrylFluoride.getFluid(1000))
                .EUt(120)
                .duration(120)
                .save(provider);

        // 2NO2F + NqCsXeF9 = (NO2)2XeF8 + NqF2CsF
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NitrylFluoride.getFluid(2000))
                .inputFluids(NaquadriaCesiumXenonNonfluoride.getFluid(1000))
                .outputFluids(NitrosoniumOctafluoroxenate.getFluid(1000))
                .outputFluids(NaquadriaCesiumfluoride.getFluid(1000))
                .EUt(480)
                .duration(400)
                .save(provider);

        // NqF2CsF = Nq + 3F + Cs
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(NaquadriaCesiumfluoride.getFluid(1000))
                .outputItems(dust, Naquadria)
                .outputFluids(Fluorine.getFluid(3000))
                .outputItems(dust, Caesium)
                .EUt(30720)
                .duration(120)
                .save(provider);

        // RnO3 = Rn + O3
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(RadonTrioxide.getFluid(1000))
                .outputFluids(Radon.getFluid(1000))
                .outputFluids(Oxygen.getFluid(3000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // (NO2)2XeF8 = 8F + Xe + 2NO2
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(NitrosoniumOctafluoroxenate.getFluid(1000))
                .outputFluids(Fluorine.getFluid(8000))
                .outputFluids(Xenon.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(2000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // Enriched Naquadah Concentrate [Nq] + 6F = NqF6
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,EnrichedNaquadahConcentrate)
                .inputFluids(Fluorine.getFluid(6000))
                .outputFluids(EnrichedNaquadahhexafluoride.getFluid(1000))
                .EUt(480)
                .duration(175)
                .save(provider);

        // NqF6 + Xe = XeNqF6
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(EnrichedNaquadahhexafluoride.getFluid(1000))
                .inputFluids(Xenon.getFluid(1000))
                .outputFluids(EnrichedXenonHexafluoronaquadate.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // 2Au + 3Cl2 -> Au2Cl6
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust, Gold, 2)
                .inputFluids(Chlorine.getFluid(6000))
                .outputFluids(AuricChloride.getFluid(1000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // Br + 3F = BrF3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Bromine.getFluid(1000))
                .inputFluids(Fluorine.getFluid(3000))
                .outputFluids(BromineTrifluoride.getFluid(1000))
                .EUt(30)
                .duration(150)
                .save(provider);

        // 2BrF3 + Au2Cl6 = 2AuF3 + 2Br + 6Cl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(BromineTrifluoride.getFluid(2000))
                .inputFluids(AuricChloride.getFluid(1000))
                .outputItems(AuricFluoride, 8)
                .outputFluids(Bromine.getFluid(2000))
                .outputFluids(Chlorine.getFluid(6000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // H2SbF7 + AuF3 + XeNqF6 + 9H = Nq + 9HF + [AuXe + H2SbF7]
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,AuricFluoride, 4)
                .inputFluids(FluoroantimonicAcid.getFluid(1000))
                .inputFluids(EnrichedXenonHexafluoronaquadate.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(9000))
                .outputItems(dust, NaquadahEnriched)
                .outputFluids(XenoauricFluoroantimonicAcid.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(9000))
                .EUt(480)
                .duration(125)
                .save(provider);

        // [AuXe + H2SbF7] = Au + Xe + 2HF + SbF5
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(XenoauricFluoroantimonicAcid.getFluid(1000))
                .outputItems(dust, Gold)
                .outputFluids(Xenon.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(AntimonyPentafluoride.getFluid(1000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        // 2H2SO4 + 3H2O2 + 2K = 2KHSO5 + 4H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(SulfuricAcid.getFluid(2000))
                .inputFluids(HydrogenPeroxide.getFluid(3000))
                .inputItems(dust, Potassium, 2)
                .outputItems(PotassiumPeroxymonosulfate, 16)
                .outputFluids(Water.getFluid(4000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // KOH + O + H2SO4 -> KHSO5 + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(PotassiumHydroxide.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .outputItems(PotassiumPeroxymonosulfate, 8)
                .EUt(480)
                .duration(100)
                .save(provider);

        // HF + KHSO5 + Nq = H2O + KF + NqSO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrofluoricAcid.getFluid(1000))
                .inputItems(dust,PotassiumPeroxymonosulfate, 8)
                .inputItems(dust,NaquadahConcentrate)
                .outputFluids(Water.getFluid(1000))
                .outputItems(dust, PotassiumFluoride, 2)
                .outputFluids(NaquadahSulfate.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // NqSO4 + 2H = H2SO4 + Nq
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NaquadahSulfate.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(2000))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(dust, Naquadah)
                .EUt(7680)
                .duration(200)
                .save(provider);

        // 2InF3 + 3H2O = In2O3 + 6HF
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,IndiumTrifluoride, 8)
                .inputFluids(Water.getFluid(3000))
                .outputItems(IndiumTrioxide, 5)
                .outputFluids(HydrofluoricAcid.getFluid(6000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // In2O3 + 3C = 2In + 3CO
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,IndiumTrioxide, 5)
                .inputItems(dust, Carbon, 3)
                .outputItems(dust, Indium, 2)
                .outputFluids(CarbonMonoxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .blastFurnaceTemp(4500)
                .save(provider);

        // NH3 + HNO3 = NH4NO3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(NitricAcid.getFluid(1000))
                .outputFluids(AmmoniumNitrate.getFluid(1000))
                .EUt(480)
                .duration(120)
                .save(provider);

        // Nq + NH4NO3 = Naquadah Solution [Nq + NH4NO3]
        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, Naquadah)
                .inputFluids(AmmoniumNitrate.getFluid(1000))
                .outputFluids(NaquadahSolution.getFluid(1000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        // 2 Naquadah Solution [Nq + NH4NO3] = Clear Naquadah Liquid + NH3 + HNO3
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(NaquadahSolution.getFluid(2000))
                .outputFluids(ClearNaquadahLiquid.getFluid(1000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(NitricAcid.getFluid(1000))
                .outputItems(dustTiny, PlatinumRawPowder, 15)
                .outputItems(dustTiny, IridiumChloride, 12)
                .outputItems(dustTiny, Naquadah)
                .EUt(7680)
                .duration(150)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(ClearNaquadahLiquid.getFluid(1000))
                .outputFluids(ComplicatedNaquadahGas.getFluid(60))
                .outputFluids(ComplicatedLightNaquadah.getFluid(180))
                .outputFluids(ComplicatedMediumNaquadah.getFluid(320))
                .outputFluids(ComplicatedHeavyNaquadah.getFluid(440))
                .EUt(7680)
                .duration(500)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedNaquadahGas.getFluid(2000))
                .outputFluids(NaquadahGas.getFluid(1000))
                .outputItems(dustTiny, IridiumChloride, 4)
                .EUt(7680)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedHeavyNaquadah.getFluid(2000))
                .outputFluids(HeavyNaquadah.getFluid(1000))
                .outputItems(dustTiny, IridiumChloride, 4)
                .EUt(7680)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedLightNaquadah.getFluid(2000))
                .outputFluids(LightNaquadah.getFluid(1000))
                .outputItems(dustTiny, IridiumChloride, 4)
                .EUt(7680)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedMediumNaquadah.getFluid(2000))
                .outputFluids(MediumNaquadah.getFluid(1000))
                .outputItems(dustTiny, IridiumChloride, 4)
                .EUt(7680)
                .duration(200)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(MediumNaquadah.getFluid(1000))
                .inputFluids(Fluorine.getFluid(400))
                .outputFluids(FCrackedMediumNaquadah.getFluid(1400))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(LightNaquadah.getFluid(1000))
                .inputFluids(Fluorine.getFluid(200))
                .outputFluids(FCrackedLightNaquadah.getFluid(1200))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(HeavyNaquadah.getFluid(1000))
                .inputFluids(Fluorine.getFluid(600))
                .outputFluids(FCrackedHeavyNaquadah.getFluid(1600))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(FCrackedLightNaquadah.getFluid(1200))
                .outputFluids(NaquadahGas.getFluid(350))
                .outputFluids(LightNaquadahFuel.getFluid(400))
                .outputFluids(MediumNaquadahFuel.getFluid(150))
                .outputFluids(HeavyNaquadahFuel.getFluid(50))
                .outputFluids(Fluorine.getFluid(150))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(FCrackedMediumNaquadah.getFluid(1400))
                .outputFluids(NaquadahGas.getFluid(150))
                .outputFluids(LightNaquadahFuel.getFluid(200))
                .outputFluids(MediumNaquadahFuel.getFluid(400))
                .outputFluids(HeavyNaquadahFuel.getFluid(100))
                .outputFluids(Fluorine.getFluid(350))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(FCrackedHeavyNaquadah.getFluid(1600))
                .outputFluids(NaquadahGas.getFluid(50))
                .outputFluids(LightNaquadahFuel.getFluid(100))
                .outputFluids(MediumNaquadahFuel.getFluid(200))
                .outputFluids(HeavyNaquadahFuel.getFluid(400))
                .outputFluids(Fluorine.getFluid(550))
                .EUt(7680)
                .duration(200)
                .save(provider);

        // Cu + O + H2SO4 = [CuSO4 + H2O]
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Copper)
                .inputFluids(Oxygen.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(CopperSulfateSolution.getFluid(1000))
                .EUt(480)
                .duration(300)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(CopperSulfateSolution.getFluid(900))
                .inputFluids(NaquadahGas.getFluid(100))
                .inputItems(dust, NaquadahEnriched)
                .outputFluids(ENaquadahSolution.getFluid(1000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ENaquadahSolution.getFluid(2000))
                .outputItems(dustTiny, PlatinumRawPowder, 3)
                .outputFluids(OsmiumSolution.getFluid(350))
                .outputItems(dustTiny, NaquadahEnriched)
                .outputFluids(ClearENaquadahLiquid.getFluid(1000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(ClearENaquadahLiquid.getFluid(1000))
                .outputFluids(ComplicatedNaquadahGas.getFluid(60))
                .outputFluids(ComplicatedLightENaquadah.getFluid(180))
                .outputFluids(ComplicatedMediumENaquadah.getFluid(320))
                .outputFluids(ComplicatedHeavyENaquadah.getFluid(440))
                .EUt(7680)
                .duration(500)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedHeavyENaquadah.getFluid(2000))
                .outputFluids(HeavyENaquadah.getFluid(1000))
                .outputItems(dustTiny, Naquadria)
                .outputItems(dustTiny, IridiumChloride, 8)
                .outputFluids(OsmiumSolution.getFluid(350))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedLightENaquadah.getFluid(2000))
                .outputFluids(LightENaquadah.getFluid(1000))
                .outputItems(dustTiny, Naquadria)
                .outputItems(dustTiny, IridiumChloride, 8)
                .outputFluids(OsmiumSolution.getFluid(350))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ComplicatedMediumENaquadah.getFluid(2000))
                .outputFluids(MediumENaquadah.getFluid(1000))
                .outputItems(dustTiny, Naquadria)
                .outputItems(dustTiny, IridiumChloride, 8)
                .outputFluids(OsmiumSolution.getFluid(350))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(MediumENaquadah.getFluid(1000))
                .inputFluids(Radon.getFluid(400))
                .outputFluids(RnCrackedMediumENaquadah.getFluid(1400))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(LightENaquadah.getFluid(1000))
                .inputFluids(Radon.getFluid(200))
                .outputFluids(RnCrackedLightNaquadah.getFluid(1200))
                .EUt(7680)
                .duration(200)
                .save(provider);

        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(HeavyENaquadah.getFluid(1000))
                .inputFluids(Radon.getFluid(600))
                .outputFluids(RnCrackedHeavyENaquadah.getFluid(1600))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(RnCrackedLightNaquadah.getFluid(1200))
                .outputFluids(NaquadahGas.getFluid(350))
                .outputFluids(LightENaquadahFuel.getFluid(400))
                .outputFluids(MediumENaquadahFuel.getFluid(150))
                .outputFluids(HeavyENaquadahFuel.getFluid(50))
                .outputFluids(Radon.getFluid(180))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(RnCrackedMediumENaquadah.getFluid(1400))
                .outputFluids(NaquadahGas.getFluid(150))
                .outputFluids(LightENaquadahFuel.getFluid(200))
                .outputFluids(MediumENaquadahFuel.getFluid(400))
                .outputFluids(HeavyENaquadahFuel.getFluid(100))
                .outputFluids(Radon.getFluid(350))
                .EUt(7680)
                .duration(200)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(RnCrackedHeavyENaquadah.getFluid(1600))
                .outputFluids(NaquadahGas.getFluid(50))
                .outputFluids(LightENaquadahFuel.getFluid(100))
                .outputFluids(MediumENaquadahFuel.getFluid(200))
                .outputFluids(HeavyENaquadahFuel.getFluid(400))
                .outputFluids(Radon.getFluid(570))
                .EUt(7680)
                .duration(200)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust, Naquadria)
                .inputFluids(NitrogenDioxide.getFluid(500))
                .inputFluids(SulfuricAcid.getFluid(500))
                .outputFluids(NaquadriaSolution.getFluid(1000))
                .outputItems(dustTiny, Lutetium)
                .outputItems(dustTiny, Uranium)
                .outputItems(dustTiny, NaquadahEnriched)
                .outputItems(dustTiny, Plutonium)
                .EUt(7680)
                .duration(100)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputFluids(LightNaquadahFuel.getFluid(500))
                .inputFluids(LightENaquadahFuel.getFluid(300))
                .inputFluids(NaquadriaSolution.getFluid(200))
                .inputItems(dust, Rutherfordium)
                .inputFluids(Plutonium244Isotope.getMaterial().getFluid(144))
                .outputFluids(HyperFuelI.getFluid(2000))
                .EUt(1920)
                .duration(200)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputFluids(MediumNaquadahFuel.getFluid(400))
                .inputFluids(MediumENaquadahFuel.getFluid(350))
                .inputFluids(NaquadriaSolution.getFluid(250))
                .inputItems(dust, Dubnium)
                .inputFluids(Curium250.getMaterial().getFluid(144))
                .outputFluids(HyperFuelII.getFluid(2000))
                .EUt(7680)
                .duration(200)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputFluids(HeavyNaquadahFuel.getFluid(300))
                .inputFluids(HeavyENaquadahFuel.getFluid(400))
                .inputFluids(NaquadriaSolution.getFluid(300))
                .inputItems(dust, Adamantium)
                .inputFluids(Fermium258.getMaterial().getFluid(144))
                .outputFluids(HyperFuelIII.getFluid(2000))
                .EUt(30720)
                .duration(200)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputFluids(HyperFuelIII.getFluid(1000))
                .inputItems(dust, Neutronium)
                .inputItems(dust, Taranium)
                .outputFluids(HyperFuelIV.getFluid(3000))
                .EUt(8000000)
                .duration(1)
                .save(provider);
    }
}



public class NiobiumTantalumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // MnO2 + sugar(tiny) + H2SO4 -> + CO2 + MnSO4
        // weird, but probably fine
        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(1500)
                .inputItems(dust, Pyrolusite, 3)
                .inputItems(dustTiny, Sugar)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(111))
                .outputItems(ManganeseSulfate, 6)
                .save(provider);

        // MnCO3 + sugar(tiny) + H2SO4 -> CO2 + MnSO4
        // weird, but probably fine
        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(1500)
                .inputItems(dust, Rhodocrosite, 5)
                .inputItems(dustTiny, Sugar)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1111))
                .outputItems(ManganeseSulfate, 6)
                .save(provider);

        // MnSO4 -> Mn + S + 4O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(120).EUt(500)
                .inputItems(dust,ManganeseSulfate, 6)
                .outputItems(dust, Manganese)
                .outputItems(dust, Sulfur)
                .outputFluids(Oxygen.getFluid(4000))
                .save(provider);

        // SnO2 + C + H2O -> (SnO2)C
        MIXER_RECIPES.recipeBuilder().duration(340).EUt(30)
                .inputItems(dust, Cassiterite, 2)
                .inputItems(dust, Coke)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputItems(CassiteriteCokePellets, 5)
                .save(provider);

        // CokePellets -> CO2 + 2Sn + slag
        BLAST_RECIPES.recipeBuilder().duration(260).EUt(120).blastFurnaceTemp(1600)
                .inputItems(dust,CassiteriteCokePellets, 5)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(ingot, Tin, 2)
                .outputItems(TinSlag)
                .save(provider);

        // 6slag -> ash + ?
        CENTRIFUGE_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust,TinSlag, 6)
                .outputItems(dust, DarkAsh)
                .outputItems(NbTaContainingDust, 4)
                .save(provider);

        // ? + C + SiO2 -> CO2 + FeSiO3 + (Nb2O5)(Ta2O5)
        BLAST_RECIPES.recipeBuilder().duration(260).EUt(120).blastFurnaceTemp(1600)
                .inputItems(dust,NbTaContainingDust, 4)
                .inputItems(dust, Carbon)
                .inputItems(dust, SiliconDioxide, 3)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(ingot, Ferrosilite, 5)
                .outputItems(NiobiumTantalumOxide, 14)
                .save(provider);

        // 19HF + (Nb2O5)(Ta2O5) -> AlF3 + SiF4 + ? + 7.5H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(1920)
                .inputFluids(HydrofluoricAcid.getFluid(19000))
                .inputItems(dust,NiobiumTantalumOxide, 14)
                .outputItems(dust, AluminiumTrifluoride, 4)
                .outputFluids(SiliconFluoride.getFluid(1000))
                .outputFluids(NbTaFluorideMix.getFluid(1000))
                .outputFluids(Water.getFluid(7500))
                .save(provider);

        // BaO + O -> BaO2
        BLAST_RECIPES.recipeBuilder().duration(230).EUt(120).blastFurnaceTemp(2300)
                .inputItems(dust,BariumOxide, 2)
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(BariumPeroxide, 3)
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(3400)
                .inputItems(dust, Columbite)
                .inputItems(dust,BariumPeroxide, 3)
                .inputItems(dust, SodiumHydroxide, 3)
                .outputFluids(Water.getFluid(500))
                .outputItems(FusedColumbite, 9)
                .outputItems(ColumbiteMinorOxideResidue, 4)
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(240).EUt(30)
                .inputItems(dust,FusedColumbite, 9)
                .inputFluids(SulfuricAcid.getFluid(4000))
                .outputItems(LeachedColumbite, 17)
                .outputItems(IronSulfateDust, 12)
                .outputItems(dust, SodiumSulfate, 14)
                .save(provider);

        // FeSO4 -> Fe + S + 4O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(400).EUt(120)
                .inputItems(dust,IronSulfateDust, 6)
                .outputItems(dust, Iron)
                .outputItems(dust, Sulfur)
                .outputFluids(Oxygen.getFluid(4000))
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputItems(dust,ColumbiteMinorOxideResidue, 4)
                .outputItems(BariumOxide, 2)
                .chancedOutput(ChemicalHelper.get(dust, Cassiterite, 2), 1000, 75)
                .chancedOutput(ChemicalHelper.get(dust, TungstenTrioxide, 4), 1000, 75)
                .chancedOutput(dust, Alumina, 5, 1000, 75)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(480)
                .inputItems(dust,LeachedColumbite, 17)
                .inputFluids(HydrofluoricAcid.getFluid(10400))
                .outputFluids(FluoroniobicAcid.getFluid(2000))
                .outputFluids(Water.getFluid(3200))
                .save(provider);

        // MnTa2O6 + BaO2 + NaOH -> 0.5H2O + (Fe2O3)(NaO)Ta2O5 + (BaO)(ZrO2)(TiO2)(SiO2)
        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(3400)
                .inputItems(dust, Tantalite, 5)
                .inputItems(dust,BariumPeroxide, 3)
                .inputItems(dust, SodiumHydroxide, 3)
                .outputFluids(Water.getFluid(1000))
                .outputItems(FusedTantalite, 9)
                .outputItems(TantaliteMinorOxideResidue, 4)
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust,FusedTantalite, 9)
                .inputFluids(SulfuricAcid.getFluid(4000))
                .outputItems(LeachedTantalite, 17)
                .outputItems(dust, SodiumSulfate, 14)
                .outputItems(ManganeseSulfate, 12)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(260).EUt(480)
                .inputItems(dust,TantaliteMinorOxideResidue, 4)
                .outputItems(BariumOxide, 2)
                .chancedOutput(ChemicalHelper.get(dust, CubicZirconia, 3), 1000, 75)
                .chancedOutput(ChemicalHelper.get(dust, Rutile, 3), 1000, 75)
                .chancedOutput(ChemicalHelper.get(dust, SiliconDioxide, 3), 1000, 75)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust,LeachedTantalite, 17)
                .inputFluids(HydrofluoricAcid.getFluid(13600))
                .outputFluids(FluorotantalicAcid.getFluid(2000))
                .outputFluids(Water.getFluid(4800))
                .save(provider);

        // C12H27O4P + C6H12O -> C18H39O5P
        MIXER_RECIPES.recipeBuilder().duration(220).EUt(30)
                .inputFluids(TributylPhosphate.getFluid(1000))
                .inputFluids(MethylIsobutylKetone.getFluid(1000))
                .outputFluids(NbTaSeparationMixture.getFluid(2000))
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(350).EUt(480).blastFurnaceTemp(2700)
                .inputItems(dust, Pyrochlore, 6)
                .inputFluids(SulfuricAcid.getFluid(2000))
                .outputItems(AcidicLeachedPyrochlore, 6)
                .outputFluids(REEThUSulfateSolution.getFluid(1000))
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputItems(dust,AcidicLeachedPyrochlore, 3)
                .inputFluids(HydrogenPeroxide.getFluid(3000))
                .inputFluids(SulfuricAcid.getFluid(12000))
                .outputFluids(HydrofluoricAcid.getFluid(13000))
                .outputFluids(AlkalineEarthSulfateSolution.getFluid(8000))
                .outputFluids(Oxygen.getFluid(3000))
                .outputItems(LeachedPyrochlore, 3)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust,LeachedPyrochlore)
                .inputFluids(HydrofluoricAcid.getFluid(10400))
                .outputFluids(FluoroniobicAcid.getFluid(2000))
                .outputFluids(Water.getFluid(3200))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputFluids(REEThUSulfateSolution.getFluid(2000))
                .inputFluids(NitricAcid.getFluid(7000))
                .outputItems(UranylThoriumNitrate.getItemStack(26))
                .outputFluids(RareEarthNitrateSolution.getFluid(1000))
                .outputFluids(SulfuricAcid.getFluid(4000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(480)
                .inputFluids(RareEarthNitrateSolution.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(3000))
                .outputFluids(NitricAcid.getFluid(3000))
                .outputFluids(RareEarthChloridesSolution.getFluid(1000))
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(250).EUt(1920)
                .inputFluids(AlkalineEarthSulfateSolution.getFluid(4000))
                .outputFluids(Water.getFluid(4000))
                .outputItems(dust, Barite, 3)
                .outputItems(dust, Gypsum, 8)
                .outputItems(dust, Celestine, 6)
                .outputItems(dustSmall, Radium, 2)
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(7680)
                .inputFluids(FluoroniobicAcid.getFluid(10000))
                .inputFluids(NbTaSeparationMixture.getFluid(1000))
                .outputFluids(OxypentafluoroNiobate.getFluid(9000))
                .outputFluids(HeptafluoroTantalate.getFluid(1000))
                .save(provider);

        // (H2NbOF5 + H2TaF7) -> H2NbOF5 + H2TaF7
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(7680)
                .inputFluids(NbTaFluorideMix.getFluid(2000))
                .inputFluids(NbTaSeparationMixture.getFluid(200))
                .outputFluids(OxypentafluoroNiobate.getFluid(1000))
                .outputFluids(HeptafluoroTantalate.getFluid(1000))
                .save(provider);

        // 10HTaF7 -> H2NbOF5 + 9H2TaF7
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(7680)
                .inputFluids(FluorotantalicAcid.getFluid(10000))
                .inputFluids(NbTaSeparationMixture.getFluid(1000))
                .outputFluids(OxypentafluoroNiobate.getFluid(1000))
                .outputFluids(HeptafluoroTantalate.getFluid(9000))
                .save(provider);

        // H2NbOF5 + 2KF -> K2NbF7 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(120)
                .inputFluids(OxypentafluoroNiobate.getFluid(1000))
                .inputItems(dust, PotassiumFluoride, 4)
                .outputItems(PotasssiumFluoroNiobate, 10)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // H2TaF7 + 2KOH -> K2TaF7 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(120)
                .inputFluids(HeptafluoroTantalate.getFluid(1000))
                .inputFluids(PotassiumHydroxide.getFluid(2000))
                .outputItems(PotasssiumFluoroTantalate, 10)
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // K2NbF7 + 5Na -> 5NaF + 2KF + Nb
        ELECTROLYZER_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust,PotasssiumFluoroNiobate, 10)
                .inputFluids(Sodium.getFluid(5000))
                .outputItems(dust, SodiumFluoride, 10)
                .outputItems(dust, PotassiumFluoride, 4)
                .outputItems(dust, Niobium)
                .save(provider);

        // K2TaF7 + 5Na -> 5NaF + 2KF + Ta
        ELECTROLYZER_RECIPES.recipeBuilder().duration(170).EUt(120)
                .inputItems(dust,PotasssiumFluoroTantalate, 10)
                .inputFluids(Sodium.getFluid(5000))
                .outputItems(dust, SodiumFluoride, 10)
                .outputItems(dust, PotassiumFluoride, 4)
                .outputItems(dust, Tantalum)
                .save(provider);
    }
}




public class NuclearChain {

        public static void init(Consumer<FinishedRecipe> provider) {
        //NUCLEAR PROCESSING

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(30)
                .inputItems(dust,PROTACTINIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 560, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Protactinium233.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Thorium, 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(30)
                .inputItems(dust,THORIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 560, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Protactinium233.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Uranium, 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(60)
                .inputItems(dust,URANIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 760, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Uranium, 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Neptunium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(120)
                .inputItems(dust,NEPTUNIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 1000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Neptunium.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, PlutoniumRadioactive.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(240)
                .inputItems(dust,PLUTONIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 1330, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, PlutoniumRadioactive.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, AmericiumRadioactive.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(480)
                .inputItems(dust,AMERICIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 1780, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, AmericiumRadioactive.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Curium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(960)
                .inputItems(dust,CURIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 2370, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Curium.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Berkelium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(1920)
                .inputItems(dust,BERKELIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 3160, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Berkelium.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Californium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(3840)
                .inputItems(dust,CALIFORNIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 4220, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Californium.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Einsteinium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(7680)
                .inputItems(dust,EINSTEINIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 5630, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Einsteinium.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Fermium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(15360)
                .inputItems(dust,FERMIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 7500, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Fermium.getMaterial(), 1), 8000, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Mendelevium.getMaterial(), 3), 8000, 200)
                .save(provider);

        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(30720)
                .inputItems(dust,MENDELEVIUM_WASTE)
                .chancedOutput(NUCLEAR_WASTE, 10000, 0)
                .chancedOutput(ChemicalHelper.get(dustTiny, Mendelevium.getMaterial(), 1), 8000, 200)
                .save(provider);

        // 3K + 7Na -> Na7K3
        MIXER_RECIPES.recipeBuilder().duration(300).EUt(120)
                .inputItems(dust, Potassium, 3)
                .inputItems(dust, Sodium, 7)
                .outputItems(dust, SodiumPotassiumAlloy, 10)
                .save(provider);

        // LiOH(H2O) + HF -> LiF + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(200)
                .inputFluids(LithiumHydroxideSolution.getFluid(1000))
                .inputFluids(HydrofluoricAcid.getFluid(1000))
                .outputItems(dust, LithiumFluoride, 2)
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // Na + F -> NaF
        CHEMICAL_RECIPES.recipeBuilder().duration(200)
                .inputItems(dust, Sodium)
                .inputFluids(Fluorine.getFluid(1000))
                .outputItems(dust, SodiumFluoride, 2)
                .save(provider);

        // K + F -> KF
        CHEMICAL_RECIPES.recipeBuilder().duration(200)
                .inputItems(dust, Potassium)
                .inputFluids(Fluorine.getFluid(1000))
                .outputItems(dust, PotassiumFluoride, 2)
                .save(provider);

        // LiF + NaF + KF -> LiNaKF3
        MIXER_RECIPES.recipeBuilder().EUt(64).duration(480)
                .inputItems(dust, LithiumFluoride, 2)
                .inputItems(dust, SodiumFluoride, 2)
                .inputItems(dust, PotassiumFluoride, 2)
                .outputItems(dust, FLiNaK, 6)
                .save(provider);

        // Be + 2F -> BeF2
        CHEMICAL_RECIPES.recipeBuilder().duration(30)
                .inputItems(dust, Beryllium)
                .inputFluids(Fluorine.getFluid(2000))
                .outputItems(dust, BerylliumFluoride, 3)
                .save(provider);

        // LiF + BeF2 -> F3LiBe
        MIXER_RECIPES.recipeBuilder().duration(600).EUt(120)
                .inputItems(dust, LithiumFluoride, 2)
                .inputItems(dust, BerylliumFluoride, 3)
                .outputItems(dust, FLiBe, 5)
                .save(provider);

        // 3Pb + 7Bi -> Pb3Bi7
        ALLOY_SMELTER_RECIPES.recipeBuilder().duration(100).EUt(16)
                .inputItems(dust, Lead, 3)
                .inputItems(dust, Bismuth, 7)
                .outputItems(dust, LeadBismuthEutectic, 10)
                .save(provider);

        ALLOY_SMELTER_RECIPES.recipeBuilder().duration(100).EUt(16)
                .inputItems(ingot, Lead, 3)
                .inputItems(dust, Bismuth, 7)
                .outputItems(dust, LeadBismuthEutectic, 10)
                .save(provider);

        ALLOY_SMELTER_RECIPES.recipeBuilder().duration(100).EUt(16)
                .inputItems(dust, Lead, 3)
                .inputItems(ingot, Bismuth, 7)
                .outputItems(dust, LeadBismuthEutectic, 10)
                .save(provider);

        ALLOY_SMELTER_RECIPES.recipeBuilder().duration(100).EUt(16)
                .inputItems(ingot, Lead, 3)
                .inputItems(ingot, Bismuth, 7)
                .outputItems(dust, LeadBismuthEutectic, 10)
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().EUt(30).duration(200)
                .inputItems(dust, LeadBismuthEutectic)
                .outputFluids(LeadBismuthEutectic.getFluid(144))
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().EUt(30).duration(200)
                .inputItems(dust, FLiBe)
                .outputFluids(FLiBe.getFluid(144))
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().EUt(30).duration(100)
                .inputItems(dust, FLiNaK)
                .outputFluids(FLiNaK.getFluid(144))
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().EUt(30).duration(160)
                .inputItems(dust, SodiumPotassiumAlloy)
                .outputFluids(SodiumPotassiumAlloy.getFluid(144))
                .save(provider);

        ModHandler.addSmeltingRecipe(ChemicalHelper.get(ingot, Protactinium233.getMaterial()), ChemicalHelper.get(ingot, Protactinium.getMaterial()));
        ModHandler.addSmeltingRecipe(ChemicalHelper.get(ingot, Protactinium.getMaterial()), ChemicalHelper.get(ingot, Protactinium233.getMaterial()));


        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE)
                .chancedOutput(NUCLEAR_WASTE_LANTHANIDE_A, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_LANTHANIDE_B, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_ALKALINE, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_HEAVY_METAL, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_METAL_A, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_METAL_B, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_METAL_C, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_REACTIVE_NONMETAL, 1111, 111)
                .chancedOutput(NUCLEAR_WASTE_METALOID, 1111, 111).save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_HEAVY_METAL)
                .outputFluids(Mercury.getFluid(250))
                .chancedOutput(ChemicalHelper.get(dustTiny, Zinc, 2), 5555, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Gallium, 2), 5555, 300)
                .chancedOutput(ChemicalHelper.get(dustTiny, Cadmium, 2), 5555, 400)
                .chancedOutput(ChemicalHelper.get(dustTiny, Indium, 2), 5555, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Tin, 2), 5555, 600)
                .chancedOutput(ChemicalHelper.get(dustTiny, Thallium, 2), 5555, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Lead, 2), 5555, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Bismuth, 2), 5555, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Polonium, 2), 5555, 1000)
                .save(provider);


        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_LANTHANIDE_A)
                .chancedOutput(ChemicalHelper.get(dustTiny, Dysprosium, 2), 8333, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Holmium, 2), 8333, 600)
                .chancedOutput(ChemicalHelper.get(dustTiny, Erbium, 2), 8333, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Thulium, 2), 8333, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Ytterbium, 2), 8333, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Lutetium, 2), 8333, 1000)
                .save(provider);
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_LANTHANIDE_B)
                .chancedOutput(ChemicalHelper.get(dustTiny, Lanthanum, 2), 5555, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Cerium, 2), 5555, 300)
                .chancedOutput(ChemicalHelper.get(dustTiny, Praseodymium, 2), 5555, 400)
                .chancedOutput(ChemicalHelper.get(dustTiny, Neodymium, 2), 5555, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Promethium, 2), 5555, 600)
                .chancedOutput(ChemicalHelper.get(dustTiny, Samarium, 2), 5555, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Europium, 2), 5555, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Gadolinium, 2), 5555, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Terbium, 2), 5555, 1000)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_METAL_A)
                .chancedOutput(ChemicalHelper.get(dustTiny, Hafnium, 2), 6250, 300)
                .chancedOutput(ChemicalHelper.get(dustTiny, Tantalum, 2), 6250, 400)
                .chancedOutput(ChemicalHelper.get(dustTiny, Tungsten, 2), 6250, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Osmium, 2), 6250, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Iridium, 2), 6250, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Platinum, 2), 6250, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Gold, 2), 6250, 1000)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_METAL_B)
                .chancedOutput(ChemicalHelper.get(dustTiny, Yttrium, 2), 5555, 200)
                .chancedOutput(ChemicalHelper.get(dustTiny, Zirconium, 2), 5555, 300)
                .chancedOutput(ChemicalHelper.get(dustTiny, Niobium, 2), 5555, 400)
                .chancedOutput(ChemicalHelper.get(dustTiny, Molybdenum, 2), 5555, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Technetium, 2), 5555, 600)
                .chancedOutput(ChemicalHelper.get(dustTiny, Ruthenium, 2), 5555, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Rhodium, 2), 5555, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Palladium, 2), 5555, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Silver, 2), 5555, 1000)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_METAL_C)
                .outputItems(dustTiny, Iron, 2)
                .outputItems(dustTiny, Cobalt, 2)
                .outputItems(dustTiny, Nickel, 2)
                .outputItems(dustTiny, Copper, 2)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_METALOID)
                .chancedOutput(ChemicalHelper.get(dustTiny, Germanium, 2), 6250, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Arsenic, 2), 6250, 600)
                .chancedOutput(ChemicalHelper.get(dustTiny, Antimony, 2), 6250, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Tellurium, 2), 6250, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Astatine, 2), 6250, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Actinium, 2), 6250, 1000)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_ALKALINE)
                .chancedOutput(ChemicalHelper.get(dustTiny, Rubidium, 2), 6250, 500)
                .chancedOutput(ChemicalHelper.get(dustTiny, Strontium, 2), 6250, 600)
                .chancedOutput(ChemicalHelper.get(dustTiny, Caesium, 2), 6250, 700)
                .chancedOutput(ChemicalHelper.get(dustTiny, Barium, 2), 6250, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Francium, 2), 6250, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Radium, 2), 6250, 1000)
                .save(provider);


        CENTRIFUGE_RECIPES.recipeBuilder().EUt(32).duration(300)
                .inputItems(dust,NUCLEAR_WASTE_REACTIVE_NONMETAL)
                .outputFluids(Krypton.getFluid(250))
                .outputFluids(Xenon.getFluid(500))
                .outputFluids(Radon.getFluid(1000))
                .chancedOutput(ChemicalHelper.get(dustTiny, Selenium, 2), 6250, 800)
                .chancedOutput(ChemicalHelper.get(dustTiny, Bromine, 2), 6250, 900)
                .chancedOutput(ChemicalHelper.get(dustTiny, Iodine, 2), 6250, 1000)
                .save(provider);
    }
}





public class OpticalChain {

        public static void init(Consumer<FinishedRecipe> provider) { // TODO

        // FIBER CHEMISTRY =============================================================================================

        // Zr + 4F -> ZrF4
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputItems(dust, Zirconium)
                .inputFluids(Fluorine.getFluid(4000))
                .outputItems(ZirconiumTetrafluoride, 5)
                .save(provider);

        // Ba + 2F -> BaF2
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputItems(dust, Barium)
                .inputFluids(Fluorine.getFluid(2000))
                .outputItems(BariumDifluoride, 3)
                .save(provider);

        // La + 3F -> LaF3
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputItems(dust, Lanthanum)
                .inputFluids(Fluorine.getFluid(3000))
                .outputItems(LanthanumTrifluoride, 4)
                .save(provider);

        // Al + 3F -> AlF3
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputItems(dust, Aluminium)
                .inputFluids(Fluorine.getFluid(3000))
                .outputItems(dust, AluminiumTrifluoride, 4)
                .save(provider);

        // Er + 3F -> ErF3
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputItems(dust, Erbium)
                .inputFluids(Fluorine.getFluid(3000))
                .outputItems(ErbiumTrifluoride, 4)
                .save(provider);

        // Si + 4F -> SiF4
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(480)
                .inputItems(dust, Silicon)
                .inputFluids(Fluorine.getFluid(4000))
                .outputFluids(SiliconFluoride.getFluid(1000))
                .save(provider);

        // LASER CHEMISTRY =============================================================================================

        // SiF4 + 2HF -> H2SiF6
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(480)
                .inputFluids(SiliconFluoride.getFluid(1000))
                .inputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(FluorosilicicAcid.getFluid(1000))
                .save(provider);

        // H2SiF6 + 6NH3 + 2H2O -> SiO2 + 6NH4F
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputFluids(FluorosilicicAcid.getFluid(1000))
                .inputFluids(Ammonia.getFluid(6000))
                .inputFluids(Water.getFluid(2000))
                .outputItems(dust, SiliconDioxide, 3)
                .outputFluids(AmmoniumFluoride.getFluid(6000))
                .save(provider);

        // 2NH4F -> NH3 + NH4HF2
        CENTRIFUGE_RECIPES.recipeBuilder().duration(340).EUt(120)
                .inputFluids(AmmoniumFluoride.getFluid(2000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputItems(AmmoniumBifluoride, 8)
                .save(provider);

        // H2O + NH4HF2 -> [NH4HF2 + H2O]
        MIXER_RECIPES.recipeBuilder().duration(140).EUt(30)
                .inputFluids(DistilledWater.getFluid(1000))
                .inputItems(dust,AmmoniumBifluoride, 8)
                .outputFluids(AmmoniumBifluorideSolution.getFluid(1000))
                .save(provider);

        // [NH4HF2 + H2O] -> NH3 + 2HF + H2O
        CENTRIFUGE_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputFluids(AmmoniumBifluorideSolution.getFluid(2000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // NH4VO3 + NaCl + Na2O -> Na3VO4 + NH4Cl
        BLAST_RECIPES.recipeBuilder().duration(280).EUt(120).blastFurnaceTemp(700)
                .inputItems(dust,AmmoniumVanadate, 9)
                .inputItems(dust, Salt, 2)
                .inputItems(dust,SodiumOxide, 3)
                .outputItems(PureSodiumVanadate, 8)
                .outputFluids(AmmoniumChloride.getFluid(1000))
                .save(provider);

        // 2Na + O -> Na2O
        CHEMICAL_RECIPES.recipeBuilder().duration(60).EUt(30)
                .circuitMeta(1)
                .inputItems(dust, Sodium, 2)
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(SodiumOxide, 3)
                .save(provider);

        // 3Y2O3 + Lu2O3 + Tm2O3 + 30HCl -> [6YCl3 + 2LuCl3 + 2TmCl3 + 15H2O]
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(15360)
                .inputItems(dust, YttriumOxide,15)
                .inputItems(dust,LutetiumOxide, 5)
                .inputItems(dust,ThuliumOxide, 5)
                .inputFluids(HydrochloricAcid.getFluid(30000))
                .outputFluids(LuTmYChlorideSolution.getFluid(30000))
                .save(provider);

        // NaVO3 + NH4Cl + H2O -> NH4VO3 + NaCl(H2O)
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(120)
                .inputItems(dust,SodiumMetavanadate, 5)
                .inputFluids(Water.getFluid(1000))
                .inputFluids(AmmoniumChloride.getFluid(1000))
                .outputItems(AmmoniumVanadate, 9)
                .outputFluids(SaltWater.getFluid(1000))
                .save(provider);

        // [6YCl3 + 2LuCl3 + 2TmCl3 + 15H2O] + Na3VO4 + 2CH4N2O -> LuTmYVO Precipitate + 0.9Cl
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputFluids(LuTmYChlorideSolution.getFluid(1000))
                .inputItems(dust,PureSodiumVanadate, 8)
                .inputItems(dust,Urea, 16)
                .outputFluids(Chlorine.getFluid(900))
                .outputItems(LuTmYVOPrecipitate)
                .save(provider);

        // LuTmYVO Precipitate + C2H6O -> LuTmYVO Nanoparticles + 3NaCl + (NH4)2CO3 + C3H6
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(200).EUt(7680)
                .inputItems(dust,LuTmYVOPrecipitate)
                .inputFluids(Ethanol100.getFluid(1000))
                .outputItems(LuTmYVONanoparticles)
                .outputItems(dust, Salt, 6)
                .outputItems(AmmoniumCarbonate, 14)
                .outputFluids(Propene.getFluid(1000))
                .save(provider);

        // (NH4)2CO3 + Ca + NaH + 2O -> 2NH3 + Ca(OH)2 + NaHCO3
        BLAST_RECIPES.recipeBuilder().duration(270).EUt(120).blastFurnaceTemp(700)
                .inputItems(dust,AmmoniumCarbonate, 14)
                .inputItems(dust,SodiumHydride, 2)
                .inputItems(dust, Calcium)
                .inputFluids(Oxygen.getFluid(2000))
                .outputFluids(Ammonia.getFluid(2000))
                .outputItems(SodiumBicarbonate, 6)
                .outputItems(CalciumHydroxide, 5)
                .save(provider);

        // NaH -> Na + H
        ELECTROLYZER_RECIPES.recipeBuilder().duration(240).EUt(30)
                .inputItems(dust,SodiumHydride, 2)
                .outputItems(dust, Sodium)
                .outputFluids(Hydrogen.getFluid(1000))
                .save(provider);

        // MgF2 + ZnS + Ta2O5 + TiO2 + C2H5OH -> Dielectric Mirror Formation Mix
        MIXER_RECIPES.recipeBuilder().duration(270).EUt(983040)
                .inputItems(dust,MagnesiumFluoride, 3)
                .inputItems(dust,ZincSulfide, 2)
                .inputItems(dust,TantalumOxide, 7)
                .inputItems(dust, Rutile, 3)
                .inputFluids(Ethanol.getFluid(1000))
                .outputFluids(DielectricMirrorFormationMix.getFluid(1000))
                .save(provider);

        // COMPONENTS CHEMISTRY ========================================================================================

        // Nb + 5Cl -> NbCl5
        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(120)
                .inputItems(dust, Niobium)
                .inputFluids(Chlorine.getFluid(5000))
                .outputItems(NiobiumChloride, 6)
                .save(provider);

        // LiAlH4 -> LiH + AlH3
        BLAST_RECIPES.recipeBuilder().duration(260).EUt(120).blastFurnaceTemp(1600)
                .inputItems(dust,LithiumAluminiumHydride, 6)
                .outputItems(LithiumHydride, 2)
                .outputItems(AluminiumHydride, 4)
                .save(provider);

        // NbCl5 + LiH + 2H2O2 -> LiNbO4 + 5HCl
        BLAST_RECIPES.recipeBuilder().duration(320).EUt(120).blastFurnaceTemp(4500)
                .inputItems(dust,NiobiumChloride, 6)
                .inputItems(dust,LithiumHydride, 2)
                .notConsumable(dust, Hafnium)
                .inputFluids(HydrogenPeroxide.getFluid(2000))
                .outputItems(ingotHot, LithiumNiobate, 6)
                .outputFluids(HydrochloricAcid.getFluid(5000))
                .save(provider);

        // 5NaOH + NbCl5 -> 5NaCl + H5NbO5
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust, SodiumHydroxide, 15)
                .inputItems(dust,NiobiumChloride, 6)
                .outputItems(dust, Salt, 10)
                .outputItems(NiobiumHydroxide, 11)
                .save(provider);

        // 2H5NbO5 + 5C2H2O4 + NH3 + Na -> 9H2O + [C10Nb2O20 + NH4] + NaOH
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(480)
                .inputItems(dust,NiobiumHydroxide.getItemStack(22))
                .inputItems(dust, Sodium)
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(OxalicAcid.getFluid(5000))
                .outputItems(dust ,SodiumHydroxide, 3)
                .outputFluids(Water.getFluid(9000))
                .outputFluids(AmmoniumNiobiumOxalateSolution.getFluid(1000))
                .save(provider);

        // [C10Nb2O20 + NH4] + 2LiNbO4 -> Nanoparticles
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(260).EUt(491520)
                .inputItems(dust, LithiumNiobate, 12)
                .inputFluids(AmmoniumNiobiumOxalateSolution.getFluid(1000))
                .outputItems(LithiumNiobateNanoparticles, 3)
                .save(provider);

        // MgO + NH4HF2 -> MgF2 + NH3 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Magnesia, 2)
                .inputItems(dust,AmmoniumBifluoride, 8)
                .outputItems(MagnesiumFluoride, 3)
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // P + I -> InP
        BLAST_RECIPES.recipeBuilder().duration(270).EUt(120).blastFurnaceTemp(4600)
                .inputItems(dust, Phosphorus)
                .inputItems(dust, Indium)
                .outputItems(dust, IndiumPhospide, 2)
                .save(provider);

        // Zn + S -> ZnS
        BLAST_RECIPES.recipeBuilder().duration(270).EUt(120).blastFurnaceTemp(4600)
                .inputItems(dust, Zinc)
                .inputItems(dust, Sulfur)
                .outputItems(ZincSulfide, 2)
                .save(provider);

        // NH4NO3 -> NH3 + HNO3
        ELECTROLYZER_RECIPES.recipeBuilder().duration(220).EUt(120)
                .inputFluids(AmmoniumNitrate.getFluid(1000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(NitricAcid.getFluid(1000))
                .save(provider);

        // C2H7NO + NH3 -> C2H8N2 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputFluids(Ethanolamine.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(Ethylenediamine.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .notConsumable(dust, Palladium)
                .save(provider);

        // 2C2H8N2 + 24CH2O + 8HCl + 8NaCN + 6O -> [3[C10H16N2O8 + C2H8N2 + 2O] + 8NaCl]
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(7680)
                .inputFluids(Ethylenediamine.getFluid(2000))
                .inputFluids(Formaldehyde.getFluid(24000))
                .inputFluids(HydrochloricAcid.getFluid(8000))
                .inputFluids(SodiumCyanide.getFluid(8000))
                .inputFluids(Oxygen.getFluid(6000))
                .outputFluids(EDTASolution.getFluid(15000))
                .save(provider);

        // [3[C10H16N2O8 + C2H8N2 + 2O] + 8NaCl] -> 8NaCl + 3C10H16N2O8 + 3[C2H8N2 + 2O]
        // 3[C2H8N2 + 2O] -> 3C2H5NO2 + 3NH3
        DISTILLATION_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .inputFluids(EDTASolution.getFluid(15000))
                .outputItems(dust, Salt, 16)
                .outputFluids(Ammonia.getFluid(3000))
                .outputFluids(EDTA.getFluid(3000))
                .outputFluids(Glycine.getFluid(3000))
                .save(provider);

        // C2H5NO2 + CH4 + 2 Br + 2 CsOH -> 2 [CsBr + H2O] + C3H7NO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .notConsumable(WHITE_HALIDE_LAMP)
                .inputItems(dust,CaesiumHydroxide, 6)
                .inputFluids(Glycine.getFluid(1000))
                .inputFluids(Methane.getFluid(1000))
                .inputFluids(Bromine.getFluid(2000))
                .outputFluids(CesiumBromideSolution.getFluid(2000))
                .outputItems(Sarcosine, 13)
                .save(provider);

        // 2Cs + H2O2 -> 2CsOH
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputItems(dust, Caesium, 2)
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputItems(CaesiumHydroxide, 6)
                .save(provider);

        // [CsBr + H2O] -> CsOH + Br + H
        ELECTROLYZER_RECIPES.recipeBuilder().duration(250).EUt(120)
                .inputFluids(CesiumBromideSolution.getFluid(1000))
                .outputFluids(Bromine.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(1000))
                .outputItems(CaesiumHydroxide, 3)
                .save(provider);

        // 2Pr + H2SO4 -> Pr2O3 + H2S + O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputItems(dust, Praseodymium, 2)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(PraseodymiumOxide, 5)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // 2Ho + H2SO4 -> Ho2O3 + H2S + O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputItems(dust, Holmium, 2)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(HolmiumOxide, 5)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // 2Nd + H2SO4 -> Nd2O3 + H2S + O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputItems(dust, Neodymium, 2)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(NeodymiumOxide, 5)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // 2Y + H2SO4 -> Y2O3 + H2S + O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputItems(dust, Yttrium, 2)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(dust, YttriumOxide, 5)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // 3Y2O3 + Pr2O3 + Ho2O3 + 30HNO3 -> [6Y(NO3)3 + 2Pr(NO3)3 + 2Ho(NO3)3 + 15H2O]
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(15360)
                .inputItems(dust, YttriumOxide,15)
                .inputItems(dust,PraseodymiumOxide, 5)
                .inputItems(dust,HolmiumOxide, 5)
                .inputFluids(NitricAcid.getFluid(30000))
                .outputFluids(PrYHoNitrateSolution.getFluid(30000))
                .save(provider);

        // Be + LiF + 2NH4HF2 + CO + [6Y(NO3)3 + 2Pr(NO3)3 + 2Nd(NO3)3 + 15H2O] -> 2PrHoYLF Nanoparticles + 2NH4NO3 + 2HF + BeF2 + CO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(7680)
                .inputItems(dust, LithiumFluoride, 2)
                .inputItems(dust, Beryllium)
                .inputItems(dust,AmmoniumBifluoride, 16)
                .inputFluids(PrYHoNitrateSolution.getFluid(2000))
                .inputFluids(CarbonMonoxide.getFluid(1000))
                .notConsumable(CetaneTrimethylAmmoniumBromide.getFluid(0))
                .notConsumable(EDTA.getFluid(0))
                .outputItems(PrHoYLFNanoparticles, 2)
                .outputItems(dust, BerylliumFluoride, 3)
                .outputFluids(AmmoniumNitrate.getFluid(2000))
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // 2CH4 + 5Cl -> [2CH4 + 5Cl]
        MIXER_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .inputFluids(Methane.getFluid(2000))
                .inputFluids(Chlorine.getFluid(5000))
                .outputFluids(ChlorinatedSolvents.getFluid(7000))
                .save(provider);

        // 2[2CH4 + 5Cl] -> 1.33CH3Cl + 2.17CH2Cl2 + 2.17CHCl3 + 1.33CCl4
        // Not chemically balanced, but is a convenient, not too OP recipe
        DISTILLATION_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .inputFluids(ChlorinatedSolvents.getFluid(14000))
                .outputFluids(Chloromethane.getFluid(1330))
                .outputFluids(Dichloromethane.getFluid(2170))
                .outputFluids(Chloroform.getFluid(2170))
                .outputFluids(CarbonTetrachloride.getFluid(1330))
                .save(provider);

        FLUID_HEATER_RECIPES.recipeBuilder().duration(130).EUt(480)
                .inputFluids(Butanol.getFluid(1000))
                .circuitMeta(0)
                .outputFluids(ButanolGas.getFluid(1000))
                .save(provider);

        // 3C4H10O + NH3 -> C12H27N + 3H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(480)
                .inputFluids(ButanolGas.getFluid(3000))
                .inputFluids(Ammonia.getFluid(1000))
                .notConsumable(dust, Zeolite)
                .outputFluids(Tributylamine.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .save(provider);

        // Al2O3 + 6HNO3 -> 2Al(NO3)3 + 3H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(30)
                .inputItems(dust,Alumina, 5)
                .inputFluids(NitricAcid.getFluid(6000))
                .outputItems(AluminiumNitrate.getItemStack(26))
                .outputFluids(Water.getFluid(3000))
                .save(provider);

        // 2Al(NO3)3 + CH2Cl2 + C12H27N -> [2Al(NO3)3 + CH2Cl2 + C12H27N]
        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(120)
                .inputItems(dust,AluminiumNitrate.getItemStack(26))
                .inputFluids(Dichloromethane.getFluid(1000))
                .inputFluids(Tributylamine.getFluid(1000))
                .outputFluids(CrudeAluminaSolution.getFluid(1000))
                .save(provider);

        // [2Al(NO3)3 + CH2Cl2 + C12H27N] + C12H27N + H2O2 -> [Al2O3 + CH2Cl2 + 2C12H27N] + 2HNO3 + NO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(480)
                .inputFluids(CrudeAluminaSolution.getFluid(1000))
                .inputFluids(Tributylamine.getFluid(1000))
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputFluids(dust, AluminaSolution.getFluid(1000))
                .outputFluids(NitricAcid.getFluid(2000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .save(provider);

        // 5NH3 + 5HCN + 3H2SO4 + 2KMnO4 -> 3H2O + 2MnSO4 + K2SO4 + 5NH4CNO
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(480)
                .inputFluids(Ammonia.getFluid(5000))
                .inputFluids(HydrogenCyanide.getFluid(5000))
                .inputFluids(SulfuricAcid.getFluid(3000))
                .inputItems(dust,PotassiumPermanganate, 12)
                .outputFluids(Water.getFluid(3000))
                .outputItems(ManganeseSulfate, 12)
                .outputItems(PotassiumSulfate, 7)
                .outputFluids(AmmoniumCyanate.getFluid(5000))
                .save(provider);

        // NH4CNO -> CH4N2O
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputFluids(AmmoniumCyanate.getFluid(1000))
                .outputItems(Urea, 8)
                .save(provider);

        // 3K2MnO4 + 2H2O -> MnO2 + 2KMnO4 + 4KOH
        BLAST_RECIPES.recipeBuilder().duration(250).EUt(120).blastFurnaceTemp(720)
                .inputItems(dust,PotassiumManganate.getItemStack(21))
                .inputFluids(Water.getFluid(2000))
                .outputItems(dust, Pyrolusite, 3)
                .outputItems(PotassiumPermanganate, 12)
                .outputFluids(PotassiumHydroxide.getFluid(4000))
                .save(provider);
    }
}




public class OrganometallicChains{
    public static void init(){

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(8000) //2CH4O -> CH3OCH3 + H2O
                .inputFluids(Methanol.getFluid(2000))
                .notConsumable(dust, Alumina)
                .notConsumable(dust, SiliconDioxide)
                .outputFluids(Dimethylether.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(2000) //CH3OCH3 + C2H4O -> C4H10O2
                .inputFluids(Dimethylether.getFluid(1000))
                .inputFluids(EthyleneOxide.getFluid(1000))
                .outputFluids(Dimethoxyethane.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(2000) //C5H6 + LiC4H9 -> LiC5H5 + C4H10
                .inputFluids(Cyclopentadiene.getFluid(1000))
                .inputFluids(Dimethoxyethane.getFluid(500))
                .inputFluids(ButylLithium.getFluid(1000))
                .outputFluids(Butane.getFluid(1000))
                .outputFluids(LithiumCyclopentadienide.getFluid(1000))
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(1800).EUt(120) //2H + 2CfO2 -> Cf2O3 + H2O
                .blastFurnaceTemp(2500)
                .inputFluids(Hydrogen.getFluid(2000))
                .inputItems(dust,Californium.getItemStack(GAEnums.GAOrePrefix.dioxide, 6))
                .outputItems(CaliforniumTrioxide, 5)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(2000) //6HCl + Cf2O3 -> 2CfCl3 + 3H2O
                .inputFluids(HydrochloricAcid.getFluid(6000))
                .inputItems(dust,CaliforniumTrioxide, 5)
                .outputItems(CaliforniumTrichloride, 8)
                .outputFluids(Water.getFluid(3000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(200000) //3LiC5H5 + CfCl3 -> CfC15H15 + 3LiCf
                .inputFluids(LithiumCyclopentadienide.getFluid(3000))
                .inputItems(dust,CaliforniumTrichloride, 4)
                .outputItems(LithiumChloride, 6)
                .outputFluids(CaliforniumCyclopentadienide.getFluid(1000))
                .save(provider);

    }
}



public class PEEKChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Na2B4O7(H2O)10 + 2HCl -> 4H3BO3 + 5H2O + 2NaCl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Borax, 23)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(BoricAcid.getFluid(4000))
                .outputFluids(Water.getFluid(5000))
                .outputItems(dust, Salt, 4)
                .EUt(120)
                .duration(150)
                .save(provider);

        // H3BO3 + 4HF -> HBF4 + 3H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(BoricAcid.getFluid(1000))
                .inputFluids(HydrofluoricAcid.getFluid(4000))
                .outputFluids(FluoroBoricAcid.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .EUt(120)
                .duration(100)
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Cobalt)
                .inputItems(dust, Charcoal, 2)
                .inputItems(plate, Polybenzimidazole)
                .inputFluids(Acetylene.getFluid(1000))
                .inputFluids(Steam.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(4000))
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .outputItems(CoAcABCatalyst)
                .EUt(500000)
                .duration(10)
                .save(provider);

        // H2O + NaNO3 -> NaNO3(H2O)
        MIXER_RECIPES.recipeBuilder()
                .inputFluids(Water.getFluid(1000))
                .inputItems(dust, SodiumNitrate, 5)
                .outputFluids(SodiumNitrateSolution.getFluid(1000))
                .EUt(120)
                .duration(80)
                .save(provider);

        // NaNO3(H2O) -> NaNO2 + H2O + O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(SodiumNitrateSolution.getFluid(1000))
                .notConsumable(CoAcABCatalyst)
                .outputItems(SodiumNitrite, 4)
                .outputFluids(Oxygen.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(30)
                .duration(300)
                .save(provider);

        // HBF4 + HCl + C6H5NH2 + NaNO2 -> NaCl + C6H5BF4N2 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(FluoroBoricAcid.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(Aniline.getFluid(1000))
                .inputItems(dust,SodiumNitrite, 4)
                .outputItems(dust, Salt, 2)
                .outputFluids(BenzenediazoniumTetrafluoroborate.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .duration(130)
                .EUt(30720)
                .save(provider);

        // C6H5BF4N2 -> BF3 + 2N + C6H5F
        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(BenzenediazoniumTetrafluoroborate.getFluid(1000))
                .outputFluids(BoronFluoride.getFluid(1000))
                .outputFluids(Nitrogen.getFluid(2000))
                .outputFluids(FluoroBenzene.getFluid(1000))
                .EUt(500000)
                .duration(100)
                .save(provider);

        // C6H5F + CH4 + H2SbF7 -> C7H7F + 4HF + SbF3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(FluoroBenzene.getFluid(1000))
                .inputFluids(Methane.getFluid(1000))
                .inputFluids(FluoroantimonicAcid.getFluid(1000))
                .outputFluids(Fluorotoluene.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(4000))
                .outputItems(AntimonyTrifluoride, 4)
                .EUt(480)
                .duration(150)
                .save(provider);

        // SbF3 -> Sb + 3F
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,AntimonyTrifluoride, 4)
                .outputItems(dust, Antimony)
                .outputFluids(Fluorine.getFluid(3000))
                .EUt(120)
                .duration(160)
                .save(provider);

        // Zn + Fe + Al + Cl -> ZnFeAlCl
        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, Zinc)
                .inputItems(dust, Iron)
                .inputItems(dust, Aluminium)
                .inputFluids(Chlorine.getFluid(1000))
                .outputItems(ZnFeAlClCatalyst, 4)
                .EUt(15360)
                .duration(250)
                .save(provider);

        // H2O + 6Cl + C7H7F + C6H5F -> C13H8OF2 + 6HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Water.getFluid(1000))
                .inputFluids(Chlorine.getFluid(6000))
                .inputFluids(Fluorotoluene.getFluid(1000))
                .inputFluids(FluoroBenzene.getFluid(1000))
                .notConsumable(ZnFeAlClCatalyst)
                .outputItems(Difluorobenzophenone, 24)
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .EUt(1920)
                .duration(100)
                .save(provider);

        // C6H6O2 + C13H8OF2 + Na2CO3 -> [(OC6H4)3C]n + H2O + 2NaF
        // Not perfectly balanced, but is probably fine
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Hydroquinone.getFluid(1000))
                .inputItems(dust,Difluorobenzophenone, 24)
                .inputItems(dust, SodaAsh, 6)
                .outputFluids(Polyetheretherketone.getFluid(2592))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(dust, SodiumFluoride, 4)
                .EUt(122880)
                .duration(250)
                .save(provider);

        // C3H6 + C6H6 + 3O -> C3H6O + C6H6O2
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Propene.getFluid(1000))
                .inputFluids(Benzene.getFluid(1000))
                .inputFluids(Oxygen.getFluid(3000))
                .outputFluids(Acetone.getFluid(1000))
                .outputFluids(Hydroquinone.getFluid(1000))
                .outputFluids(Resorcinol.getFluid(1000))
                .EUt(7860)
                .duration(200)
                .save(provider);

        // MgClBr -> Mg + Cl + Br
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,MgClBromide, 3)
                .outputItems(dust, Magnesium)
                .outputFluids(Chlorine.getFluid(1000))
                .outputFluids(Bromine.getFluid(1000))
                .EUt(120)
                .duration(160)
                .save(provider);
    }
}




public class PlatinumSludgeGroupChain {



        public static void init(Consumer<FinishedRecipe> provider) {
        platinumInit();
        palladiumInit();
        rhodiumInit();
        rutheniumInit();
        osmiumInit();

        // Bowieite Ore
        CENTRIFUGE_RECIPES.recipeBuilder().duration(984).EUt(30)
                .inputItems(dust, Bowieite, 5)
                .outputItems(dust, Sulfur, 3)
                .chancedOutput(ChemicalHelper.get(dust, PlatinumMetallicPowder, 2), 3300, 330)
                .chancedOutput(ChemicalHelper.get(dust, IrMetalResidue, 2), 3300, 330)
                .chancedOutput(ChemicalHelper.get(dust, CrudeRhodiumMetal, 2), 3300, 330)
                .save(provider);
    }

    public static void platinumInit() {

        // Ir2O4(SiO2)2Au3 -> 2IrO2 + (SiO2)2Au3
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(775)
                .inputItems(dust, IrMetalResidue)
                .outputItems(dust, IridiumDioxide, 6)
                .outputItems(dust, PGSDResidue, 5)
                .EUt(120)
                .duration(200)
                .save(provider);

        // (SiO2)2Au3 -> 2SiO2 + 3Au
        THERMAL_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust, PGSDResidue, 5)
                .outputItems(dust, SiliconDioxide, 6)
                .outputItems(dust, Gold, 3)
                .EUt(10)
                .duration(226)
                .save(provider);

        // 2IrO2 + HCl -> (HCl)2(IrO2)2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, IridiumDioxide, 6)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(AcidicIridiumSolution.getFluid(1000))
                .duration(300)
                .EUt(30)
                .save(provider);

        // (HCl)2(IrO2)2 + 4NH4Cl -> 4NH3 + 2IrCl3 + 3H2O
        // loses 1 Oxygen
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(AcidicIridiumSolution.getFluid(1000))
                .inputFluids(AmmoniumChloride.getFluid(3000))
                .outputFluids(Ammonia.getFluid(3000))
                .outputFluids(Water.getFluid(3000))
                .outputItems(dust, IridiumChloride, 8)
                .duration(300)
                .EUt(30)
                .save(provider);

        // IrCl3 + 3H -> 3HCl + Ir + (CuNi)
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, IridiumChloride, 4)
                .inputFluids(Hydrogen.getFluid(3000))
                .outputFluids(HydrochloricAcid.getFluid(3000))
                .outputItems(dust, PGSDResidue2, 2)
                .outputItems(dust, Iridium)
                .duration(300)
                .EUt(1920)
                .save(provider);

        // Pt[REE] + [HNO3 + HCl] -> Pt[REE] + Ir2[REE]3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, PlatinumMetallicPowder, 2)
                .inputFluids(AquaRegia.getFluid(1000))
                .outputFluids(PlatinumConcentrate.getFluid(1000))
                .outputItems(dustTiny, PlatinumResidue, 5)
                .EUt(30)
                .duration(250)
                .save(provider);

        // HNO3 + HCl -> [HNO3 + HCl]
        MIXER_RECIPES.recipeBuilder()
                .inputFluids(NitricAcid.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(AquaRegia.getFluid(2000))
                .EUt(30)
                .duration(30)
                .save(provider);

        // [HNO3 + HCl] -> HNO3 + HCl
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(AquaRegia.getFluid(2000))
                .outputFluids(NitricAcid.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .EUt(30)
                .duration(192) // copied duration from Nitration Mixture
                .save(provider);

        // 2K + 2S + 7O -> K2S2O7
        MIXER_RECIPES.recipeBuilder()
                .circuitMeta(0)
                .inputItems(dust, Potassium, 2)
                .inputItems(dust, Sulfur, 2)
                .inputFluids(Oxygen.getFluid(7000))
                .outputItems(dust, PotassiumDisulfate, 11)
                .EUt(96)
                .duration(42)
                .save(provider);

        // Ir2[REE]3 + K2S2O7 + O -> Ir2[REE]2 + K2SO4 + RhSO4
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust, PlatinumResidue, 5)
                .inputItems(dust, PotassiumDisulfate, 11)
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(dust, LeachResidue, 4)
                .outputItems(PotassiumSulfate, 7)
                .outputFluids(RhodiumSulfate.getFluid(1000))
                .blastFurnaceTemp(775)
                .EUt(120)
                .duration(200)
                .save(provider);

        // 3Na2CO3 + 10Ir2[REE]2 + 3O -> 6Ir2O2(SiO2)2Au3[REE] + 3Na2O4Ru + 3CO
        // 10 -> 6 of Leaches is to maintain previous balance
        // probably the worst recipe in the chain, most needing of a rework
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust, SodaAsh, 18)
                .inputItems(dust, LeachResidue, 40)
                .inputFluids(Oxygen.getFluid(3000))
                .outputItems(dust, RarestMetalResidue, 6)
                .outputItems(dust, SodiumRuthenate, 21)
                .outputFluids(CarbonMonoxide.getFluid(3000))
                .blastFurnaceTemp(775)
                .EUt(120)
                .duration(200)
                .save(provider);

        // HCl + 2Ir2O2(SiO2)2Au3[REE] -> OsO4(H2O)(HCl) + 2Ir2O2(SiO2)2Au3
        BLAST_RECIPES.recipeBuilder()
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputItems(dust, RarestMetalResidue, 2)
                .outputFluids(AcidicOsmiumSolution.getFluid(2000))
                .outputItems(dust, IrMetalResidue, 2)
                .blastFurnaceTemp(775)
                .EUt(120)
                .duration(100)
                .save(provider);

        // HCl + NH3 -> NH4Cl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(AmmoniumChloride.getFluid(1000))
                .EUt(30)
                .duration(15)
                .save(provider);

        // This recipe is "good", but its formula is pretty dumb so I'm not gonna bother with it
        // could use a rework eventually
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(PlatinumConcentrate.getFluid(2000))
                .inputFluids(AmmoniumChloride.getFluid(200))
                .outputItems(dustSmall, PlatinumSalt, 10)
                .outputItems(dust, PlatinumRawPowder, 2)
                .outputFluids(PalladiumAmmonia.getFluid(200))
                .outputFluids(NitricAcid.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(1200))
                .EUt(30)
                .duration(1200)
                .save(provider);

        SIFTER_RECIPES.recipeBuilder()
                .inputItems(dust, PlatinumSalt, 2)
                .chancedOutput(ChemicalHelper.get(dust, PlatinumSaltRefined, 2), 9500, 0)
                .EUt(24)
                .duration(300)
                .save(provider);

        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust, PlatinumSaltRefined, 2)
                .outputItems(dust, PlatinumMetallicPowder, 2)
                .outputFluids(Chlorine.getFluid(133))
                .EUt(120)
                .blastFurnaceTemp(775)
                .duration(200)
                .save(provider);

        // PtCl2 + Ca -> Pt + CaCl2
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, PlatinumRawPowder, 3)
                .inputItems(dust, Calcium)
                .outputItems(dust, Platinum)
                .outputItems(dust, CalciumChloride, 3)
                .EUt(30)
                .duration(250)
                .save(provider);
    }

    public static void palladiumInit() {

        // NH3 + Pd? -> NH3Pd?
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ammonia.getFluid(1000))
                .inputItems(dust, PalladiumMetallicPowder, 2)
                .outputFluids(PalladiumAmmonia.getFluid(1000))
                .EUt(30)
                .duration(250)
                .save(provider);

        // NH3Pd? -> Pd?
        CHEMICAL_RECIPES.recipeBuilder()
                .circuitMeta(1)
                .inputFluids(PalladiumAmmonia.getFluid(1000))
                .outputItems(dust, PalladiumSalt, 2)
                .EUt(30)
                .duration(250)
                .save(provider);

        // Pd? -> Pd?
        SIFTER_RECIPES.recipeBuilder()
                .inputItems(dust, PalladiumSalt, 2)
                .chancedOutput(ChemicalHelper.get(dust, PalladiumMetallicPowder, 2), 9500, 0)
                .EUt(24)
                .duration(300)
                .save(provider);

        // NH3Pd? + Pd? ->
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .circuitMeta(0)
                .inputFluids(PalladiumAmmonia.getFluid(1000))
                .inputItems(dust, PalladiumMetallicPowder, 2)
                .outputItems(dustSmall, PalladiumSalt, 10)
                .outputItems(dustTiny, PalladiumRawPowder, 12)
                .EUt(30)
                .duration(250)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, PalladiumRawPowder, 2)
                .inputFluids(FormicAcid.getFluid(2000))
                .outputFluids(Ammonia.getFluid(3000))
                .outputFluids(AceticAcid.getFluid(1000))
                .outputItems(dust, Palladium, 2)
                .EUt(1920)
                .duration(300)
                .save(provider);
    }

    public static void rhodiumInit() {

        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(RhodiumSulfate.getFluid(3000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(RhodiumSulfateSolution.getFluid(3000))
                .outputItems(dustTiny, LeachResidue, 4)
                .EUt(30)
                .duration(400)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputFluids(RhodiumSulfateSolution.getFluid(1000))
                .inputItems(dust, Zinc)
                .outputItems(dust, ZincSulfate, 6)
                .outputItems(dust, CrudeRhodiumMetal, 2)
                .EUt(30)
                .duration(300)
                .save(provider);

        // Rh[NaCl] + NaCl -> Rh(NaCl)2
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust, CrudeRhodiumMetal, 2)
                .inputItems(dust, Salt, 2)
                .outputItems(dust, RhodiumSalt, 3)
                .blastFurnaceTemp(775)
                .EUt(120)
                .duration(300)
                .save(provider);

        // Rh(NaCl)2 + Cl -> Rh(NaCl)2Cl
        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, RhodiumSalt, 3)
                .inputFluids(Chlorine.getFluid(1000))
                .outputFluids(RhodiumSaltSolution.getFluid(1000))
                .EUt(30)
                .duration(30)
                .save(provider);

        // 2Na + 2HNO3 + O -> 2NaNO3 + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Sodium, 2)
                .inputFluids(NitricAcid.getFluid(2000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(dust, SodiumNitrate, 10)
                .outputFluids(Water.getFluid(1000))
                .EUt(60)
                .duration(8)
                .save(provider);

        // Rh(NaCl)2Cl + NaNO3 + 2NO2 + 2O -> 3NaCl + Rh(NH3)3
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(RhodiumSaltSolution.getFluid(1000))
                .inputFluids(NitrogenDioxide.getFluid(2000))
                .inputFluids(Oxygen.getFluid(2000))
                .inputItems(dust, SodiumNitrate, 5)
                .outputItems(dust, Salt, 6)
                .outputItems(dust, RhodiumNitrate, 13)
                .EUt(30)
                .duration(300)
                .save(provider);

        // Rh(NH3)3 -> Rh(NH3)3
        SIFTER_RECIPES.recipeBuilder()
                .inputItems(dust, RhodiumNitrate, 13)
                .chancedOutput(ChemicalHelper.get(dust, RhodiumFilterCake, 2), 9500, 0)
                .EUt(30)
                .duration(600)
                .save(provider);

        // Rh(NH3)3 + 2H2O -> Rh(NH3)3(H2O)2
        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, RhodiumFilterCake, 2)
                .inputFluids(Water.getFluid(2000))
                .outputFluids(RhodiumFilterCakeSolution.getFluid(1000))
                .EUt(30)
                .duration(300)
                .save(provider);

        // Rh(NH3)2(H2O)2 -> Rh + 2NH3 + 2H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputFluids(RhodiumFilterCakeSolution.getFluid(1000))
                .outputItems(dust, Rhodium)
                .outputFluids(Ammonia.getFluid(2000))
                .EUt(30)
                .duration(500)
                .save(provider);
    }

    public static void rutheniumInit() {

        // Na2O4Ru + 2Cl -> (NaCl)2RuO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, SodiumRuthenate, 14)
                .inputFluids(Chlorine.getFluid(2000))
                .outputFluids(RutheniumTetroxideSolution.getFluid(1000))
                .EUt(30)
                .duration(100)
                .save(provider);

        // (NaCl)2RuO4 + H2O -> (NaCl)2RuO4(H2O)
        CRACKING_RECIPES.recipeBuilder()
                .inputFluids(Steam.getFluid(1000))
                .inputFluids(RutheniumTetroxideSolution.getFluid(1000))
                .outputFluids(HotRutheniumTetroxideSolution.getFluid(2000))
                .EUt(480)
                .duration(150)
                .save(provider);

        // Multiplying the mixture out
        // (NaCl)2RuO4(H2O) -> 2NaCl + RuO4 + H2O
        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(HotRutheniumTetroxideSolution.getFluid(2000))
                .outputItems(dust, Salt, 4)
                .outputFluids(RutheniumTetroxide.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .duration(1500)
                .EUt(480)
                .save(provider);

        FLUID_SOLIDFICATION_RECIPES.recipeBuilder()
                .notConsumable(MetaItems.SHAPE_MOLD_BALL)
                .inputFluids(RutheniumTetroxide.getFluid(1000))
                .outputItems(dust, RutheniumTetroxide, 5)
                .EUt(8)
                .duration(16)
                .save(provider);

        // RuO4 + 8HCl -> 4H2O + 8Cl + Ru
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, RutheniumTetroxide, 5)
                .inputFluids(HydrochloricAcid.getFluid(8000))
                .outputFluids(Water.getFluid(4000))
                .outputFluids(Chlorine.getFluid(8000))
                .outputItems(dust, Ruthenium)
                .EUt(30)
                .duration(300)
                .save(provider);
    }

    public static void osmiumInit() {

        // OsO4(H2O)(HCl) -> OsO4(H2O) + HCl
        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(AcidicOsmiumSolution.getFluid(2000))
                .outputFluids(OsmiumSolution.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .EUt(7680)
                .duration(150)
                .save(provider);

        // OsO4(H2O) + 8HCl -> Os + 8Cl + 5H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(OsmiumSolution.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(8000))
                .outputItems(dust, Osmium)
                .outputFluids(Chlorine.getFluid(8000))
                .outputFluids(Water.getFluid(5000))
                .EUt(30)
                .duration(300)
                .save(provider);

        FLUID_SOLIDFICATION_RECIPES.recipeBuilder()
                .inputItems(ingot, Palladium, 3)
                .inputFluids(Rhodium.getFluid(144))
                .outputItems(ingotHot, RhodiumPlatedPalladium, 4)
                .EUt(7680)
                .duration(200)
                .save(provider);
    }
}



public class PolymerChain {

        public static void init(Consumer<FinishedRecipe> provider) {
        polybenzimidazoleInit();
        polyimideInit();
        fluorinatedEthylenePropyleneInit();
    }

    public static void polybenzimidazoleInit() {

        // C12H14N4 + C20H14O4 -> 2C6H5OH + C20H12N4 + 2H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Diaminobenzidine.getFluid(1000))
                .inputFluids(Diphenylisophtalate.getFluid(1000))
                .outputFluids(Phenol.getFluid(2000))
                .outputFluids(Polybenzimidazole.getFluid(1008))
                .outputFluids(Water.getFluid(2000))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // 2C6H5OH + C8H6O4 -> C20H14O4 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Phenol.getFluid(2000))
                .inputFluids(PhthalicAcid.getFluid(1000))
                .outputFluids(Diphenylisophtalate.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .EUt(7680)
                .duration(1000)
                .save(provider);

        // C7H8 + CH3OH -> C8H10 + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Toluene.getFluid(1000))
                .inputFluids(Methanol.getFluid(1000))
                .outputFluids(OrthoXylene.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(120)
                .duration(800)
                .save(provider);

        // 6O + C8H10 -> 2H2O + C8H6O4
        CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(dust, PotassiumDichromate)
                .inputFluids(Oxygen.getFluid(6000))
                .inputFluids(OrthoXylene.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(PhthalicAcid.getFluid(1000))
                .EUt(1920)
                .duration(100)
                .save(provider);

        // 2NH3 + C12H10Cl2N2 -> C12H14N4 + 2HCl
        CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(dust, Zinc)
                .inputFluids(Ammonia.getFluid(2000))
                .inputFluids(Dichlorobenzidine.getFluid(1000))
                .outputFluids(Diaminobenzidine.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // 2C6H4ClNO2 + 2H -> C12H10Cl2N2 + 4O
        CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(dust, Copper)
                .inputFluids(Nitrochlorobenzene.getFluid(2000))
                .inputFluids(Hydrogen.getFluid(2000))
                .outputFluids(Dichlorobenzidine.getFluid(1000))
                .outputFluids(Oxygen.getFluid(4000))
                .EUt(1920)
                .duration(200)
                .save(provider);

        // Cr + 3O -> CrO3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Chrome)
                .inputFluids(Oxygen.getFluid(3000))
                .outputItems(dust, ChromiumTrioxide, 4)
                .EUt(60)
                .duration(100)
                .save(provider);

        // 2CrO3 + 2KNO3 -> K2Cr2O7 + 2NO2 + O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, ChromiumTrioxide, 8)
                .inputItems(dust, Saltpeter, 10)
                .outputItems(dust, PotassiumDichromate, 11)
                .outputFluids(NitrogenDioxide.getFluid(2000))
                .outputFluids(Oxygen.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // H2SO4 + HNO3 + C6H5Cl -> C6H4ClNO2 + dil.sulfuric
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NitrationMixture.getFluid(2000))
                .inputFluids(Chlorobenzene.getFluid(1000))
                .outputFluids(Nitrochlorobenzene.getFluid(1000))
                .outputFluids(DilutedSulfuricAcid.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // C6H6 + 2Cl -> C6H5Cl + HCl
        CHEMICAL_RECIPES.recipeBuilder()
                .circuitMeta(1)
                .inputFluids(Benzene.getFluid(1000))
                .inputFluids(Chlorine.getFluid(2000))
                .outputFluids(Chlorobenzene.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .EUt(30)
                .duration(240)
                .save(provider);
    }

    public static void polyimideInit() {

        // C6H4(CH3)2 + 2CH3Cl -> C6H2(CH3)4 + 2HCl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(OrthoXylene.getFluid(1000))
                .inputFluids(Chloromethane.getFluid(2000))
                .outputItems(Durene, 24)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .EUt(30)
                .duration(100)
                .save(provider);

        // C6H2(CH3)4 + 12O -> C6H2(C2O3)2 + 6H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,Durene, 24)
                .inputFluids(Oxygen.getFluid(12000))
                .outputItems(PyromelliticDianhydride, 18)
                .outputFluids(Water.getFluid(6000))
                .EUt(120)
                .duration(150)
                .save(provider);

        // 2C6H5NH2 + C2H5OH -> C12H12N2O + 2CH4
        CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(dust, Tin)
                .notConsumable(HydrochloricAcid)
                .inputFluids(Aniline.getFluid(2000))
                .inputFluids(Phenol.getFluid(1000))
                .outputFluids(Oxydianiline.getFluid(1000))
                .outputFluids(Methane.getFluid(2000))
                .EUt(120)
                .duration(150)
                .save(provider);

        // C6H2(C2O3)2 + C12H12N2O -> C22H14N2O7
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,PyromelliticDianhydride, 18)
                .inputFluids(Oxydianiline.getFluid(1000))
                .outputFluids(PolyamicAcid.getFluid(1000))
                .EUt(7680)
                .duration(400)
                .save(provider);

        // Lose water
        // This should not gain water output ever, due to
        // the 1B -> 144mb recipe change with the above recipe.
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputFluids(PolyamicAcid.getFluid(144))
                .outputFluids(Polyimide.getFluid(144))
                .EUt(30)
                .duration(270)
                .save(provider);
    }

    public static void fluorinatedEthylenePropyleneInit() {

        // 3C2F4 -> 2C3F6
        PYROLYSE_RECIPES.recipeBuilder()
                .circuitMeta(1)
                .notConsumable(stick, Steel)
                .inputFluids(Tetrafluoroethylene.getFluid(3000))
                .outputFluids(Hexafluoropropylene.getFluid(2000))
                .EUt(96)
                .duration(460)
                .save(provider);

        // C2F4 + C3F6 -> C5F10
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Tetrafluoroethylene.getFluid(1000))
                .inputFluids(Hexafluoropropylene.getFluid(1000))
                .outputFluids(FluorinatedEthylenePropylene.getFluid(1000))
                .EUt(1920)
                .duration(125)
                .save(provider);
    }
}



public class QuantumDotsChain{
    public static void init(){

        FluidStack[] Oils = {SeedOil.getFluid(100), FishOil.getFluid(100)};
        for (FluidStack Oil : Oils){
            CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(2000)
                    .inputFluids(Oil)
                    .inputFluids(Steam.getFluid(200))
                    .inputFluids(PotassiumHydroxide.getFluid(1000))
                    .outputFluids(Soap.getFluid(1000))
                    .save(provider);
        }

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(2000)
                .inputFluids(Soap.getFluid(1000))
                .inputItems(dust, Salt, 1)
                .outputFluids(Glycerol.getFluid(200))
                .outputFluids(DeglyceratedSoap.getFluid(800))
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(160).EUt(2000)
                .inputFluids(DeglyceratedSoap.getFluid(1000))
                .outputItems(dust, Salt, 1)
                .outputFluids(StearicAcid.getFluid(800))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(2000) //3C8H18 + P -> 3H + C24H51P
                .inputFluids(Octane.getFluid(3000))
                .inputItems(dust, Phosphorus, 1)
                .outputFluids(Hydrogen.getFluid(3000))
                .outputFluids(Trioctylphosphine.getFluid(1000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(500000)
                .inputFluids(Trioctylphosphine.getFluid(1000))
                .inputFluids(StearicAcid.getFluid(1000))
                .inputItems(dust, Selenium, 1)
                .inputItems(dust, Cadmium, 1)
                .outputFluids(QuantumDots.getFluid(1000))
                .save(provider);
    }
}



public class REEChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(SaltWater.getFluid(1500))
                .inputFluids(Chlorine.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(500))
                .outputFluids(AcidicSaltWater.getFluid(3000))
                .EUt(480)
                .duration(180)
                .save(provider);

        // H2SO4(NaCl)3(H2O)3Cl2 -> 3NaCl + H2SO4Br(H2O)Cl2 + 2H2O
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(AcidicSaltWater.getFluid(6000))
                .outputItems(dust, Salt, 6)
                .outputFluids(SulfuricBromineSolution.getFluid(2000))
                .outputFluids(DebrominatedWater.getFluid(2000))
                .EUt(480)
                .duration(180)
                .save(provider);

        // H2SO4Br(H2O)Cl2 + H2O -> H2SO4Br(H2O)2Cl2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(SulfuricBromineSolution.getFluid(2000))
                .inputFluids(Steam.getFluid(1000))
                .outputFluids(HotVapourMixture.getFluid(3000))
                .EUt(480)
                .duration(150)
                .save(provider);

        // H2SO4Br(H2O)2Cl2 -> H2SO4 + H2O + 2Cl + Br(H2O)
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(HotVapourMixture.getFluid(3000))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(DebrominatedWater.getFluid(1000))
                .outputFluids(Chlorine.getFluid(2000))
                .outputFluids(DampBromine.getFluid(1000))
                .EUt(480)
                .duration(180)
                .save(provider);

        // Br(H2O) -> Br
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputFluids(DampBromine.getFluid(1000))
                .outputFluids(Bromine.getFluid(1000))
                .EUt(480)
                .duration(400)
                .save(provider);

        // CO + C3H6 + 2H -> C4H8O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(CarbonMonoxide.getFluid(1000))
                .inputFluids(Propene.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(2000))
                .outputFluids(Butyraldehyde.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // 2C4H8O + 4H -> C8H18O + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Butyraldehyde.getFluid(2000))
                .inputFluids(Hydrogen.getFluid(4000))
                .outputFluids(Ethylhexanol.getFluid(3000))
                .outputFluids(Water.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // 5C8H18O + 0.5P4O10 -> 2C16H35O4P + 2C4H10O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ethylhexanol.getFluid(5000))
                .inputItems(dust, PhosphorousPentoxide, 7)
                .outputFluids(DiethylhexylPhosphoricAcid.getFluid(2000))
                .outputFluids(Butanol.getFluid(2000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // [REE] + 3 [NaOH + H2O] + 3 H2O -> [REE(OH)3 + 3 NaOH + 3 H2O] + 3 H
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, RareEarth)
                .inputFluids(SodiumHydroxideSolution.getFluid(3000))
                .inputFluids(Water.getFluid(3000))
                .outputFluids(RareEarthHydroxidesSolution.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(3000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // 3 HCl + [REE(OH)3 + 3 NaOH] -> ThU + [REECl3 + 3 H2O] + 3 [NaOH + H2O]
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrochloricAcid.getFluid(3000))
                .inputFluids(RareEarthHydroxidesSolution.getFluid(1000))
                .outputFluids(RareEarthChloridesSolution.getFluid(3000))
                .outputFluids(SodiumHydroxideSolution.getFluid(3000))
                .outputItems(ThUSludge, 2)
                .EUt(480)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputFluids(SodiumHydroxideSolution.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .outputItems(dust, SodiumHydroxide, 3)
                .save(provider);


        // 2 [REECl3 + 3 H2O] + C16H35O4P(cat.) -> [REE2O3](sep.) + 6 HCl + 3 H2O
        LARGE_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(RareEarthChloridesSolution.getFluid(6000))
                .notConsumable(DiethylhexylPhosphoricAcid.getFluid(0))
                .outputFluids(LaNdOxidesSolution.getFluid(250))
                .outputFluids(SmGdOxidesSolution.getFluid(250))
                .outputFluids(TbHoOxidesSolution.getFluid(250))
                .outputFluids(ErLuOxidesSolution.getFluid(250))
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .EUt(480)
                .duration(600)
                .save(provider);

        // 4LaPrNdCeOx -> La2O3 + Pr2O3 + Nd2O3 + Ce2O3 (each 43% +2.75%)
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(LaNdOxidesSolution.getFluid(4000))
                .chancedOutput(LanthanumOxide, 5, 4300, 275)
                .chancedOutput(PraseodymiumOxide, 5, 4300, 275)
                .chancedOutput(NeodymiumOxide, 5, 4300, 275)
                .chancedOutput(CeriumOxide, 5, 4300, 275)
                .EUt(480)
                .duration(220)
                .save(provider);

        // 4ScEuGdSmOx -> Sc2O3 + Eu2O3 + Gd2O3 + Sm2O3 (each 43% +2.75%)
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(SmGdOxidesSolution.getFluid(4000))
                .chancedOutput(ScandiumOxide, 5, 4300, 275)
                .chancedOutput(EuropiumOxide, 5, 4300, 275)
                .chancedOutput(GadoliniumOxide, 5, 4300, 275)
                .chancedOutput(SamariumOxide, 5, 4300, 275)
                .EUt(480)
                .duration(220)
                .save(provider);

        // 4YTbDyHoOx -> Y2O3 + Tb2O3 + Dy2O3 + Ho2O3 (each 43% +2.75%)
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(TbHoOxidesSolution.getFluid(4000))
                .chancedOutput(ChemicalHelper.get(dust, YttriumOxide, 5), 4300, 275)
                .chancedOutput(TerbiumOxide, 5, 4300, 275)
                .chancedOutput(DysprosiumOxide, 5, 4300, 275)
                .chancedOutput(HolmiumOxide, 5, 4300, 275)
                .EUt(480)
                .duration(220)
                .save(provider);

        // 4ErTmYtLuOx -> Er2O3 + Tm2O3 + Yt2O3 + Lu2O3 (each 43% +2.75%)
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ErLuOxidesSolution.getFluid(4000))
                .chancedOutput(ErbiumOxide, 5, 4300, 275)
                .chancedOutput(ThuliumOxide, 5, 4300, 275)
                .chancedOutput(YtterbiumOxide, 5, 4300, 275)
                .chancedOutput(LutetiumOxide, 5, 4300, 275)
                .EUt(480)
                .duration(220)
                .save(provider);

        // 3C + 2La2O3 -> 4La + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,LanthanumOxide, 10)
                .outputItems(dust, Lanthanum,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Pr2O3 -> 4Pr + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,PraseodymiumOxide, 10)
                .outputItems(dust, Praseodymium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Nd2O3 -> 4Nd + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,NeodymiumOxide, 10)
                .outputItems(dust, Neodymium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Ce2O3 -> 4Ce + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,CeriumOxide, 10)
                .outputItems(dust, Cerium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Sc2O3 -> 4Sc + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,ScandiumOxide, 10)
                .outputItems(dust, Scandium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Eu2O3 -> 4Eu + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,EuropiumOxide, 10)
                .outputItems(dust, Europium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Gd2O3 -> 4Gd + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,GadoliniumOxide, 10)
                .outputItems(dust, Gadolinium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Sm2O3 -> 4Sm + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon, 3)
                .inputItems(dust,SamariumOxide, 10)
                .outputItems(dust, Samarium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Y2O3 -> 4Y + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust, YttriumOxide,10)
                .outputItems(dust, Yttrium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Tb2O3 -> 4Tb + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,TerbiumOxide, 10)
                .outputItems(dust, Terbium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Dy2O3 -> 4Dy + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,DysprosiumOxide, 10)
                .outputItems(dust, Dysprosium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Ho2O3 -> 4Ho + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,HolmiumOxide, 10)
                .outputItems(dust, Holmium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Er2O3 -> 4Er + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,ErbiumOxide, 10)
                .outputItems(dust, Erbium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Tm2O3 -> 4Tm + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,ThuliumOxide, 10)
                .outputItems(dust, Thulium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + Yt2O3 -> 4Yt + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,YtterbiumOxide, 10)
                .outputItems(dust, Ytterbium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 3C + 2Lu2O3 -> 4Lu + 3CO2
        BLAST_RECIPES.recipeBuilder()
                .blastFurnaceTemp(2500)
                .inputItems(dust, Carbon,3)
                .inputItems(dust,LutetiumOxide, 10)
                .outputItems(dust, Lutetium,4)
                .outputFluids(CarbonDioxide.getFluid(3000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // 2ThU + O -> 0.5ThO + Th(20%) + U(20%)
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,ThUSludge, 4)
                .inputFluids(Oxygen.getFluid(500))
                .chancedOutput(ChemicalHelper.get(dustTiny, Thorium), 2000, 150)
                .chancedOutput(ChemicalHelper.get(dustTiny, UraniumRadioactive.getMaterial()), 2000, 150)
                .outputItems(oxide, Thorium)
                .EUt(480)
                .duration(250)
                .save(provider);
    }
}



public class RheniumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // CH4 + NH3 + 3O -> HCN + 3H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Methane.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(Oxygen.getFluid(3000))
                .outputFluids(HydrogenCyanide.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .EUt(1920)
                .duration(50)
                .save(provider);

        // 2HCN + O + 2Na -> 2NaCN + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrogenCyanide.getFluid(2000))
                .inputFluids(Oxygen.getFluid(1000))
                .inputItems(dust, Sodium, 2)
                .outputFluids(SodiumCyanide.getFluid(2000))
                .outputFluids(Water.getFluid(1000))
                .EUt(1920)
                .duration(12)
                .save(provider);

        // MoS2 + NaCN -> AuCN + MoS2(depl.)
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust, Molybdenite, 3)
                .inputFluids(SodiumCyanide.getFluid(1000))
                .outputFluids(GoldCyanide.getFluid(1000))
                .outputItems(GoldDepleteMolybdenite, 3)
                .EUt(7680)
                .duration(100)
                .save(provider);

        // AuCN + Na -> NaCN + Au
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(GoldCyanide.getFluid(1000))
                .inputItems(dust, Sodium)
                .outputFluids(SodiumCyanide.getFluid(1000))
                .outputItems(dust, Gold)
                .EUt(1920)
                .duration(150)
                .save(provider);

        // MoS2 + FeCl3 ->
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,GoldDepleteMolybdenite, 3)
                .inputFluids(IronChloride.getFluid(500))
                .outputItems(MolybdenumConcentrate, 4)
                .outputFluids(ChlorideLeachedSolution.getFluid(500))
                .EUt(1920)
                .duration(10)
                .save(provider);

        // 8? -> CaCl2 + CuCl2 + PbCl2 + BiCl3 + 8FeCl2
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(ChlorideLeachedSolution.getFluid(8000))
                .outputItems(dust, CalciumChloride, 3)
                .outputItems(CopperChloride, 3)
                .outputItems(LeadChloride, 3)
                .outputItems(BismuthChloride, 4)
                .outputFluids(Iron2Chloride.getFluid(8000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // FeCl2 + Cl -> FeCl3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Iron2Chloride.getFluid(1000))
                .inputFluids(Chlorine.getFluid(1000))
                .outputFluids(IronChloride.getFluid(1000))
                .EUt(30)
                .duration(150)
                .save(provider);

        // CuCl2 -> Cu + Cl2
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,CopperChloride, 3)
                .outputItems(dust, Copper)
                .outputFluids(Chlorine.getFluid(2000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // PbCl2 -> Pb + Cl2
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,LeadChloride, 3)
                .outputItems(dust, Lead)
                .outputFluids(Chlorine.getFluid(2000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // BiCl3 -> Bi + 3Cl
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputItems(dust,BismuthChloride, 4)
                .outputItems(dust, Bismuth)
                .outputFluids(Chlorine.getFluid(3000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // ? + ~7O -> 3? + MoO3
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,MolybdenumConcentrate, 4)
                .inputFluids(Oxygen.getFluid(7250))
                .blastFurnaceTemp(8550)
                .EUt(120)
                .duration(340)
                .outputFluids(MolybdenumFlue.getFluid(3000))
                .outputItems(MolybdenumTrioxide, 4)
                .save(provider);

        // 6H + MoO3 -> Mo + 3H2O(steam)
        BLAST_RECIPES.recipeBuilder()
                .inputFluids(Hydrogen.getFluid(6000))
                .inputItems(dust,MolybdenumTrioxide, 4)
                .outputItems(dust, Molybdenum)
                .outputFluids(Steam.getFluid(3000))
                .blastFurnaceTemp(1000)
                .EUt(120)
                .duration(200)
                .save(provider);

        // 3? + 0.5NH3 -> 3SO2 + 0.5NH4ReO4
        MIXER_RECIPES.recipeBuilder()
                .inputFluids(MolybdenumFlue.getFluid(3000))
                .inputFluids(Water.getFluid(250))
                .outputFluids(RheniumSulfuricSolution.getFluid(3000))
                .EUt(491520)
                .duration(30)
                .save(provider);

        // ? + 0.5NH3 -> 3SO2 + 0.5NH4ReO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(RheniumSulfuricSolution.getFluid(3000))
                .inputFluids(Ammonia.getFluid(500))
                .outputFluids(SulfurDioxide.getFluid(3000))
                .outputFluids(AmmoniumPerrhenate.getFluid(500))
                .EUt(480)
                .duration(90)
                .save(provider);

        // NH4ReO4 + 7H -> Re + NH3 + 4H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(AmmoniumPerrhenate.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(7000))
                .outputItems(dust, Rhenium)
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(Water.getFluid(4000))
                .EUt(480)
                .duration(110)
                .save(provider);

        // Hg + 2CH3COOH -> C4H6O4Hg + H2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Mercury.getFluid(1000))
                .inputFluids(AceticAcid.getFluid(2000))
                .outputItems(MercuryAcetate, 15)
                .outputFluids(Hydrogen.getFluid(2000))
                .EUt(480)
                .duration(90)
                .save(provider);

        // C2H4O + CH3NH2 -> C3H9NO
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(EthyleneOxide.getFluid(1000))
                .inputFluids(Methylamine.getFluid(1000))
                .outputFluids(Methylethanolamine.getFluid(1000))
                .EUt(480)
                .duration(90)
                .save(provider);

        // CaC2 + N2 -> CaCN2 + C
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,CalciumCarbide, 3)
                .inputFluids(Nitrogen.getFluid(2000))
                .outputItems(CalciumCyanamide, 4)
                .outputItems(dust, Carbon)
                .blastFurnaceTemp(2000)
                .EUt(120)
                .duration(360)
                .save(provider);

        // 2HCl + C3H9NO + O + CaCN2 -> C2H7N3 + CH3COOH + CaCl2
        CHEMICAL_PLANT_RECIPES.recipeBuilder()
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputFluids(Methylethanolamine.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .inputItems(dust,CalciumCyanamide, 4)
                .outputFluids(Methylguanidine.getFluid(1000))
                .outputFluids(AceticAcid.getFluid(1000))
                .outputItems(dust, CalciumChloride, 3)
                .notConsumable(dust,Palladium)
                .notConsumable(MercuryAcetate)
                .EUt(480)
                .duration(240)
                .save(provider);

        // C2H7N3 + HNO3 + H2SO4 + HCl + NaNO2 -> 2H2SO4(dil.) + C2H5N5O3 + NaCl
        // Not perfect, but was the best way to try and conserve acids
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Methylguanidine.getFluid(1000))
                .inputFluids(NitrationMixture.getFluid(2000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputItems(dust,SodiumNitrite, 4)
                .outputFluids(DilutedSulfuricAcid.getFluid(2000))
                .outputFluids(Methylnitronitrosoguanidine.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .EUt(480)
                .duration(220)
                .save(provider);

        // C6H12O6 + bacteria -> C5H12O
        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputItems(dust,Glucose, 24)
                .notConsumable(SelectivelyMutatedCupriavidiusNecator)
                .inputFluids(Ammonia.getFluid(10))
                .outputFluids(IsoamylAlcohol.getFluid(1000))
                .EUt(491520)
                .duration(20)
                .save(provider);

        // C8H16 + H2O -> C8H18O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Oct1ene.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(Octanol.getFluid(1000))
                .notConsumable(PhosphoricAcid.getFluid(0))
                .notConsumable(PalladiumLoadedRutileNanoparticles)
                .notConsumable(UVA_HALIDE_LAMP)
                .EUt(30720)
                .duration(110)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputItems(dust,CupriavidusNecator, 2)
                .notConsumable(UVA_HALIDE_LAMP)
                .inputFluids(Methylnitronitrosoguanidine.getFluid(250))
                .outputItems(SelectivelyMutatedCupriavidiusNecator)
                .EUt(30720)
                .duration(20)
                .save(provider);

        // 3C8H18O + NH3 -> 3H2O + C24H51N
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Octanol.getFluid(3000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .outputFluids(Trioctylamine.getFluid(1000))
                .EUt(480)
                .duration(90)
                .save(provider);

        // 2C12H26 + 0.5C24H51N + 0.25C8H18O + 0.5C6H12O + 0.375CH3COOH + 0.375C5H12O -> ~4C11H24
        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputFluids(Kerosene.getFluid(8000))
                .inputFluids(Trioctylamine.getFluid(500))
                .inputFluids(Octanol.getFluid(500))
                .inputFluids(MethylIsobutylKetone.getFluid(250))
                .inputFluids(AceticAcid.getFluid(250))
                .inputFluids(IsoamylAlcohol.getFluid(250))
                .outputFluids(RheniumSeparationMixture.getFluid(10000))
                .EUt(7680)
                .duration(90)
                .save(provider);

        // ? + RSM -> ? + ?(20%) + Re
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust, PlatinumSalt, 2)
                .inputFluids(RheniumSeparationMixture.getFluid(250))
                .chancedOutput(ChemicalHelper.get(dust, PlatinumSaltRefined, 2), 9500, 0)
                .outputFluids(RheniumScrubbedSolution.getFluid(250))
                .outputFluids(RheniumSeparationMixture.getFluid(200))
                .EUt(7680)
                .duration(50)
                .save(provider);

        // ? + 0.2? -> ? + Re
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,LeachedColumbite, 17)
                .inputFluids(RheniumSeparationMixture.getFluid(250))
                .outputItems(PurifiedColumbite)
                .outputFluids(RheniumScrubbedSolution.getFluid(250))
                .outputFluids(RheniumSeparationMixture.getFluid(200))
                .EUt(7680)
                .duration(50)
                .save(provider);

        //  + 0.2? -> ? + Re
        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,LeachedPyrochlore)
                .inputFluids(RheniumSeparationMixture.getFluid(250))
                .outputItems(PurifiedPyrochlore)
                .outputFluids(RheniumScrubbedSolution.getFluid(250))
                .outputFluids(RheniumSeparationMixture.getFluid(200))
                .EUt(7680)
                .duration(50)
                .save(provider);

        // ? + 5HF -> H2NbOF5
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,PurifiedColumbite)
                .inputFluids(HydrofluoricAcid.getFluid(5000))
                .outputFluids(FluoroniobicAcid.getFluid(1000))
                .EUt(480)
                .duration(180)
                .save(provider);

        // Nb(H2O) + 5HF -> H2NbOF5
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,PurifiedPyrochlore)
                .inputFluids(HydrofluoricAcid.getFluid(5000))
                .outputFluids(FluoroniobicAcid.getFluid(1000))
                .EUt(480)
                .duration(180)
                .save(provider);

        // Re + 3NH3 + H2SO4 -> (NH4)2SO4 + NH4ReO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(RheniumScrubbedSolution.getFluid(1000))
                .inputFluids(Ammonia.getFluid(3000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(AmmoniumSulfate.getFluid(1000))
                .outputFluids(AmmoniumPerrhenate.getFluid(1000))
                .EUt(1920)
                .duration(110)
                .save(provider);
    }
}



public class SeleniumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // CuFeS2 + SiO2 + 5O -> Cu(EIC) + FeSiO3 + 2SO2
        BLAST_RECIPES.recipeBuilder().duration(240).EUt(120).blastFurnaceTemp(1500)
                .inputItems(crushedCentrifuged, Chalcopyrite)
                .inputItems(dust, SiliconDioxide, 3)
                .inputFluids(Oxygen.getFluid(5000))
                .outputItems(dust, ElectricallyImpureCopper)
                .outputItems(dust, Ferrosilite, 5)
                .outputFluids(SulfurDioxide.getFluid(2000))
                .save(provider);

        // Cu + H2SO4 -> CuH2SO4
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(120)
                .inputItems(dust, ElectricallyImpureCopper)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(CopperRefiningSolution.getFluid(1000))
                .save(provider);

        // 2Cu + CuH2SO4 -> H2SO4 + 3Cu + TeSe(75%)
        ELECTROLYZER_RECIPES.recipeBuilder().duration(450).EUt(120)
                .inputItems(plate, ElectricallyImpureCopper, 2)
                .inputFluids(CopperRefiningSolution.getFluid(1000))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(ingot, Copper, 3)
                .chancedOutput(AnodicSlime, 7500, 0)
                .save(provider);

        // TeSe + 2Na2CO3 + 4O -> TeO2SeO2(Na2CO3)2
        BLAST_RECIPES.recipeBuilder().duration(320).EUt(120).blastFurnaceTemp(2100)
                .inputItems(dust,AnodicSlime)
                .inputItems(dust, SodaAsh, 12)
                .inputFluids(Oxygen.getFluid(4000))
                .outputItems(dustTiny, PreciousMetal, 5)
                .outputFluids(SeleniteTelluriteMix.getFluid(1000))
                .save(provider);

        // TeO2SeO2(Na2CO3)2 + H2SO4 -> TeO2 + Na2SO4 + Na2SeO3 + CO2 + H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(1920)
                .inputFluids(SeleniteTelluriteMix.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(TelluriumOxide, 3)
                .outputItems(dust, Sodium, 4)
                .outputFluids(Water.getFluid(2000))
                .outputFluids(SulfurDioxide.getFluid(1000))
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .outputFluids(SeleniteSolution.getFluid(1000))
                .save(provider);

        // Na2SeO3 + 2HCl -> 2NaCl + SeO2 + H2O
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputFluids(SeleniteSolution.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputItems(dust, Salt, 4)
                .outputItems(SeleniumOxide, 3)
                .save(provider);

        // SeO2 + 2SO2 -> Se + 2SO3
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputItems(dust,SeleniumOxide, 3)
                .inputFluids(SulfurDioxide.getFluid(2000))
                .outputItems(dust, Selenium)
                .outputFluids(SulfurTrioxide.getFluid(2000))
                .save(provider);

        // TeO2 + 2SO2 -> Te + 2SO3
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputItems(dust,TelluriumOxide, 3)
                .inputFluids(SulfurDioxide.getFluid(2000))
                .outputItems(dust, Tellurium)
                .outputFluids(SulfurTrioxide.getFluid(2000))
                .save(provider);
    }
}




public class SensorEmitter {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Sr + BaO + 2CH3COOH -> [C4H6BaSrO4 + H2O]
        MIXER_RECIPES.recipeBuilder().duration(420).EUt(120)
                .inputItems(dust, Strontium)
                .inputItems(dust,BariumOxide, 2)
                .inputFluids(AceticAcid.getFluid(2000))
                .outputFluids(BariumStrontiumAcetateSolution.getFluid(1000))
                .save(provider);

        // Ti + 2O -> TiO2
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(1920)
                .inputItems(dust, Titanium)
                .inputFluids(Oxygen.getFluid(2000))
                .outputItems(dust, Rutile, 3)
                .save(provider);

        // TiO2 + 4C3H8O -> C12H28O4Ti + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputItems(dust, Rutile, 3)
                .inputFluids(IsopropylAlcohol.getFluid(4000))
                .outputFluids(TitaniumIsopropoxide.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // [C4H6BaSrO4 + H2O] + C12H28O4Ti + 2C -> [C4H6BaSrO4 + C12H28O4Ti + H2O + 2C]
        MIXER_RECIPES.recipeBuilder().duration(280).EUt(120)
                .inputFluids(BariumStrontiumAcetateSolution.getFluid(1000))
                .inputFluids(TitaniumIsopropoxide.getFluid(1000))
                .inputItems(dust, Carbon, 2)
                .outputFluids(BariumStrontiumTitanatePreparation.getFluid(2000))
                .save(provider);

        // [C4H6BaSrO4 + C12H28O4Ti + H2O + 2C] -> BaO4SrTi + C5H10O2 + 4C3H6 + H2O + CO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(480)
                .inputFluids(BariumStrontiumTitanatePreparation.getFluid(2000))
                .outputItems(BariumStrontiumTitanate, 7)
                .outputFluids(IsopropylAcetate.getFluid(1000))
                .outputFluids(Propene.getFluid(4000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // C5H10O2 + H2O -> C3H8O + CH3COOH
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .notConsumable(dust, PhosphorousPentoxide)
                .inputFluids(IsopropylAcetate.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(IsopropylAlcohol.getFluid(1000))
                .outputFluids(AceticAcid.getFluid(1000))
                .save(provider);

        // 9H2O + 2F7K2Ta -> Ta2O5 + 14HF + 4KOH
        CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(120)
                .inputItems(dust,PotasssiumFluoroTantalate, 20)
                .inputFluids(Water.getFluid(9000))
                .outputItems(TantalumOxide, 7)
                .outputFluids(HydrofluoricAcid.getFluid(14000))
                .outputFluids(PotassiumHydroxide.getFluid(4000))
                .save(provider);

        // 2Ta + 10Cl + 5H2O -> Ta2O5 + 10HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(480).EUt(120)
                .inputItems(dust, Tantalum, 2)
                .inputFluids(Chlorine.getFluid(10000))
                .inputFluids(Water.getFluid(5000))
                .outputItems(TantalumOxide, 7)
                .outputFluids(HydrochloricAcid.getFluid(10000))
                .save(provider);

        // 2Sc + 6Cl + 3H2O -> Sc2O3 + 6HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(480).EUt(120)
                .inputItems(dust, Scandium, 2)
                .inputFluids(Chlorine.getFluid(6000))
                .inputFluids(Water.getFluid(3000))
                .outputItems(ScandiumOxide, 5)
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .save(provider);

        // 2Lu + 6Cl + 3H2O -> Lu2O3 + 6HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(480).EUt(120)
                .inputItems(dust, Lutetium, 2)
                .inputFluids(Chlorine.getFluid(6000))
                .inputFluids(Water.getFluid(3000))
                .outputItems(LutetiumOxide, 5)
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .save(provider);

        // 2Tm + 6Cl + 3H2O -> Tm2O3 + 6HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(480).EUt(120)
                .inputItems(dust, Thulium, 2)
                .inputFluids(Chlorine.getFluid(6000))
                .inputFluids(Water.getFluid(3000))
                .outputItems(ThuliumOxide, 5)
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .save(provider);

        // 2Eu + 6Cl + 3H2O -> Eu2O3 + 6HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(480).EUt(120)
                .inputItems(dust, Europium, 2)
                .inputFluids(Chlorine.getFluid(6000))
                .inputFluids(Water.getFluid(3000))
                .outputItems(EuropiumOxide, 5)
                .outputFluids(HydrochloricAcid.getFluid(6000))
                .save(provider);

        // Pb(NO3)2 + 9Ca -> [Pb(NO3)2 + 9Ca]
        MIXER_RECIPES.recipeBuilder().duration(200).EUt(30)
                .inputItems(dust, LeadNitrate, 9)
                .inputItems(dust, Calcium, 9)
                .outputItems(LeadNitrateCalciumMixture, 18)
                .save(provider);

        // [2Pb(NO3)2 + 9Ca] + Ta2O5 + Sc2O3 + 3O -> 2Pb(ScTa)O3 + 9CaO + 4NO2
        BLAST_RECIPES.recipeBuilder().duration(350).EUt(120).blastFurnaceTemp(1350)
                .inputItems(dust,LeadNitrateCalciumMixture, 18)
                .inputItems(dust,TantalumOxide, 7)
                .inputItems(dust,ScandiumOxide, 5)
                .inputFluids(Oxygen.getFluid(3000))
                .outputItems(LeadScandiumTantalate, 12)
                .outputItems(dust, Quicklime, 18)
                .outputFluids(NitrogenDioxide.getFluid(4000))
                .save(provider);

        // 4Tb + 7Ds + 10Fe + 5Co + 2B + Si + C -> [4Tb + 7Ds + 10Fe + 5Co + 2B + Si + C]
        LARGE_MIXER_RECIPES.recipeBuilder().duration(940).EUt(30)
                .inputItems(dust, Terbium, 4)
                .inputItems(dust, Dysprosium, 7)
                .inputItems(dust, Iron, 10)
                .inputItems(dust, Cobalt, 5)
                .inputItems(dust, Boron, 2)
                .inputItems(dust, Silicon)
                .inputItems(dust, Carbon)
                .outputItems(MagnetorestrictiveAlloy, 30)
                .save(provider);

        // Pb + Se -> PbSe
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust, Lead)
                .inputItems(dust, Selenium)
                .outputItems(LeadSenenide, 2)
                .save(provider);

        // Zn + Se -> ZnSe
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust, Zinc)
                .inputItems(dust, Selenium)
                .outputItems(ZincSelenide, 2)
                .save(provider);

        // Fr + Cs + 2Cd + 6Br -> FrCsCd2Br6
        BLAST_RECIPES.recipeBuilder().duration(350).EUt(120).blastFurnaceTemp(2200)
                .inputItems(dust, Francium)
                .inputItems(dust, Caesium)
                .inputItems(dust, Cadmium, 2)
                .inputFluids(Bromine.getFluid(6000))
                .outputItems(FranciumCaesiumCadmiumBromide, 10)
                .save(provider);

        // C6H5NH2 + NaNO2 + 2HCl + NaI -> 2NaCl + 2N + 2H2O + C6H5I
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(480)
                .inputFluids(Aniline.getFluid(1000))
                .inputItems(dust,SodiumNitrite, 4)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputItems(dust,SodiumIodide, 2)
                .outputItems(dust, Salt, 4)
                .outputFluids(Nitrogen.getFluid(2000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(Iodobenzene.getFluid(1000))
                .save(provider);

        // C6H5I + C8H8 + Cl -> HCl + I + C14H12
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(18000)
                .notConsumable(PalladiumAcetate)
                .inputFluids(Iodobenzene.getFluid(1000))
                .inputFluids(Styrene.getFluid(1000))
                .inputFluids(Chlorine.getFluid(1000))
                .notConsumable(Tributylamine.getFluid(0))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .outputItems(dust, Iodine)
                .outputItems(Stilbene.getItemStack(26))
                .save(provider);

        // C6H6O2 + NH3 -> C6H7NO + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(480)
                .inputFluids(Resorcinol.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(Amino3phenol.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // C2H4 + NH3 -> C2H5NH2
        CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(480)
                .inputFluids(Ethylene.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(Ethylamine.getFluid(2000))
                .notConsumable(SodiumAzanide)
                .save(provider);

        // 3C2H5NH2 + C6H7NO + 2C8H4O3 + HCl -> 2NH3 + C28H31ClN2O3 + 4O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(490000)
                .inputFluids(Ethylamine.getFluid(3000))
                .inputFluids(Amino3phenol.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputItems(dust, PhthalicAnhydride, 30)
                .notConsumable(TetraethylammoniumNonahydridides)
                .outputFluids(Ammonia.getFluid(2000))
                .outputFluids(Oxygen.getFluid(4000))
                .outputItems(RhodamineB.getItemStack(65))
                .save(provider);

        // Re + 7F + 4H2O + NH3 -> 7HF + NH4ReO4
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(7680)
                .inputItems(dust, Rhenium)
                .inputFluids(Fluorine.getFluid(7000))
                .inputFluids(Water.getFluid(4000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(7000))
                .outputFluids(AmmoniumPerrhenate.getFluid(1000))
                .save(provider);

        // Tc + NaOH + 2HNO3 -> NO2 + H3NO + NaTcO4
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(480)
                .inputItems(dust, Technetium)
                .inputItems(dust, SodiumHydroxide, 3)
                .inputFluids(NitricAcid.getFluid(2000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .outputFluids(Hydroxylamine.getFluid(1000))
                .outputItems(SodiumPertechnetate, 6)
                .save(provider);

        // KOH + NH4ReO4 -> KReO4 + NH3 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(480)
                .inputFluids(PotassiumHydroxide.getFluid(1000))
                .inputFluids(AmmoniumPerrhenate.getFluid(1000))
                .outputItems(PotassiumPerrhenate, 6)
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // K + NaTcO4 -> KTcO4 + Na
        BLAST_RECIPES.recipeBuilder().duration(280).EUt(120).blastFurnaceTemp(6500)
                .inputItems(dust, Potassium)
                .inputItems(dust,SodiumPertechnetate, 6)
                .outputItems(PotassiumPertechnate, 6)
                .outputItems(dust, Sodium)
                .save(provider);

        // KReO4 + 18K + 13C2H5OH + 4O -> 4KOH + H9K2ReO4 + 13C2H5KO
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .inputItems(dust,PotassiumPerrhenate, 6)
                .inputItems(dust, Potassium, 18)
                .inputFluids(Ethanol.getFluid(13000))
                .inputFluids(Oxygen.getFluid(4000))
                .outputFluids(PotassiumHydroxide.getFluid(4000))
                .outputItems(PotassiumNonahydridorhenate, 16)
                .outputFluids(PotassiumEthoxide.getFluid(13000))
                .save(provider);

        // KTcO4 + 18K + 13C2H5OH + 4O -> 4KOH + H9K2TcO4 + 13C2H5KO
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .inputItems(dust,PotassiumPertechnate, 6)
                .inputItems(dust, Potassium, 18)
                .inputFluids(Ethanol.getFluid(13000))
                .inputFluids(Oxygen.getFluid(4000))
                .outputFluids(PotassiumHydroxide.getFluid(4000))
                .outputItems(PotassiumNonahydridotechnetate, 16)
                .outputFluids(PotassiumEthoxide.getFluid(13000))
                .save(provider);

        // C2H5KO + HCl -> C2H5OH + KCl
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(PotassiumEthoxide.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(Ethanol.getFluid(1000))
                .outputItems(dust, RockSalt, 2)
                .save(provider);

        // H9K2ReO4 + H9K2TcO4 + 2C8H20NBr + 2Br -> 4KBr + [C8H20NH9ReO4 + C8H20NH9TcO4]
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(360).EUt(15310)
                .inputItems(dust,PotassiumNonahydridorhenate, 16)
                .inputItems(dust,PotassiumNonahydridotechnetate, 16)
                .inputFluids(TetraethylammoniumBromide.getFluid(2000))
                .inputFluids(Bromine.getFluid(2000))
                .outputItems(PotassiumBromide, 8)
                .outputItems(TetraethylammoniumNonahydridides.getItemStack(86))
                .save(provider);

        // KI + C6H7NO + C4H9Li -> C10H15N + KOH + LiI
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputItems(dust,PotassiumIodide, 2)
                .inputFluids(Aminophenol.getFluid(1000))
                .inputFluids(ButylLithium.getFluid(1000))
                .outputFluids(Butylaniline.getFluid(1000))
                .outputFluids(PotassiumHydroxide.getFluid(1000))
                .outputItems(LithiumIodide, 2)
                .save(provider);

        // NaH + C3H9SiCl -> C3H10Si + NaCl
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(1920)
                .inputItems(dust,SodiumHydride, 2)
                .inputFluids(Trimethylchlorosilane.getFluid(1000))
                .outputFluids(Trimethylsilane.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .save(provider);

        // K + Br -> KBr
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust, Potassium)
                .inputFluids(Bromine.getFluid(1000))
                .outputItems(PotassiumBromide, 2)
                .save(provider);

        // KBr + O3 -> KBrO3
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputItems(dust,PotassiumBromide, 2)
                .inputFluids(Ozone.getFluid(1000))
                .outputItems(PotassiumBromate, 5)
                .save(provider);

        // C8H4O3 + NaI + NaNO2 + [NaOH + H2O] + NH3 + HCl + 2Cl -> C7H5IO2 + N2 + CO2 + 3[H2O + NaCl]
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(350).EUt(122880)
                .inputItems(dust, PhthalicAnhydride, 15)
                .inputItems(dust,SodiumIodide, 2)
                .inputItems(dust,SodiumNitrite, 4)
                .inputFluids(SodiumHydroxideSolution.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(Chlorine.getFluid(2000))
                .outputFluids(IodobenzoicAcid.getFluid(1000))
                .outputFluids(Nitrogen.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputFluids(SaltWater.getFluid(3000))
                .save(provider);

        // 3C7H5IO2 + H2SO4 + 2O -> H2S + 3C7H5IO4
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(1920)
                .notConsumable(PotassiumBromate)
                .inputFluids(IodobenzoicAcid.getFluid(3000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .inputFluids(Oxygen.getFluid(2000))
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputItems(IBX.getItemStack(51))
                .save(provider);

        // LiI -> Li + I
        ELECTROLYZER_RECIPES.recipeBuilder().duration(224).EUt(30)
                .inputItems(dust,LithiumIodide, 2)
                .outputItems(dust, Lithium)
                .outputItems(dust, Iodine)
                .save(provider);

        // KBr -> K + Br
        ELECTROLYZER_RECIPES.recipeBuilder().duration(224).EUt(30)
                .inputItems(dust,PotassiumBromide, 2)
                .outputItems(dust, Potassium)
                .outputFluids(Bromine.getFluid(1000))
                .save(provider);

        // C3H10Si + C6H5Cl + 2CH2O + C7H5IO4 -> 2H + (CH3)3SiCl + C8H8O2 + C7H5IO4
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(7680)
                .inputFluids(Trimethylsilane.getFluid(1000))
                .inputFluids(Chlorobenzene.getFluid(1000))
                .inputFluids(Formaldehyde.getFluid(2000))
                .inputItems(dust,IBX, 17)
                .notConsumable(dust, CobaltOxide)
                .outputFluids(Trimethylchlorosilane.getFluid(1000))
                .outputFluids(Methoxybenzaldehyde.getFluid(1000))
                .outputFluids(IodobenzoicAcid.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // C8H8O2 + C10H15N -> C18H21NO + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(122880)
                .inputFluids(Methoxybenzaldehyde.getFluid(1000))
                .inputFluids(Butylaniline.getFluid(1000))
                .notConsumable(TetraethylammoniumNonahydridides)
                .outputFluids(MBBA.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputItems(dust, CarbonNanotubes)
                .inputFluids(MBBA.getFluid(1000))
                .outputFluids(LiquidCrystalDetector.getFluid(1000))
                .save(provider);

        // PdCl2 + 2CH3COOH -> C4H6O4Pd + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(480)
                .inputItems(dust,PalladiumChloride, 3)
                .inputFluids(AceticAcid.getFluid(2000))
                .outputItems(PalladiumAcetate, 15)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // I + Cl -> ICl
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust, Iodine)
                .inputFluids(Chlorine.getFluid(1000))
                .outputFluids(IodineMonochloride.getFluid(1000))
                .save(provider);

        // Re + Rh + Nq -> ReRhNq
        MIXER_RECIPES.recipeBuilder().duration(260).EUt(84500)
                .inputItems(dust, Rhenium)
                .inputItems(dust, Rhodium)
                .inputItems(dust, Naquadah)
                .outputItems(RhReNqCatalyst, 3)
                .save(provider);

        // Mg + 2Cl -> MgCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(50).EUt(120)
                .inputItems(dust, Magnesium)
                .inputFluids(Chlorine.getFluid(2000))
                .outputItems(dust, MagnesiumChloride, 3)
                .save(provider);

        // 2MgCl2 + 3C2H2 + (CH3)3SiCl + 2Br -> 3HCl + C9H12Si(MgBr)2 + 2Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(480)
                .inputItems(dust, MagnesiumChloride, 6)
                .inputFluids(Acetylene.getFluid(3000))
                .inputFluids(Trimethylchlorosilane.getFluid(1000))
                .inputFluids(Bromine.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(3000))
                .outputFluids(AcetylatingReagent.getFluid(1000))
                .outputFluids(Chlorine.getFluid(2000))
                .save(provider);

        // C10H8 + 2CH4O -> 2H2O + C12H12
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputFluids(Naphthalene.getFluid(1000))
                .inputFluids(Methanol.getFluid(2000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(Dimethylnaphthalene.getFluid(1000))
                .save(provider);

        // C12H12 + C9H12Si(MgBr)2 + ICl + 2 Cl + C4H4BrNO2 -> 2MgClBr + H2C18H11I + (CH3)3SiCl  + HBr + C4H5NO2
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(290).EUt(122880)
                .inputFluids(Dimethylnaphthalene.getFluid(1000))
                .inputFluids(AcetylatingReagent.getFluid(1000))
                .inputFluids(IodineMonochloride.getFluid(1000))
                .inputFluids(Chlorine.getFluid(2000))
                .inputItems(dust,Bromosuccinimide, 12)
                .notConsumable(RhReNqCatalyst)
                .outputItems(MgClBromide, 6)
                .outputItems(Succinimide, 12)
                .outputFluids(Dihydroiodotetracene.getFluid(1000))
                .outputFluids(Trimethylchlorosilane.getFluid(1000))
                .outputFluids(HydrobromicAcid.getFluid(1000))
                .save(provider);

        // C6H5OH + 10Cl + 2HCN + O -> 8HCl + C8Cl2N2O2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(30720)
                .inputFluids(Phenol.getFluid(1000))
                .inputFluids(Chlorine.getFluid(10000))
                .inputFluids(HydrogenCyanide.getFluid(2000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(8000))
                .outputFluids(Dichlorodicyanobenzoquinone.getFluid(1000))
                .save(provider);

        // C8N2Cl2(OH)2 + H2O2 -> C8Cl2N2O2 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(480)
                .inputFluids(Dichlorodicyanohydroquinone.getFluid(1000))
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputFluids(Dichlorodicyanobenzoquinone.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .notConsumable(VanadiumOxide)
                .save(provider);

        // C4H6O4Pd + Li2TiO3 + 2HCl + H2O -> C4H6O4 + 2[H2O + LiCl] + PdTiO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(491520)
                .inputItems(dust,PalladiumAcetate, 15)
                .inputItems(wireFine, LithiumTitanate, 24)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputFluids(Water.getFluid(1000))
                .notConsumable(UVA_HALIDE_LAMP)
                .outputFluids(LithiumChlorideSolution.getFluid(2000))
                .outputItems(SuccinicAcid, 14)
                .outputItems(PalladiumLoadedRutileNanoparticles, 5)
                .save(provider);

        // 2H2C18H11I + 2C8Cl2N2O2 + C3H8O -> C3H6O + 2C8N2Cl2(OH)2 + 2I + 2C18H12
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(491520)
                .inputFluids(Dihydroiodotetracene.getFluid(2000))
                .inputFluids(Dichlorodicyanobenzoquinone.getFluid(2000))
                .inputFluids(IsopropylAlcohol.getFluid(1000))
                .outputFluids(Acetone.getFluid(1000))
                .outputFluids(Dichlorodicyanohydroquinone.getFluid(2000))
                .outputItems(dust, Iodine, 2)
                .outputItems(Tetracene.getItemStack(60))
                .notConsumable(UVA_HALIDE_LAMP)
                .notConsumable(PalladiumLoadedRutileNanoparticles)
                .save(provider);
        
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(491520)
                .inputItems(dust,LEPTON_TRAP_CRYSTAL)
                .inputItems(dustSmall, Vibranium, 2)
                .inputFluids(HeavyLeptonMix.getFluid(500))
                .inputFluids(FreeElectronGas.getFluid(500))
                .outputItems(CHARGED_LEPTON_TRAP_CRYSTAL)
                .save(provider);
    }
}




public class SuperconductorsSMDChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Cu + In + Ga -> CuGaIn
        MIXER_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust, Copper)
                .inputItems(dust, Indium)
                .inputItems(dust, Gallium)
                .outputItems(CopperGalliumIndiumMix, 3)
                .save(provider);

        // 2H + Se -> H2Se
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)
                .inputFluids(Hydrogen.getFluid(2000))
                .inputItems(dust, Selenium)
                .outputFluids(HydroselenicAcid.getFluid(1000))
                .save(provider);

        // 2H2Se + CuInGa -> CuInGaSe2 + 4 H
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(480)
                .inputFluids(HydroselenicAcid.getFluid(2000))
                .inputItems(dust,CopperGalliumIndiumMix, 3)
                .outputItems(CopperGalliumIndiumSelenide, 5)
                .outputFluids(Hydrogen.getFluid(4000))
                .save(provider);

        // MnO2 + 2KOH + O -> K2MnO4 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(30)
                .inputItems(dust, Pyrolusite, 3)
                .inputFluids(PotassiumHydroxide.getFluid(2000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(PotassiumManganate, 7)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // La2O3 + 2CaO + 2K2MnO4 -> 2LaCaMnO3 + 2K2O + 5O
        BLAST_RECIPES.recipeBuilder().duration(380).EUt(120).blastFurnaceTemp(900)
                .inputItems(dust,LanthanumOxide, 5)
                .inputItems(dust, Quicklime, 4)
                .inputItems(dust,PotassiumManganate, 14)
                .outputItems(LanthanumCalciumManganate, 12)
                .outputItems(dust, Potash, 6)
                .outputFluids(Oxygen.getFluid(5000))
                .save(provider);

        // Fe + Pt -> FePt
        MIXER_RECIPES.recipeBuilder().duration(230).EUt(240)
                .inputItems(dust, Iron)
                .inputItems(dust, Platinum)
                .outputItems(IronPlatinumCatalyst, 2)
                .save(provider);

        // C6H5OH + HNO3 + 6H -> 3H2O + C6H7NO
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputFluids(Phenol.getFluid(1000))
                .inputFluids(NitricAcid.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(6000))
                .notConsumable(IronPlatinumCatalyst)
                .outputFluids(Water.getFluid(3000))
                .outputFluids(Aminophenol.getFluid(1000))
                .save(provider);

        // C6H7NO + C3H8O3 + O -> C9H7NO + 4H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(480)
                .inputFluids(Aminophenol.getFluid(1000))
                .inputFluids(Glycerol.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .notConsumable(NitroBenzene.getFluid(0))
                .outputFluids(Hydroxyquinoline.getFluid(1000))
                .outputFluids(Water.getFluid(4000))
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(350).EUt(1920)
                .inputFluids(Hydroxyquinoline.getFluid(1000))
                .inputItems(dust, Aluminium)
                .outputItems(AluminiumComplex, 19)
                .save(provider);

        // Na2O4Ru + 2H -> RuO2 + 2NaOH
        BLAST_RECIPES.recipeBuilder().duration(270).EUt(120).blastFurnaceTemp(1250)
                .inputItems(dust, SodiumRuthenate, 7)
                .inputFluids(Hydrogen.getFluid(2000))
                .outputItems(dust, RutheniumDioxide, 3)
                .outputItems(dust, SodiumHydroxide, 6)
                .save(provider);

        // Bi + 6HNO3 -> [Bi(NO3)3 + H2O] + 3NO2 + 2H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(30)
                .inputItems(dust, Bismuth)
                .inputFluids(NitricAcid.getFluid(6000))
                .outputFluids(BismuthNitrateSoluton.getFluid(1000))
                .outputFluids(NitrogenDioxide.getFluid(3000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // 2Na2O4Ru + 2[Bi(NO3)3 + H2O] -> Bi2Ru2O7 + 4NaNO3 + N2H4 + 9O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputItems(dust, SodiumRuthenate, 14)
                .inputFluids(BismuthNitrateSoluton.getFluid(2000))
                .outputFluids(Hydrazine.getFluid(1000))
                .outputFluids(Oxygen.getFluid(9000))
                .outputItems(dust, BismuthRuthenate, 11)
                .outputItems(dust, SodiumNitrate, 20)
                .save(provider);

        // NaNO3 -> Na + N + 3O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(270).EUt(30)
                .inputItems(dust, SodiumNitrate, 5)
                .outputItems(dust, Sodium)
                .outputFluids(Nitrogen.getFluid(1000))
                .outputFluids(Oxygen.getFluid(3000))
                .save(provider);

        // 2IrO2 + 2[Bi(NO3)3 + H2O] + H -> Bi2Ir2O7 + 5HNO2 + NO2
        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(1920)
                .inputItems(dust, IridiumDioxide,6)
                .inputFluids(BismuthNitrateSoluton.getFluid(2000))
                .inputFluids(Hydrogen.getFluid(1000))
                .outputItems(dust, BismuthIridiate, 11)
                .outputFluids(NitricAcid.getFluid(5000))
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .save(provider);

        // BaCl3 + H2O -> [BaCl3 + H2O]
        MIXER_RECIPES.recipeBuilder().duration(230).EUt(120)
                .inputItems(dust,BariumChloride, 3)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputFluids(BariumChlorideSolution.getFluid(1000))
                .save(provider);

        // TiCl4 + [NaOH + H2O] + [BaCl2 + H2O] -> BaTiO3 + NaCl + 5HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(120)
                .inputFluids(TitaniumTetrachloride.getFluid(1000))
                .inputFluids(SodiumHydroxideSolution.getFluid(1000))
                .inputFluids(BariumChlorideSolution.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .outputFluids(BariumTitanatePreparation.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(4000))
                .save(provider);

        // 0.1Prep -> 0.2Titanate, 2:1 ratio
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(58).EUt(1920)
                .inputFluids(BariumTitanatePreparation.getFluid(100))
                .outputItems(dust, BariumTitanate)
                .save(provider);

        // H2S + C4H6O4 + 4Br -> C4Br4S + 4H2O
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(230).EUt(4960)
                .inputItems(dust,SuccinicAcid, 14)
                .inputFluids(HydrogenSulfide.getFluid(1000))
                .inputFluids(Bromine.getFluid(4000))
                .outputFluids(Perbromothiophene.getFluid(1000))
                .outputFluids(Water.getFluid(4000))
                .save(provider);

        // 2 C4Br4S + 4 C2H5ONa + C2H4O2 + 2H2O -> 2 C8H12O2S + 4 NaBr + 4 HBr + 2 CO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(480)
                .notConsumable(dust, Zinc)
                .inputFluids(Perbromothiophene.getFluid(1000))
                .inputFluids(AceticAcid.getFluid(500))
                .inputItems(dust,SodiumEthoxide, 18)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(Diethoxythiophene.getFluid(1000))
                .outputFluids(HydrobromicAcid.getFluid(2000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(SodiumBromide, 8)
                .save(provider);

        // C2H6O2 + C6H8S -> C6H6O2S + 2CH4
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .notConsumable(GELLED_TOLUENE)
                .inputFluids(EthyleneGlycol.getFluid(1000))
                .inputFluids(Diethoxythiophene.getFluid(1000))
                .outputFluids(EDOT.getFluid(1000))
                .outputFluids(Ethanol.getFluid(2000))
                .save(provider);

        // (C8H8)n + H2SO4 + C6H6O2S (aka: EDOT) -> PEDOT + Dilute H2SO4
        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(320).EUt(1920)
                .inputFluids(Polystyrene.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .inputFluids(EDOT.getFluid(1000))
                .notConsumable(SodiumPersulfate.getFluid(0))
                .notConsumable(IronSulfateDust)
                .outputFluids(DilutedSulfuricAcid.getFluid(1000))
                .outputItems(dust, PEDOT, 3)
                .save(provider);

        // Fe + H2SO4 -> FeSO4 + 2H
        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(30)
                .inputItems(dust, Iron)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(IronSulfateDust, 6)
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // ZrCl4 + 2H2O -> ZrOCl2 + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust,ZirconiumTetrachloride, 5)
                .inputFluids(Water.getFluid(2000))
                .outputItems(ZirconylChloride, 4)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // Pb + N2O4 + 2O -> Pb(NO3)2
        CHEMICAL_RECIPES.recipeBuilder().EUt(120).duration(150)
                .inputItems(dust, Lead)
                .inputFluids(DinitrogenTetroxide.getFluid(1000))
                .inputFluids(Oxygen.getFluid(2000))
                .outputItems(dust, LeadNitrate, 9)
                .save(provider);

        // ZrOCl2 + TiO2 + Pb(NO3)2 + 2H -> PbZrTiO3 + 2HNO3 + 2Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(480)
                .inputItems(dust,ZirconylChloride, 4)
                .inputItems(dust, Rutile, 3)
                .inputItems(dust, LeadNitrate, 9)
                .inputFluids(Hydrogen.getFluid(2000))
                .outputFluids(NitricAcid.getFluid(2000))
                .outputFluids(Chlorine.getFluid(2000))
                .outputItems(dust, LeadZirconateTitanate, 6)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(430).EUt(30720)
                .inputItems(gemExquisite, LeadZirconateTitanate, 2)
                .inputItems(wireFine, Gold)
                .inputFluids(SolderingAlloy.getFluid(288))
                .outputItems(PIEZOELECTRIC_CRYSTAL)
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(500).EUt(120).blastFurnaceTemp(2400)
                .inputItems(dust, Tungsten, 9)
                .inputItems(GAEnums.GAOrePrefix.oxide, Thorium)
                .outputItems(ingot, ThoriumDopedTungsten, 10)
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(270).EUt(120).blastFurnaceTemp(1800)
                .inputItems(dust, Quartzite)
                .inputItems(dust,Alumina, 5)
                .notConsumable(SHAPE_MOLD_CYLINDER)
                .outputItems(ALUMINO_SILICATE_GLASS_TUBE)
                .save(provider);

        BLAST_ALLOY_RECIPES.recipeBuilder().duration(290).EUt(1920)
                .inputItems(dust, SiliconDioxide, 3)
                .inputItems(dust,BariumOxide, 2)
                .inputItems(dust, Garnierite, 2)
                .inputItems(dust, SodaAsh, 6)
                .outputFluids(WoodsGlass.getFluid(1296))
                .blastFurnaceTemp(1400)
                .save(provider);

        // Fe + 2I -> FeI2
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Iron)
                .inputItems(dust, Iodine, 2)
                .outputItems(IronIodide, 3)
                .save(provider);

        // Tl + I -> TlI
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Thallium)
                .inputItems(dust, Iodine)
                .outputItems(ThalliumIodide, 2)
                .save(provider);

        // Rb + I -> RbI
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Rubidium)
                .inputItems(dust, Iodine)
                .outputItems(RubidiumIodide, 2)
                .save(provider);

        // K + I -> KI
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Potassium)
                .inputItems(dust, Iodine)
                .outputItems(PotassiumIodide, 2)
                .save(provider);

        // In + 3I -> InI3
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Indium)
                .inputItems(dust, Iodine, 3)
                .outputItems(IndiumIodide, 4)
                .save(provider);

        // Ga + 3I -> GaI3
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Gallium)
                .inputItems(dust, Iodine, 3)
                .outputItems(GalliumIodide, 4)
                .save(provider);

        // Sc + 3I -> ScI3
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Scandium)
                .inputItems(dust, Iodine, 3)
                .outputItems(ScandiumIodide, 4)
                .save(provider);

        // FeI2 + 5CO -> 2I + Fe(CO)5 (all x5)
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputItems(dust,IronIodide, 15)
                .inputFluids(CarbonMonoxide.getFluid(25000))
                .notConsumable(block, Copper)
                .outputItems(dust, Iodine, 10)
                .outputItems(dustSmall, Iron, 2)
                .outputFluids(IronCarbonyl.getFluid(5000))
                .save(provider);

        FLUID_HEATER_RECIPES.recipeBuilder().duration(200).EUt(480)
                .circuitMeta(1)
                .inputFluids(IronCarbonyl.getFluid(1000))
                .outputFluids(PurifiedIronCarbonyl.getFluid(900))
                .save(provider);

        ELECTROLYZER_RECIPES.recipeBuilder().duration(340).EUt(480)
                .inputFluids(PurifiedIronCarbonyl.getFluid(1000))
                .outputItems(CarbonylPurifiedIron)
                .outputFluids(CarbonMonoxide.getFluid(5000))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(290).EUt(1920)
                .inputItems(dust,SMALL_COIL, 4)
                .inputItems(dust,CarbonylPurifiedIron)
                .inputItems(wireFine, AnnealedCopper, 2)
                .inputFluids(SolderingAlloy.getFluid(144))
                .outputItems(INDUCTOR)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(290).EUt(1920)
                .inputItems(dust,RESISTOR)
                .inputItems(dust,INDUCTOR)
                .inputItems(wireFine, Cupronickel, 2)
                .outputItems(BALLAST)
                .save(provider);

        // 2V + 5Na2CO3 + 4H2O -> 5CO + 2NaVO3 + 8NaOH
        BLAST_RECIPES.recipeBuilder().duration(180).EUt(120).blastFurnaceTemp(650)
                .inputItems(dust, Vanadium, 2)
                .inputItems(dust, SodaAsh, 30)
                .inputFluids(Water.getFluid(4000))
                .outputFluids(CarbonMonoxide.getFluid(5000))
                .outputItems(SodiumMetavanadate, 10)
                .outputItems(dust, SodiumHydroxide, 24)
                .save(provider);

        // Y2O3 + Eu2O3 + V2O5 + 6H -> 2YEuVO4 + 3H2O
        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(1200)
                .inputItems(dust, YttriumOxide, 5)
                .inputItems(dust,EuropiumOxide, 5)
                .inputItems(dust,VanadiumOxide, 7)
                .inputFluids(Hydrogen.getFluid(6000))
                .outputItems(YttriumEuropiumVanadate, 14)
                .outputFluids(Steam.getFluid(3000))
                .save(provider);

        // SrCl2 + H2SO4 -> SrSO4 + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(480)
                .inputItems(dust,StrontiumChloride, 3)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(dust, Celestine, 6)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // 2SrO + Eu2O3 + 2Al2O3 + 6H -> 2SrEuAl2O4 + 3H2O
        BLAST_RECIPES.recipeBuilder().duration(340).EUt(120).blastFurnaceTemp(1200)
                .inputItems(dust,StrontiumOxide, 4)
                .inputItems(dust,EuropiumOxide, 5)
                .inputItems(dust,Alumina, 10)
                .inputFluids(Hydrogen.getFluid(6000))
                .outputItems(StrontiumEuropiumAluminate, 16)
                .outputFluids(Steam.getFluid(3000))
                .save(provider);

        ItemStack[] halides = {ThalliumIodide, RubidiumIodide, IndiumIodide, ScandiumIodide, GalliumIodide};
        SimpleDustMaterial[] mixtures = {GreenHalideMix, RedHalideMix, BlueHalideMix, WhiteHalideMix, UVAHalideMix};
        ItemStack[] lamp_cores = {GREEN_LAMP_CORE, RED_LAMP_CORE, BLUE_LAMP_CORE, WHITE_LAMP_CORE, UVA_LAMP_CORE};
        MetaItem<?>.MetaValueItem[] halide_lamp = {GREEN_HALIDE_LAMP, RED_HALIDE_LAMP, BLUE_HALIDE_LAMP, WHITE_HALIDE_LAMP, UVA_HALIDE_LAMP};

        for (int i = 0; i < 5; i++) {
            MIXER_RECIPES.recipeBuilder().duration(320).EUt(30)
                    .inputItems(dust,halides[i])
                    .inputItems(dust,PotassiumIodide, 2)
                    .inputFluids(Mercury.getFluid(1000))
                    .outputItems(mixtures[i], 2)
                    .save(provider);

            ASSEMBLER_RECIPES.recipeBuilder().duration(240).EUt(1920)
                    .inputItems(dust,mixtures[i])
                    .inputItems(foil, Molybdenum, 2)
                    .inputItems(wireFine, ThoriumDopedTungsten, 4)
                    .inputItems(dust,ALUMINO_SILICATE_GLASS_TUBE)
                    .inputItems(plate, CubicZirconia, 2)
                    .inputFluids(Argon.getFluid(1000))
                    .outputItems(lamp_cores[i])
                    .save(provider);

            if (i == 4) {
                ASSEMBLER_RECIPES.recipeBuilder().duration(290).EUt(1920)
                        .inputItems(dust,lamp_cores[i])
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, WoodsGlass, 2)
                        .inputItems(dust,YttriumEuropiumVanadate, 7)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i])
                        .save(provider);

                ASSEMBLER_RECIPES.recipeBuilder().duration(290).EUt(1920)
                        .inputItems(dust,lamp_cores[i])
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, WoodsGlass, 2)
                        .inputItems(dust,StrontiumEuropiumAluminate, 4)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i])
                        .save(provider);

                ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(210).EUt(7680)
                        .inputItems(dust,mixtures[i])
                        .inputItems(foil, Molybdenum, 2)
                        .inputItems(wireFine, ThoriumDopedTungsten, 4)
                        .inputItems(dust,ALUMINO_SILICATE_GLASS_TUBE)
                        .inputItems(plate, CubicZirconia, 2)
                        .inputFluids(Xenon.getFluid(250))
                        .inputFluids(SolderingAlloy.getFluid(432))
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, WoodsGlass, 2)
                        .inputItems(dust,YttriumEuropiumVanadate, 7)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i], 2)
                        .save(provider);

                ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(210).EUt(7680)
                        .inputItems(dust,mixtures[i])
                        .inputItems(foil, Molybdenum, 2)
                        .inputItems(wireFine, ThoriumDopedTungsten, 4)
                        .inputItems(dust,ALUMINO_SILICATE_GLASS_TUBE)
                        .inputItems(plate, CubicZirconia, 2)
                        .inputFluids(Xenon.getFluid(250))
                        .inputFluids(SolderingAlloy.getFluid(432))
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, WoodsGlass, 2)
                        .inputItems(dust,StrontiumEuropiumAluminate, 4)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i], 2)
                        .save(provider);

            } else {
                ASSEMBLER_RECIPES.recipeBuilder().duration(290).EUt(1920)
                        .inputItems(dust,lamp_cores[i])
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, BorosilicateGlass, 2)
                        .inputItems(dust,YttriumEuropiumVanadate, 7)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i])
                        .save(provider);

                ASSEMBLER_RECIPES.recipeBuilder().duration(290).EUt(1920)
                        .inputItems(dust,lamp_cores[i])
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, BorosilicateGlass, 2)
                        .inputItems(dust,StrontiumEuropiumAluminate, 4)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i])
                        .save(provider);

                ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(210).EUt(7680)
                        .inputItems(dust,mixtures[i])
                        .inputItems(foil, Molybdenum, 2)
                        .inputItems(wireFine, ThoriumDopedTungsten, 4)
                        .inputItems(dust,ALUMINO_SILICATE_GLASS_TUBE)
                        .inputItems(plate, CubicZirconia, 2)
                        .inputFluids(Xenon.getFluid(250))
                        .inputFluids(SolderingAlloy.getFluid(432))
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, BorosilicateGlass, 2)
                        .inputItems(dust,YttriumEuropiumVanadate, 7)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i], 2)
                        .save(provider);

                ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(210).EUt(7680)
                        .inputItems(dust,mixtures[i])
                        .inputItems(foil, Molybdenum, 2)
                        .inputItems(wireFine, ThoriumDopedTungsten, 4)
                        .inputItems(dust,ALUMINO_SILICATE_GLASS_TUBE)
                        .inputItems(plate, CubicZirconia, 2)
                        .inputFluids(Xenon.getFluid(250))
                        .inputFluids(SolderingAlloy.getFluid(432))
                        .inputItems(stick, MaragingSteel250, 4)
                        .inputItems(dust,BALLAST)
                        .inputItems(foil, Electrum, 2)
                        .inputItems(plate, BorosilicateGlass, 2)
                        .inputItems(dust,StrontiumEuropiumAluminate, 4)
                        .inputFluids(Nitrogen.getFluid(1000))
                        .outputItems(halide_lamp[i], 2)
                        .save(provider);
            }
        }

        // 6F + 2CS2 -> C2F6S2 + 2S
        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(120)
                .notConsumable(dust, Iodine)
                .inputFluids(Fluorine.getFluid(6000))
                .inputFluids(CarbonSulfide.getFluid(2000))
                .outputFluids(Biperfluoromethanedisulfide.getFluid(1000))
                .outputItems(dust, Sulfur, 2)
                .save(provider);

        // Hg + 3H2O2 + C2F6S2 + BaCO3 -> [C2BaF6O6S2 + 3H2O + Hg] + C
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(480)
                .inputFluids(Mercury.getFluid(1000))
                .inputFluids(Water.getFluid(3000))
                .inputFluids(Biperfluoromethanedisulfide.getFluid(1000))
                .inputItems(dust,BariumCarbonate, 5)
                .notConsumable(UVA_HALIDE_LAMP)
                .outputFluids(BariumTriflateSolution.getFluid(3000))
                .outputItems(dust, Carbon)
                .save(provider);

        // [C2BaF6O6S2 + 3H2O + Hg] -> C2BaF6O6S2 + 3H2O + Hg
        CENTRIFUGE_RECIPES.recipeBuilder().duration(320).EUt(1920)
                .inputFluids(BariumTriflateSolution.getFluid(3000))
                .outputItems(BariumTriflate, 17)
                .outputFluids(Mercury.getFluid(1000))
                .outputFluids(Water.getFluid(3000))
                .save(provider);

        // 3H2SO4 + 2Sc + 3C2BaF6O6S2 -> 3BaSO4 + 2C3F9O9S3Sc + 6H
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(SulfuricAcid.getFluid(3000))
                .inputItems(dust, Scandium, 2)
                .inputItems(dust,BariumTriflate.getItemStack(51))
                .outputItems(dust, Barite, 21)
                .outputItems(ScandiumTriflate, 50)
                .outputFluids(Hydrogen.getFluid(6000))
                .save(provider);

        // 2HNO3 + BaS -> H2S + Ba(NO3)2
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputFluids(NitricAcid.getFluid(2000))
                .inputItems(dust,BariumSulfide, 2)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputItems(BariumNitrate, 9)
                .save(provider);

        // 2HNO3 + Cu -> 2H + Cu(NO3)2
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputFluids(NitricAcid.getFluid(2000))
                .inputItems(dust, Copper)
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .outputItems(CopperNitrate, 9)
                .save(provider);

        // 6HNO3 + Y2O3 -> 3H2O + 2Y(NO3)3
        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputFluids(NitricAcid.getFluid(6000))
                .inputItems(dust, YttriumOxide, 5)
                .circuitMeta(0)
                .outputFluids(Water.getFluid(3000))
                .outputItems(YttriumNitrate.getItemStack(26))
                .save(provider);

        // C3H5ClO + 2H2O + Na2CO3 -> C3H8O3 + NaCl + NaHCO3
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(1024)
                .inputFluids(Epichlorhydrin.getFluid(1000))
                .inputFluids(Water.getFluid(2000))
                .inputItems(dust, SodaAsh, 6)
                .outputFluids(Glycerol.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .outputItems(SodiumBicarbonate, 6)
                .save(provider);

        // C3H8O3 + 2HCl + 3HCN + HClO + 3H2O -> C6H8O7 + 3NH4Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(7680)
                .inputFluids(Glycerol.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputFluids(HypochlorousAcid.getFluid(1000))
                .inputFluids(HydrogenCyanide.getFluid(3000))
                .inputFluids(Water.getFluid(3000))
                .notConsumable(dust, PotassiumDichromate)
                .circuitMeta(0)
                .outputFluids(CitricAcid.getFluid(1000))
                .outputFluids(AmmoniumChloride.getFluid(3000))
                .save(provider);

        // 3Cu(NO3)2 + 2Ba(NO3)2 + Y(NO3)3 + 2NH3 + C6H8O7 -> YBa2Cu3O6 + 15NO2 + 6CO + 4H2O + 6H
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(7680)
                .inputItems(dust,CopperNitrate.getItemStack(27))
                .inputItems(dust,BariumNitrate, 18)
                .inputItems(dust,YttriumNitrate, 13)
                .inputFluids(Ammonia.getFluid(2000))
                .inputFluids(CitricAcid.getFluid(1000))
                .outputItems(WellMixedYBCOxides, 12)
                .outputFluids(NitrogenDioxide.getFluid(15000))
                .outputFluids(CarbonMonoxide.getFluid(6000))
                .outputFluids(Water.getFluid(4000))
                .outputFluids(Hydrogen.getFluid(6000))
                .save(provider);

        // 2Th + 2Ba + 3Cu + 2Ca -> TBCC
        ASSEMBLER_RECIPES.recipeBuilder().duration(360).EUt(122880)
                .inputItems(foil, Thallium, 2)
                .inputItems(foil, Barium, 2)
                .inputItems(foil, Copper, 3)
                .inputItems(foil, Calcium, 2)
                .outputItems(PiledTBCC, 9)
                .save(provider);

        // [2Th + 2Ba + 3Cu + 2Ca] + 10O -> TBCCO
        ARC_FURNACE_RECIPES.recipeBuilder().duration(240).EUt(30720)
                .inputItems(dust,PiledTBCC)
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(TBCCODust)
                .save(provider);

        // 9O + C6H12O6 -> 3C2H2O4 + 3H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(480)
                .notConsumable(VanadiumOxide)
                .inputFluids(Oxygen.getFluid(9000))
                .inputItems(dust,Glucose, 24)
                .outputFluids(Water.getFluid(3000))
                .outputFluids(OxalicAcid.getFluid(3000))
                .save(provider);

        // 2C2H2O4 + 2O + Ac -> Ac(C2O4)2 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(30720)
                .inputFluids(OxalicAcid.getFluid(2000))
                .inputFluids(Oxygen.getFluid(2000))
                .inputItems(dust, Actinium)
                .outputFluids(Water.getFluid(2000))
                .outputItems(ActiniumOxalate, 13)
                .save(provider);

        // C + 4Cl -> CCl4
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(30)
                .inputItems(dust, Carbon)
                .circuitMeta(0)
                .inputFluids(Chlorine.getFluid(4000))
                .outputFluids(CarbonTetrachloride.getFluid(1000))
                .save(provider);

        // Ac(C2O4)2 + 3NaH + 13Na + 4CCl4 -> AcH3 + 16NaCl + 8CO
        BLAST_RECIPES.recipeBuilder().duration(530).EUt(120)
                .blastFurnaceTemp(10700)
                .inputItems(dust,ActiniumOxalate, 13)
                .inputItems(dust,SodiumHydride, 6)
                .inputItems(dust, Sodium, 13)
                .inputFluids(CarbonTetrachloride.getFluid(4000))
                .outputItems(ActiniumHydride, 4)
                .outputItems(dust, Salt, 32)
                .outputFluids(CarbonDioxide.getFluid(8000))
                .save(provider);

        // AcH3 + 9H -> AcH12 (multiplied by 18)
        STELLAR_FORGE_RECIPES.recipeBuilder().duration(260).EUt(7800000)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.NAQUADRIA_CHARGE))
                .inputItems(dust,ActiniumHydride.getItemStack(72))
                .inputFluids(Hydrogen.getFluid(162000))
                .outputFluids(ActiniumSuperhydridePlasma.getFluid(72000))
                .save(provider);

        FLUID_CANNER_RECIPES.recipeBuilder()
                .inputItems(dust,PLASMA_CONTAINMENT_CELL)
                .inputFluids(ActiniumSuperhydridePlasma.getFluid(1000))
                .outputItems(ACTINIUM_PLASMA_CONTAINMENT_CELL)
                .EUt(750000)
                .duration(20)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder().duration(340).EUt(8380000)
                .inputItems(dust,ACTINIUM_PLASMA_CONTAINMENT_CELL)
                .inputFluids(LiquidHelium.getFluid(24000))
                .outputItems(ActiniumSuperhydride, 13)
                .outputItems(PLASMA_CONTAINMENT_CELL)
                .outputFluids(Helium.getFluid(24000))
                .save(provider);

        // 2La + 2 C60H30 -> La2(C60H30)2
        MIXER_RECIPES.recipeBuilder().duration(140).EUt(30720)
                .inputItems(dust, Lanthanum, 2)
                .inputItems(dust,UnfoldedFullerene, 2)
                .outputItems(LanthanumFullereneMix, 4)
                .save(provider);

        //La2(C60H30)2 + 20 N -> La2(C60)2 + 20 NH3
        LARGE_ENGRAVER_RECIPES.recipeBuilder().duration(320).EUt(1966080)
                .inputItems(dust,LanthanumFullereneMix, 4)
                .inputFluids(Nitrogen.getFluid(20000))
                .notConsumable(craftingLens, Magenta)
                .outputFluids(Ammonia.getFluid(20000))
                .outputItems(LanthanumEmbeddedFullerene, 4)
                .save(provider);

        // 3Rb + 3Cs + La2(C60)2 -> La2Cs3Rb3(C60)2
        BLAST_RECIPES.recipeBuilder().duration(680).EUt(120).blastFurnaceTemp(2400)
                .inputItems(dust,LanthanumEmbeddedFullerene, 4)
                .inputItems(dust, Rubidium, 3)
                .inputItems(dust, Caesium, 3)
                .outputItems(FullereneSuperconductiveDust, 10)
                .save(provider);

        // (CH3)2SiHCl + CH4 -> (CH3)3SiCl + 2H
        CHEMICAL_RECIPES.recipeBuilder().duration(110).EUt(1920)
                .inputFluids(Dimethyldichlorosilane.getFluid(1000))
                .inputFluids(Methane.getFluid(1000))
                .outputFluids(Trimethylchlorosilane.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // 2CH2O2 + 2Br + 4Na + 2H2O -> Br2C2H2O2 + 4NaOH + 2H
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(360).EUt(7680)
                .inputFluids(FormicAcid.getFluid(2000))
                .inputFluids(Bromine.getFluid(2000))
                .inputFluids(Water.getFluid(2000))
                .notConsumable(Trimethylchlorosilane.getFluid(0))
                .inputItems(dust, Sodium, 4)
                .outputItems(dust, SodiumHydroxide, 12)
                .outputFluids(Dibromoacrolein.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // 6NaOH + 4S -> 2Na2S + Na2S2O3 + 3H2O
        BLAST_RECIPES.recipeBuilder().duration(210).EUt(120).blastFurnaceTemp(4500)
                .inputItems(dust, SodiumHydroxide, 18)
                .inputItems(dust, Sulfur, 4)
                .outputItems(dust, SodiumSulfide, 6)
                .outputItems(SodiumThiosulfate, 7)
                .outputFluids(Steam.getFluid(3000))
                .save(provider);

        // 2Cl + C2H6 -> C2H5Cl + HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(3340)
                .inputFluids(Chlorine.getFluid(2000))
                .inputFluids(Ethane.getFluid(1000))
                .outputFluids(Chloroethane.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .notConsumable(UVA_HALIDE_LAMP)
                .save(provider);

        // C2H4Cl2 + 2Na2S2O3 + C2H2Br2O2 -> C4H4S2Br2 + 2NaHSO4 + 2NaCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(7680)
                .inputItems(dust,SodiumThiosulfate, 14)
                .inputFluids(Chloroethane.getFluid(1000))
                .inputFluids(Dibromoacrolein.getFluid(1000))
                .outputItems(dust, Salt, 4)
                .outputItems(dust, SodiumBisulfate, 14)
                .outputFluids(Bromohydrothiine.getFluid(1000))
                .save(provider);

        // C4H4S2Br2 + 2Se + 2C4H9Li -> C4H4S2Li2Se2 + 2C4H9Br
        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(30720)
                .inputFluids(Bromohydrothiine.getFluid(1000))
                .inputFluids(ButylLithium.getFluid(2000))
                .inputItems(dust, Selenium, 2)
                .outputFluids(Bromobutane.getFluid(2000))
                .outputItems(Lithiumthiinediselenide, 14)
                .save(provider);

        // C3H6 + C4H8 -> C3H4 + C4H10
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(Propene.getFluid(1000))
                .inputFluids(Butene.getFluid(1000))
                .notConsumable(DehydrogenationCatalyst)
                .outputFluids(Propadiene.getFluid(1000))
                .outputFluids(Butane.getFluid(1000))
                .save(provider);

        // TiCl4 + 2 C3H4 + 2 C2H2 -> 2 HCl + (C5H5)2Cl2Ti
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(7680)
                .inputFluids(TitaniumTetrachloride.getFluid(1000))
                .inputFluids(Propadiene.getFluid(2000))
                .inputFluids(Acetylene.getFluid(2000))
                .notConsumable(ScandiumTriflate)
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .outputItems(TitaniumCyclopentadienyl.getItemStack(23))
                .save(provider);

        // C2F4 + 2C4H4S2Li2Se2 -> C10H8S4Se4 + 4LiF
        BLAST_RECIPES.recipeBuilder().duration(7920).EUt(120).blastFurnaceTemp(3500)
                .inputItems(dust,Lithiumthiinediselenide, 28)
                .inputFluids(Tetrafluoroethylene.getFluid(1000))
                .notConsumable(TitaniumCyclopentadienyl)
                .outputItems(dust, LithiumFluoride, 8)
                .outputItems(BETS.getItemStack(26))
                .save(provider);

        // This is correct
        // > ok
        BLAST_RECIPES.recipeBuilder().duration(20250).EUt(120).blastFurnaceTemp(5000)
                .inputItems(dust,BETS)
                .inputFluids(AmmoniumPerrhenate.getFluid(1000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputItems(BETSPerrhenate)
                .save(provider);

        // C4H9Br + NaOH -> NaBr + C4H10O
        CHEMICAL_RECIPES.recipeBuilder().duration(40).EUt(120)
                .inputFluids(Bromobutane.getFluid(1000))
                .inputItems(dust, SodiumHydroxide, 3)
                .outputItems(SodiumBromide, 2)
                .outputFluids(Butanol.getFluid(1000))
                .save(provider);

        // NaBr -> Na + Br
        ELECTROLYZER_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputItems(dust,SodiumBromide, 2)
                .outputItems(dust, Sodium)
                .outputFluids(Bromine.getFluid(1000))
                .save(provider);

        // 2Fr + C2H2 -> Fr2C2 + 2H
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(480)
                .inputItems(dust, Francium, 2)
                .inputFluids(Acetylene.getFluid(1000))
                .outputItems(FranciumCarbide, 4)
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        // 4B + 3C -> B4C3
        BLAST_RECIPES.recipeBuilder().duration(550).EUt(120).blastFurnaceTemp(4000)
                .inputItems(dust, Boron, 4)
                .inputItems(dust, Carbon, 3)
                .outputItems(BoronCarbide, 7)
                .save(provider);

        // 2Fr2C2 + B4C3 -> Fr4B4C7
        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(1920)
                .inputItems(dust,FranciumCarbide, 8)
                .inputItems(dust,BoronCarbide, 7)
                .outputItems(BoronFranciumCarbide, 15)
                .save(provider);

        // At + H2SO4 -> [At + H2O + SO3]
        MIXER_RECIPES.recipeBuilder().duration(140).EUt(7680)
                .inputItems(dust, Astatine)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(AstatideSolution.getFluid(1000))
                .save(provider);

        // 3[At + H2O + SO3] + Ho + Th + Cn + Fl -> 3H2SO4 + [3At + Ho + Th + Cn + Fl]
        MIXER_RECIPES.recipeBuilder().duration(380).EUt(30720)
                .inputFluids(AstatideSolution.getFluid(3000))
                .inputItems(dust, Holmium)
                .inputItems(dust, Thulium)
                .inputItems(dust, Copernicium)
                .inputItems(dust, MetastableFlerovium)
                .outputFluids(SulfuricAcid.getFluid(3000))
                .outputItems(MixedAstatideSalts, 7)
                .save(provider);

        // Fr4B4C7 + 2[3At + Ho + Th + Cn + Fl] = B4C7Fr4At6Ho2Th2Fl2Cn2
        BLAST_RECIPES.recipeBuilder().duration(15000).EUt(120).blastFurnaceTemp(11300)
                .inputItems(dust,BoronFranciumCarbide, 15)
                .inputItems(dust,MixedAstatideSalts, 14)
                .outputItems(BorocarbideDust, 29)
                .save(provider);

        // 6I + 6[NaOH + H2O] -> NaIO3 + 5NaI + 9H2O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(260).EUt(1920)
                .inputItems(dust, Iodine, 6)
                .inputFluids(SodiumHydroxideSolution.getFluid(6000))
                .outputItems(SodiumIodate, 5)
                .outputItems(SodiumIodide, 10)
                .outputFluids(Water.getFluid(9000))
                .save(provider);

        // 3[Cu + H2SO4] + 6NaOH + NaI + 3SO3 -> NaIO3 + 3Cu + 3Na + 3NaSO4 + 6H2O + 3SO2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(1920)
                .inputFluids(CopperSulfateSolution.getFluid(3000))
                .inputFluids(SulfurTrioxide.getFluid(3000))
                .inputItems(dust,SodiumIodide, 2)
                .inputItems(dust, SodiumHydroxide, 18)
                .outputItems(SodiumIodate, 5)
                .outputItems(dust, Copper, 3)
                .outputItems(dust, Sodium, 3)
                .outputFluids(SodiumSulfateSolution.getFluid(3000))
                .outputFluids(Water.getFluid(6000))
                .outputFluids(SulfurDioxide.getFluid(3000))
                .save(provider);

        // NaIO3 + NaClO -> NaIO4 + NaCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1920)
                .inputItems(dust,SodiumIodate, 5)
                .inputItems(dust,SodiumHypochlorite, 3)
                .outputItems(SodiumPeriodate, 6)
                .outputItems(dust, Salt, 2)
                .save(provider);

        // 3NaIO4 + 4Ru + 8NaOH -> 3NaI + 4Na2RuO4 + 4H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(480)
                .inputItems(dust,SodiumPeriodate, 18)
                .inputItems(dust, Ruthenium, 4)
                .inputItems(dust, SodiumHydroxide, 24)
                .outputItems(SodiumIodide, 6)
                .outputItems(dust, SodiumRuthenate, 28)
                .outputFluids(Water.getFluid(4000))
                .save(provider);

        // Sg + 2 NaOH + 6 F + 2H2O -> 6HF + Na2SgO4
        CHEMICAL_RECIPES.recipeBuilder().duration(820).EUt(30720)
                .inputItems(dust, Seaborgium)
                .inputItems(dust, SodiumHydroxide, 6)
                .inputFluids(Fluorine.getFluid(6000))
                .inputFluids(Water.getFluid(2000))
                .outputFluids(HydrofluoricAcid.getFluid(6000))
                .outputItems(SodiumSeaborgate, 7)
                .save(provider);

        // Sr + 2Cl -> SrCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(120)
                .inputItems(dust, Strontium)
                .inputFluids(Chlorine.getFluid(2000))
                .outputItems(StrontiumChloride, 3)
                .save(provider);

        // Na2O4Ru + Na2SgO4 + 2SrCl2 -> 4NaCl + RuSgSr2O8
        BLAST_RECIPES.recipeBuilder().duration(1360).EUt(120).blastFurnaceTemp(4500)
                .inputItems(dust, SodiumRuthenate, 7)
                .inputItems(dust,SodiumSeaborgate, 5)
                .inputItems(dust,StrontiumChloride, 6)
                .outputItems(dust, Salt, 8)
                .outputItems(StrontiumSuperconductorDust, 12)
                .save(provider);

        // Os + 4O -> OsO4
        ARC_FURNACE_RECIPES.recipeBuilder().duration(520).EUt(4800)
                .inputItems(dust, Osmium)
                .inputFluids(Oxygen.getFluid(4000))
                .outputItems(OsmiumTetroxide, 5)
                .save(provider);

        // NaIO4 + C3H6O -> NaIO3 + CH2O + C2H4O
        CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(7680)
                .notConsumable(OsmiumTetroxide)
                .inputItems(dust,SodiumPeriodate, 6)
                .inputFluids(Acetone.getFluid(1000))
                .outputItems(SodiumIodate, 5)
                .outputFluids(Formaldehyde.getFluid(1000))
                .outputFluids(Acetaldehyde.getFluid(1000))
                .save(provider);

        // C4H10 + 2Br -> C4H9Br + HBr
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(7680)
                .notConsumable(UVA_HALIDE_LAMP)
                .inputFluids(Butane.getFluid(1000))
                .inputFluids(Bromine.getFluid(2000))
                .outputFluids(Bromobutane.getFluid(1000))
                .outputFluids(HydrobromicAcid.getFluid(1000))
                .save(provider);

        // Ir + 2O -> IrO2
        BLAST_RECIPES.recipeBuilder().duration(280).EUt(120).blastFurnaceTemp(700)
                .notConsumable(dust, Salt)
                .inputItems(dust, Iridium)
                .inputFluids(Oxygen.getFluid(2000))
                .outputItems(dust, IridiumDioxide, 3)
                .save(provider);

        // Kr + 2F -> KrF2
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(480)
                .notConsumable(UVA_HALIDE_LAMP)
                .inputFluids(Krypton.getFluid(1000))
                .inputFluids(Fluorine.getFluid(2000))
                .outputFluids(KryptonDifluoride.getFluid(1000))
                .save(provider);

        // Mn + KrF2 -> MnF2 + Kr
        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(480)
                .inputItems(dust, Manganese)
                .inputFluids(KryptonDifluoride.getFluid(1000))
                .outputItems(ManganeseFluoride, 3)
                .outputFluids(Krypton.getFluid(1000))
                .save(provider);

        // MnF2 + O + H2O -> MnO2 + 2HF
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(120)
                .inputItems(dust,ManganeseFluoride, 3)
                .inputFluids(Water.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(dust, Pyrolusite, 3)
                .outputFluids(HydrofluoricAcid.getFluid(2000))
                .save(provider);

        // C6H6O + H2O2 + H2O + 4Cl + 2C2H2O -> C10H10O6 + 4HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(122880)
                .inputFluids(Phenol.getFluid(1000))
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .inputFluids(Chlorine.getFluid(4000))
                .inputFluids(Ethenone.getFluid(2000))
                .outputFluids(PhenylenedioxydiaceticAcid.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(4000))
                .save(provider);

        // NaSCN + HCl + 2CH3CH2NH2 -> NH3 + (C2H5NH)2CS + NaCl
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(30720)
                .inputFluids(SodiumThiocyanate.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(Ethylamine.getFluid(2000))
                .outputFluids(Ammonia.getFluid(1000))
                .outputFluids(Diethylthiourea.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .save(provider);

        // C10H10O6 + 2(C2H5NH)2CS + 2SOCl2 -> 2SO2 + 4HCl + C20H30N4O4S2
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(122880)
                .inputFluids(Diethylthiourea.getFluid(2000))
                .inputFluids(ThionylChloride.getFluid(2000))
                .inputFluids(PhenylenedioxydiaceticAcid.getFluid(1000))
                .outputFluids(SulfurDioxide.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(4000))
                .outputFluids(Isophthaloylbisdiethylthiourea.getFluid(1000))
                .save(provider);

        // Hs + 4Cl -> HsCl4
        BLAST_RECIPES.recipeBuilder().duration(930).EUt(120).blastFurnaceTemp(12000)
                .inputItems(dust, MetastableHassium)
                .inputFluids(Chlorine.getFluid(4000))
                .outputItems(HassiumChloride, 5)
                .save(provider);

        // Re + 5Cl -> ReCl5
        BLAST_RECIPES.recipeBuilder().duration(930).EUt(120).blastFurnaceTemp(12500)
                .inputItems(dust, Rhenium)
                .inputFluids(Chlorine.getFluid(5000))
                .outputItems(RheniumChloride, 6)
                .save(provider);

        // SbF5 + PCl3 + HF -> SbCl3 + HPF6
        CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(7680)
                .inputFluids(AntimonyPentafluoride.getFluid(1000))
                .inputFluids(PhosphorusTrichloride.getFluid(1000))
                .inputFluids(HydrofluoricAcid.getFluid(1000))
                .outputItems(AntimonyTrichloride, 4)
                .outputFluids(FluorophosphoricAcid.getFluid(1000))
                .save(provider);

        // SbCl3 + 3HF -> SbF3 + 3HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(480)
                .inputItems(dust,AntimonyTrichloride, 4)
                .inputFluids(HydrofluoricAcid.getFluid(3000))
                .outputItems(AntimonyTrifluoride, 4)
                .outputFluids(HydrochloricAcid.getFluid(3000))
                .save(provider);

        // 3C20H30N4O4S2 + ReCl5 + HsCl4 + TlCl + HPF6 -> ReHsTlC60PN12H84S6O12F6 + 7HCl + 3Cl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(620).EUt(845000)
                .inputItems(dust,RheniumChloride, 6)
                .inputItems(dust,HassiumChloride, 5)
                .inputItems(dust,ThalliumChloride, 2)
                .inputFluids(Isophthaloylbisdiethylthiourea.getFluid(3000))
                .inputFluids(FluorophosphoricAcid.getFluid(1000))
                .outputItems(RheniumHassiumThalliumIsophtaloylbisdiethylthioureaHexafluorophosphate.getItemStack(125))
                .outputFluids(HydrochloricAcid.getFluid(7000))
                .outputFluids(Chlorine.getFluid(3000))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(270).EUt(250000)
                .inputItems(dust, Naquadah)
                .inputItems(dust, NaquadahEnriched)
                .inputItems(dust, Naquadria)
                .inputItems(dust, Vibranium)
                .inputItems(dust, Adamantium)
                .inputItems(dust, Taranium)
                .inputItems(dust, Trinium)
                .inputItems(dust, Duranium)
                .inputItems(dust, Tritanium)
                .outputItems(Legendarium, 9)
                .save(provider);

        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(520).EUt(445000)
                .inputItems(dust, Cerium)
                .inputItems(dust, Caesium)
                .inputItems(dust, Cobalt, 2)
                .inputItems(dust, Indium, 10)
                .inputFluids(CosmicComputingMix.getFluid(1000))
                .outputItems(ChargedCesiumCeriumCobaltIndium, 14)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(320000)
                .inputFluids(Cycloparaphenylene.getFluid(200))
                .inputFluids(Methane.getFluid(800))
                .inputItems(dust,LanthanumEmbeddedFullerene)
                .notConsumable(plate, Rhenium)
                .outputItems(LanthanumFullereneNanotubes)
                .save(provider);

        // 2La + H2SO4 = La2O3 + H2S + O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Lanthanum, 2)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(LanthanumOxide, 5)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);
    }
}



public class TaraniumChain {
    public static void init(){
        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, Stone, 24)
                .inputFluids(HydrofluoricAcid.getFluid(6000))
                .outputFluids(DirtyHexafluorosilicicAcid.getFluid(3000))
                .duration(40)
                .EUt(100)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(DirtyHexafluorosilicicAcid.getFluid(3000))
                .outputFluids(DiluteHexafluorosilicicAcid.getFluid(3000))
                .outputItems(StoneResidueDust, 12)
                .duration(40)
                .EUt(100)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(DiluteHexafluorosilicicAcid.getFluid(3000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(FluorosilicicAcid.getFluid(1000))
                .duration(160)
                .EUt(200)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,StoneResidueDust, 24)
                .inputFluids(SodiumHydroxideSolution.getFluid(1000))
                .outputItems(UncommonResidues)
                .outputItems(dustSmall, Magnetite)
                .outputFluids(SodiumHydroxideSolution.getFluid(925))
                .outputFluids(RedMud.getFluid(75))
                .duration(40)
                .EUt(100)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(LiquidOxygen.getFluid(2000))
                .inputFluids(LiquidFluorine.getFluid(2000))
                .notConsumable(MICROFOCUS_X_RAY_TUBE)
                .outputFluids(Dioxygendifluoride.getFluid(1000))
                .duration(80)
                .EUt(200)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,UncommonResidues)
                .inputFluids(Dioxygendifluoride.getFluid(1000))
                .outputItems(PartiallyOxidizedResidues)
                .duration(80)
                .EUt(100)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(DistilledWater.getFluid(10000))
                .inputItems(dust,PartiallyOxidizedResidues, 10)
                .outputFluids(OxidizedResidualSolution.getFluid(10000))
                .outputItems(InertResidues)
                .duration(200)
                .EUt(100)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputFluids(OxidizedResidualSolution.getFluid(2000))
                .outputItems(OxidizedResidues)
                .outputItems(HeavyOxidizedResidues)
                .duration(80)
                .EUt(3000)
                .save(provider);

        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,OxidizedResidues, 10)
                .inputFluids(Hydrogen.getFluid(60000))
                .outputItems(MetallicResidues)
                .outputFluids(DiluteHydrofluoricAcid.getFluid(40000))
                .duration(1600)
                .EUt(2000)
                .blastFurnaceTemp(3500)
                .save(provider);

        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,HeavyOxidizedResidues, 10)
                .inputFluids(Hydrogen.getFluid(60000))
                .outputItems(HeavyMetallicResidues)
                .outputFluids(DiluteHydrofluoricAcid.getFluid(40000))
                .duration(1600)
                .EUt(2000)
                .blastFurnaceTemp(3500)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(DiluteHydrofluoricAcid.getFluid(2000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(1000))
                .duration(80)
                .EUt(200)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,MetallicResidues, 10)
                .notConsumable(SEPARATION_ELECTROMAGNET)
                .outputItems(DiamagneticResidues, 3)
                .outputItems(ParamagneticResidues, 3)
                .outputItems(FerromagneticResidues, 3)
                .outputItems(UncommonResidues)
                .duration(80)
                .EUt(8000)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,HeavyMetallicResidues, 10)
                .notConsumable(SEPARATION_ELECTROMAGNET)
                .outputItems(HeavyDiamagneticResidues, 3)
                .outputItems(HeavyParamagneticResidues, 3)
                .outputItems(HeavyFerromagneticResidues, 3)
                .outputItems(ExoticHeavyResidues)
                .duration(80)
                .EUt(8000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,FerromagneticResidues, 6)
                .outputItems(dustSmall, Iron)
                .outputItems(dustSmall, Nickel)
                .outputItems(dustSmall, Cobalt)
                .duration(100)
                .EUt(3000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,DiamagneticResidues, 6)
                .outputItems(dustSmall, Calcium)
                .outputItems(dustSmall, Zinc)
                .outputItems(dustSmall, Copper)
                .outputItems(dustSmall, Gallium)
                .outputItems(dustSmall, Beryllium)
                .outputItems(dustSmall, Tin)
                .duration(100)
                .EUt(3000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,ParamagneticResidues, 6)
                .outputItems(dustSmall, Sodium)
                .outputItems(dustSmall, Potassium)
                .outputItems(dustSmall, Magnesium)
                .outputItems(dustSmall, Titanium)
                .outputItems(dustSmall, Vanadium)
                .outputItems(dustSmall, Manganese)
                .duration(100)
                .EUt(3000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,HeavyParamagneticResidues, 6)
                .outputItems(dustSmall, ThoriumRadioactive.getMaterial())
                .outputItems(dustSmall, UraniumRadioactive.getMaterial())
                .outputItems(dustSmall, Tungsten)
                .outputItems(dustSmall, Hafnium)
                .outputItems(dustSmall, Tantalum)
                .outputItems(dustSmall, Thallium)
                .duration(120)
                .EUt(3000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,HeavyDiamagneticResidues, 6)
                .outputItems(dustSmall, Lead)
                .outputItems(dustSmall, Cadmium)
                .outputItems(dustSmall, Indium)
                .outputItems(dustSmall, Gold)
                .outputItems(dustSmall, Bismuth)
                .outputFluids(Mercury.getFluid(36))
                .duration(120)
                .EUt(3000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust,HeavyFerromagneticResidues, 6)
                .outputItems(dustSmall, Dysprosium)
                .duration(120)
                .EUt(3000)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(DistilledWater.getFluid(2000))
                .inputItems(dust,ExoticHeavyResidues, 16)
                .inputItems(dust, SodiumHydroxide, 3)
                .inputItems(dust,PROTONATED_FULLERENE_SIEVING_MATRIX)
                .outputFluids(SodiumHydroxideSolution.getFluid(1000))
                .outputItems(SATURATED_FULLERENE_SIEVING_MATRIX)
                .duration(40)
                .EUt(2000000)
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,InertResidues, 10)
                .notConsumable(FluoroantimonicAcid.getFluid(0))
                .outputItems(CleanInertResidues, 10)
                .outputItems(dust, NaquadricCompound)
                .duration(320)
                .EUt(200)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Tritium.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(1000))
                .outputFluids(TritiumHydride.getFluid(1000))
                .duration(160)
                .EUt(2000)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .inputFluids(TritiumHydride.getFluid(10000))
                .outputFluids(Helium3Hydride.getFluid(100))
                .outputFluids(TritiumHydride.getFluid(9900))
                .duration(800)
                .EUt(200)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust,CleanInertResidues)
                .inputFluids(Helium3Hydride.getFluid(1000))
                .outputFluids(UltraacidicResidueSolution.getFluid(1000))
                .duration(160)
                .EUt(2000)
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(UltraacidicResidueSolution.getFluid(2000))
                .inputFluids(LiquidOxygen.getFluid(4000))
                .inputFluids(LiquidXenon.getFluid(1000))
                .outputFluids(XenicAcid.getFluid(1000))
                .outputFluids(DustyLiquidHelium3.getFluid(2000))
                .duration(120)
                .EUt(2000)
                .save(provider);

        // 2 H2XeO4 -> 2 Xe + H2O + H2O2 + O3 + 2 O
        ELECTROLYZER_RECIPES.recipeBuilder()
                .inputFluids(XenicAcid.getFluid(2000))
                .outputFluids(Xenon.getFluid(2000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(Ozone.getFluid(1000))
                .outputFluids(HydrogenPeroxide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(2000))
                .duration(120)
                .EUt(500)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(DustyLiquidHelium3.getFluid(1000))
                .outputFluids(TaraniumEnrichedLHelium3.getFluid(100))
                .outputFluids(TaraniumSemidepletedLHelium3.getFluid(300))
                .outputFluids(TaraniumDepletedLHelium3.getFluid(600))
                .duration(400)
                .EUt(3000)
                .save(provider);

        FUSION_RECIPES.recipeBuilder()
                .inputFluids(TaraniumEnrichedLHelium3.getFluid(1000))
                .inputFluids(Helium3.getFluid(1000))
                .outputFluids(TaraniumRichDustyHeliumPlasma.getFluid(3000))
                .duration(160)
                .EUt(7680)
                .EUToStart(480000000)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(TaraniumRichDustyHeliumPlasma.getFluid(3000))
                .notConsumable(SEPARATION_ELECTROMAGNET)
                .outputFluids(TaraniumRichHelium4.getPlasma(500))
                .outputFluids(Hydrogen.getPlasma(2000))
                .outputFluids(TaraniumDepletedHeliumPlasma.getFluid(500))
                .duration(80)
                .EUt(2000)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(Helium3.getPlasma(1000))
                .inputFluids(TaraniumDepletedLHelium3.getFluid(1000))
                .outputFluids(TaraniumDepletedHeliumPlasma.getFluid(2000))
                .duration(160)
                .EUt(2000)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(TaraniumDepletedHeliumPlasma.getFluid(10000))
                .notConsumable(SEPARATION_ELECTROMAGNET)
                .outputFluids(Helium3.getPlasma(10000))
                .outputItems(CleanInertResidues, 2)
                .duration(160)
                .EUt(2000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(TaraniumSemidepletedLHelium3.getFluid(1000))
                .outputFluids(TaraniumEnrichedLHelium3.getFluid(100))
                .outputFluids(TaraniumDepletedLHelium3.getFluid(900))
                .duration(400)
                .EUt(3000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(TaraniumRichHelium4.getFluid(400))
                .outputItems(dust, Taranium)
                .outputFluids(TaraniumPoorLiquidHelium.getFluid(400))
                .duration(20)
                .EUt(8000)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(TaraniumPoorLiquidHelium.getFluid(1000))
                .inputFluids(LiquidHelium3.getFluid(200))
                .outputFluids(TaraniumPoorLiquidHeliumMix.getFluid(1200))
                .duration(80)
                .EUt(8000)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(TaraniumPoorLiquidHeliumMix.getFluid(1200))
                .outputFluids(LiquidHelium.getFluid(1000))
                .outputFluids(DustyLiquidHelium3.getFluid(200))
                .duration(80)
                .EUt(8000)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder()
                .inputFluids(LiquidHelium.getFluid(100))
                .inputFluids(TaraniumRichHelium4.getPlasma(1000))
                .outputFluids(TaraniumRichHelium4.getFluid(1000))
                .outputFluids(Helium.getFluid(100))
                .circuitMeta(1)
                .duration(80)
                .EUt(8000)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder()
                .inputFluids(LiquidHelium.getFluid(100))
                .inputFluids(Hydrogen.getPlasma(1000))
                .outputFluids(Hydrogen.getFluid(1000))
                .outputFluids(Helium.getFluid(100))
                .circuitMeta(1)
                .duration(80)
                .EUt(8000)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(30).EUt(480)
                .inputFluids(Fluorine.getFluid(1000))
                .outputFluids(LiquidFluorine.getFluid(1000))
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(30).EUt(480)
                .inputFluids(Xenon.getFluid(1000))
                .outputFluids(LiquidXenon.getFluid(1000))
                .save(provider);

        FLUID_HEATER_RECIPES.recipeBuilder()
                .inputFluids(Helium3.getFluid(1000))
                .outputFluids(Helium3.getPlasma(1000))
                .circuitMeta(0)
                .duration(60)
                .EUt(8000)
                .save(provider);

    }
}


public class TriniumChain {
    public static void init(){
        //Carborane

        //B(OH)3 + 3 C2H5OH + 4 NaH -> 3 C2H5ONa + NaBH4 + 3 H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .duration(120)
                .EUt(480)
                .inputItems(dust,SodiumHydride, 8)
                .inputFluids(BoricAcid.getFluid(1000))
                .inputFluids(Ethanol.getFluid(3000))
                .notConsumable(SulfuricAcid.getFluid(250))
                .outputItems(SodiumBorohydride, 6)
                .outputItems(SodiumEthoxide.getItemStack(27))
                .outputFluids(Water.getFluid(3000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(150).EUt(125)
                .inputFluids(Diethylether.getFluid(1000))
                .inputFluids(BoronFluoride.getFluid(1000))
                .outputFluids(BoronTrifluorideEtherate.getFluid(1000))
                .save(provider);

        //17 NaBH4 + 20 BF3·(CH2CH3)2O + 4 H2O2 + 2 HF -> 2 NaF + 2 H2O + 2 B10H14 + 2 B(OH)3 + 15 NaBF4 + 20 H2 + 20 (CH2CH3)2O
        //divided by two, and optimal choice as a gate
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(380).EUt(2000)
                .inputItems(dust,SodiumBorohydride.getItemStack(51))
                .inputFluids(HydrofluoricAcid.getFluid(1000))
                .inputFluids(HydrogenPeroxide.getFluid(2000))
                .inputFluids(BoronTrifluorideEtherate.getFluid(10000))
                .outputItems(Decaborane, 24)
                .outputItems(dust, SodiumFluoride, 2)
                .outputItems(SodiumTetrafluoroborate, 45)
                .outputFluids(Water.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(20000))
                .outputFluids(Diethylether.getFluid(10000))
                .save(provider);

        //NaBF4 -> NaF + BF3
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(125)
                .inputItems(dust,SodiumTetrafluoroborate, 6)
                .circuitMeta(0)
                .outputItems(dust, SodiumFluoride, 2)
                .outputFluids(BoronFluoride.getFluid(1000))
                .save(provider);

        //B10H14 + NaCN + CsOH + 2 HCl + 3 CH3OH -> CsB10H12CN(CH3)3Cl + 4 H2O + NaCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(500)
                .inputItems(dust,Decaborane, 24)
                .inputItems(dust,CaesiumHydroxide, 3)
                .inputFluids(SodiumCyanide.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputFluids(Methanol.getFluid(3000))
                .notConsumable(SulfuricAcid.getFluid(250))
                .outputItems(CesiumCarboranePrecusor, 38)
                .outputItems(dust, Salt, 2)
                .outputFluids(Water.getFluid(4000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(165).EUt(125)
                .inputFluids(Dimethylsulfide.getFluid(2000))
                .inputFluids(Diborane.getFluid(1000))
                .outputFluids(BoraneDimethylsulfide.getFluid(2000))
                .save(provider);

        //CsB10H12CN(CH3)3Cl + NaH + BH3.(CH3)2S -> CsCB11H12 + N(CH3)3 + NaCl + H2S + 2 CH4
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(500)
                .inputItems(dust,CesiumCarboranePrecusor, 38)
                .inputItems(dust,SodiumHydride, 2)
                .inputFluids(BoraneDimethylsulfide.getFluid(1000))
                .notConsumable(Tetrahydrofuran.getFluid(250))
                .outputItems(CesiumCarborane.getItemStack(25))
                .outputItems(dust, Salt, 2)
                .outputFluids(Trimethylamine.getFluid(1000))
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(Methane.getFluid(2000))
                .save(provider);

        //2 CsCB11H12 + 2 AgNO3 + 44F + 2I + HCl + (CH3)3SiH -> 2 H(CHB11F11) + 2CsNO3 + 2AgI + 22HF + (CH3)3SiCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(2000)
                .inputItems(dust,CesiumCarborane, 50)
                .inputItems(dust,SilverNitrate, 10)
                .inputItems(dust, Iodine, 2)
                .inputFluids(Fluorine.getFluid(44000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(Trimethylsilane.getFluid(1000))
                .outputItems(Fluorocarborane, 50)
                .outputItems(CaesiumNitrate, 10)
                .outputItems(SilverIodide, 4)
                .outputFluids(HydrofluoricAcid.getFluid(22000))
                .outputFluids(Trimethylchlorosilane.getFluid(1000))
                .save(provider);

        //Ag + 2 HNO3 -> AgNO3 + NO2 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(125)
                .inputItems(dust, Silver)
                .inputFluids(NitricAcid.getFluid(2000))
                .outputItems(SilverNitrate, 5)
                .outputFluids(NitrogenDioxide.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        //Ag2O + 2 HNO3 -> 2 AgNO3 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(125)
                .inputItems(dust, SilverOxide, 3)
                .inputFluids(NitricAcid.getFluid(2000))
                .outputItems(SilverNitrate, 10)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        ELECTROLYZER_RECIPES.recipeBuilder().duration(175).EUt(30)
                .inputItems(dust,CaesiumNitrate, 5)
                .outputItems(dust, Caesium)
                .outputFluids(Nitrogen.getFluid(1000))
                .outputFluids(Oxygen.getFluid(3000))
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(210).EUt(125).blastFurnaceTemp(1100)
                .inputItems(dust,SilverIodide, 4)
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(dust, SilverOxide, 3)
                .outputItems(dust, Iodine, 2)
                .save(provider);

        //Trinium Chain Proper

        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(125)
                .inputItems(dust, SodiumNitrate, 5)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(FumingNitricAcid.getFluid(1000))
                .outputItems(dust, SodiumBisulfate, 7)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(180).EUt(125)
                .inputFluids(FumingNitricAcid.getFluid(1000))
                .outputItems(PureCrystallineNitricAcid, 5)
                .save(provider);

        //2 Ke3Ac2Se4At4 + 8 HNO3 + 8 SO2 + NaClO4 ->  8 SeO2 + 8At + [NaCl + 4 H2O + 2 Ke3Ac2S4(NO3)4 + ?]
        BLAST_RECIPES.recipeBuilder().duration(265).EUt(130500).blastFurnaceTemp(9400)
                .inputItems(dust, Triniite, 16)
                .inputItems(dust,PureCrystallineNitricAcid, 40)
                .inputItems(dust,SodiumPerchlorate, 6)
                .inputFluids(SulfurDioxide.getFluid(8000))
                .outputItems(dust, Astatine, 8)
                .outputItems(SeleniumOxide, 24)
                .outputFluids(NitratedTriniiteSolution.getFluid(4000))
                .save(provider);

        //1/2[NaCl + 4 H2O + 2 Ke3Ac2S4(NO3)4 + ?] + 12 NaOH -> 4 Na2S + Ke3Ac2(OH)12? + [0.5 NaCl + 4 NaNO3 + 2 H2O + ?]
        CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(500)
                .inputItems(dust, SodiumHydroxide, 36)
                .inputFluids(NitratedTriniiteSolution.getFluid(2000))
                .outputItems(ActiniumTriniumHydroxides, 29)
                .outputItems(dust, SodiumSulfide, 12)
                .outputFluids(ResidualTriniiteSolution.getFluid(2000))
                .save(provider);

        //0.5 NaCl + 4 NaNO3 + 2 H2O + ? -> 0.5 NaCl + 4 NaNO3 + 0.75 Nq + 0.5 Nq + 0.444 Nq*
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(190).EUt(8100)
                .inputFluids(ResidualTriniiteSolution.getFluid(2000))
                .outputItems(dust, Salt)
                .outputItems(dust, SodiumNitrate, 20)
                .outputItems(dustSmall, NaquadriaticCompound, 3)
                .outputItems(dustSmall, EnrichedNaquadricCompound, 2)
                .outputItems(dustTiny, NaquadriaticCompound, 4)
                .save(provider);

        // 6 KF + C6H6 + 6 Cl -> C6F6 + 6 KCl + 6 H
        CHEMICAL_RECIPES.recipeBuilder().duration(185).EUt(125)
                .inputItems(dust, PotassiumFluoride, 12)
                .inputFluids(Chlorine.getFluid(6000))
                .inputFluids(Benzene.getFluid(1000))
                .notConsumable(dust, Rhenium)
                .outputFluids(Perfluorobenzene.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(6000))
                .outputItems(dust, RockSalt, 12)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(350).EUt(32750)
                .inputItems(wireFine, CarbonNanotubes,6)
                .inputItems(dust,Fullerene)
                .inputItems(dust,Fluorocarborane.getItemStack(125))
                .inputFluids(Perfluorobenzene.getFluid(2000))
                .outputItems(PROTONATED_FULLERENE_SIEVING_MATRIX)
                .save(provider);

        //C65H70B55F55 + 6 Ra + 2 Ke3Ac2(OH)12? -> 2 Ra3Ac2(OH)12? + Ke6C65H70B55F55
        MIXER_RECIPES.recipeBuilder().duration(210).EUt(262000)
                .inputItems(dust, Radium, 6)
                .inputItems(dust,ActiniumTriniumHydroxides.getItemStack(58))
                .inputItems(dust,PROTONATED_FULLERENE_SIEVING_MATRIX)
                .inputFluids(Water.getFluid(2000))
                .outputItems(SATURATED_FULLERENE_SIEVING_MATRIX)
                .outputFluids(ActiniumRadiumHydroxideSolution.getFluid(2000))
                .save(provider);

        //Ke6C65H70B55F55 + 13 H2SbF7 + 59 KrF2 -> 59 Kr + 13 SbF3 + 6 KeF4 + 32 C2H2 + CF4 + 55 BF3 + 32 HF
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(131000)
                .inputItems(dust,SATURATED_FULLERENE_SIEVING_MATRIX)
                .inputFluids(FluoroantimonicAcid.getFluid(13000))
                .inputFluids(KryptonDifluoride.getFluid(59000))
                .outputItems(AntimonyTrifluoride.getItemStack(52))
                .chancedOutput(ChemicalHelper.get(wireFine, CarbonNanotubes, 6), 9500, 0)
                .outputFluids(Krypton.getFluid(59000))
                .outputFluids(HeavilyFluorinatedTriniumSolution.getFluid(2000))
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder().duration(350).EUt(32760)
                .inputFluids(HeavilyFluorinatedTriniumSolution.getFluid(2000))
                .outputItems(TriniumTetrafluoride, 30)
                .outputFluids(Perfluorobenzene.getFluid(2000))
                .outputFluids(Acetylene.getFluid(32000))
                .outputFluids(BoronFluoride.getFluid(55000))
                .outputFluids(CarbonFluoride.getFluid(1000))
                .outputFluids(HydrofluoricAcid.getFluid(32000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(30)
                .inputItems(dust, Calcium)
                .inputFluids(Fluorine.getFluid(2000))
                .outputItems(dust, Fluorite, 3)
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().duration(40).EUt(30)
                .inputItems(dust, Fluorite)
                .outputFluids(Fluorite.getFluid(GTValues.L))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(160).EUt(30)
                .inputItems(dust, Calcium)
                .inputFluids(Fluorite.getFluid(432))
                .outputFluids(MoltenCalciumSalts.getFluid(1000))
                .save(provider);

        ELECTROLYZER_RECIPES.recipeBuilder().duration(200).EUt(2000)
                .inputItems(dust,TriniumTetrafluoride, 5)
                .inputFluids(MoltenCalciumSalts.getFluid(1000))
                .outputItems(dust, Trinium)
                .outputItems(dust, Calcium, 2)
                .outputFluids(Fluorine.getFluid(6000))
                .save(provider);

        //QoL to hook up the acetylene output into the fullerene chain

        //3 C2H2 -> C6H6
        FLUID_HEATER_RECIPES.recipeBuilder().duration(190).EUt(500)
                .inputFluids(Acetylene.getFluid(3000))
                .notConsumable(ALUMINO_SILICATE_GLASS_TUBE)
                .outputFluids(Benzene.getFluid(1000))
                .save(provider);

        //C6H6 + 2 C2H2 -> C10H8 + 2 H
        CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(500)
                .inputFluids(Benzene.getFluid(1000))
                .inputFluids(Acetylene.getFluid(2000))
                .notConsumable(UVA_HALIDE_LAMP)
                .outputFluids(Naphthalene.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(2000))
                .save(provider);

        //Actinium Side

        //C2H2O + HCl -> C2H3OCl
        CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(125)
                .inputFluids(Ethenone.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(AcetylChloride.getFluid(1000))
                .save(provider);

        //C2H5OH + C2H2O + 3 HF -> C4H5F3O2 + 6 H
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(500)
                .inputFluids(Ethanol.getFluid(1000))
                .inputFluids(AcetylChloride.getFluid(1000))
                .inputFluids(HydrofluoricAcid.getFluid(3000))
                .outputFluids(EthylTrifluoroacetate.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(6000))
                .outputFluids(HydrochloricAcid.getFluid(1000))
                .save(provider);

        BLAST_RECIPES.recipeBuilder().duration(190).EUt(500).blastFurnaceTemp(900)
                .inputItems(dust, Phosphorus, 4)
                .inputItems(dust, Sulfur, 10)
                .outputItems(PhosphorousPentasulfide, 14)
                .save(provider);

        //P4S10 + 10 C4H6O2 + 10 C2H3OCl -> P4O10 + 10 C6H6SO + 10 [HCl + H2O]
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(500)
                .inputItems(dust,PhosphorousPentasulfide, 7)
                .inputFluids(Succinaldehyde.getFluid(5000))
                .inputFluids(AcetylChloride.getFluid(5000))
                .outputFluids(Acetothienone.getFluid(5000))
                .outputFluids(DilutedHydrochloricAcid.getFluid(10000))
                .outputItems(dust, PhosphorousPentoxide, 7)
                .save(provider);

        //C2H5ONa + C6H6SO + C4H5F3O2 + HCl -> NaCl + 2 C2H5OH + C8H5F3O2S
        CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(1000)
                .inputItems(dust,SodiumEthoxide, 9)
                .inputFluids(EthylTrifluoroacetate.getFluid(1000))
                .inputFluids(Acetothienone.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(TheonylTrifluoroacetate.getFluid(1000))
                .outputFluids(Ethanol.getFluid(2000))
                .outputItems(dust, Salt, 2)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(290).EUt(4100)
                .inputFluids(ActiniumRadiumHydroxideSolution.getFluid(1000))
                .inputFluids(NitricAcid.getFluid(12000))
                .outputFluids(ActiniumRadiumNitrateSolution.getFluid(13000))
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder().duration(240).EUt(32700)
                .inputFluids(ActiniumRadiumNitrateSolution.getFluid(13000))
                .notConsumable(TheonylTrifluoroacetate.getFluid(500))
                .outputItems(ActiniumNitrate.getItemStack(26))
                .outputItems(RadiumNitrate.getItemStack(27))
                .outputItems(dustSmall, Thorium)
                .outputItems(dustSmall, Protactinium.getMaterial())
                .outputItems(dustSmall, Francium)
                .outputItems(dustSmall, Radium)
                .outputFluids(Water.getFluid(13000))
                .save(provider);

        //Ac(NO3)3 -> Ac + 3 N + 9 O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(210).EUt(500)
                .inputItems(dust,ActiniumNitrate, 13)
                .outputItems(dust, Actinium)
                .outputFluids(Nitrogen.getFluid(3000))
                .outputFluids(Oxygen.getFluid(9000))
                .save(provider);

        //Ra(NO3)2 -> Ra + 2 N + 6 O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(160).EUt(500)
                .inputItems(dust,RadiumNitrate, 9)
                .outputItems(dust, Radium)
                .outputFluids(Nitrogen.getFluid(2000))
                .outputFluids(Oxygen.getFluid(6000))
                .save(provider);
    }
}



public class TungstenChain {

        public static void init(Consumer<FinishedRecipe> provider) {

           MIXER_RECIPES.recipeBuilder()
                    .inputItems(dust, Scheelite, 7)
                    .inputItems(dust, SodiumHydroxide, 6)
                    .inputFluids(HydrogenPeroxide.getFluid(1000))
                    .outputItems(CalciumHydroxide, 10)
                    .outputFluids(SodiumTungstate.getFluid(1000))
                    .EUt(480)
                    .duration(110)
                    .save(provider);

            // WLi2O4 + 2NaOH -> 2LiOH + Na2WO4
            MIXER_RECIPES.recipeBuilder()
                    .inputItems(dust, Tungstate, 7)
                    .inputItems(dust, SodiumHydroxide, 6)
                    .outputItems(LithiumHydroxide, 6)
                    .outputFluids(SodiumTungstate.getFluid(1000))
                    .EUt(480)
                    .duration(160)
                    .save(provider);

            // LiOH + H2O -> LiOH(H2O)
            MIXER_RECIPES.recipeBuilder()
                    .inputFluids(Water.getFluid(1000))
                    .inputItems(dust,LithiumHydroxide, 3)
                    .outputFluids(LithiumHydroxideSolution.getFluid(1000))
                    .EUt(30)
                    .duration(60)
                    .save(provider);

            // CaCl2 + Na2WO4 + 2H2O -> WCaO4 + 2NaCl(H2O)
            CHEMICAL_RECIPES.recipeBuilder()
                    .inputItems(dust, CalciumChloride, 3)
                    .inputFluids(SodiumTungstate.getFluid(1000))
                    .inputFluids(Water.getFluid(2000))
                    .outputItems(dust, CalciumTungstate, 6)
                    .outputFluids(SaltWater.getFluid(2000))
                    .EUt(480)
                    .duration(60)
                    .save(provider);

            CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(80).EUt(30)
                    .circuitMeta(0)
                    .inputFluids(SaltWater.getFluid(1000))
                    .outputItems(dust, Salt, 2)
                    .save(provider);

            // WCaO4 + 2H2O -> H2WO4 + Ca(OH)2
            LARGE_CHEMICAL_RECIPES.recipeBuilder()
                    .inputItems(dust, CalciumTungstate, 6)
                    .inputFluids(Water.getFluid(2000))
                    .outputItems(dust, TungsticAcid, 7)
                    .outputItems(CalciumHydroxide, 5)
                    .EUt(480)
                    .duration(150)
                    .save(provider);

            // H2WO4 -> WO3 + H2O (H2O lost to dehydrator)
            CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                    .inputItems(dust, TungsticAcid, 7)
                    .outputItems(dust, TungstenTrioxide, 4)
                    .EUt(120)
                    .duration(150)
                    .save(provider);

            // WO3 + 6H -> W + 3H2O
            CHEMICAL_RECIPES.recipeBuilder()
                    .inputItems(dust, TungstenTrioxide, 4)
                    .inputFluids(Hydrogen.getFluid(6000))
                    .outputItems(dust, Tungsten)
                    .outputFluids(Water.getFluid(3000))
                    .EUt(1920)
                    .duration(65)
                    .save(provider);

            // W + 6Cl -> WCl6
            CHEMICAL_RECIPES.recipeBuilder()
                    .inputItems(dust, Tungsten)
                    .inputFluids(Chlorine.getFluid(6000))
                    .outputItems(dust, TungstenHexachloride, 7)
                    .duration(120)
                    .EUt(120)
                    .save(provider);

            // WCl6 + CH4 + 2H -> WC + 6HCl
            CHEMICAL_RECIPES.recipeBuilder()
                    .inputItems(dust, TungstenHexachloride, 7)
                    .inputFluids(Methane.getFluid(1000))
                    .inputFluids(Hydrogen.getFluid(2000))
                    .outputItems(dust, TungstenCarbide, 2)
                    .outputFluids(HydrochloricAcid.getFluid(6000))
                    .EUt(480)
                    .duration(100)
                    .save(provider);
        }
    }



public class UHVMaterials {
        public static void init(Consumer<FinishedRecipe> provider) {

        ASSEMBLER_RECIPES.recipeBuilder()
                .inputItems(dust, Naquadria)
                .inputItems(dust,GELLED_TOLUENE, 2)
                .inputItems(plate, Uranium238Isotope.getMaterial(), 1)
                .inputItems(bolt, Osmium, 1)
                .inputItems(bolt, Titanium, 4)
                .inputItems(dust,HexanitroHexaazaisowurtzitane)
                .inputFluids(Glyceryl.getFluid(1000))
                .outputItems(GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.NAQUADRIA_CHARGE))
                .EUt(1966080)
                .duration(100)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder()
                .inputItems(ingot, Rhenium)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.NAQUADRIA_CHARGE))
                .outputFluids(ElectronDegenerateRheniumPlasma.getFluid(1000))
                .EUt(1966080)
                .duration(20)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder()
                .inputItems(plateDense, Rhenium)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.NAQUADRIA_CHARGE))
                .outputFluids(ElectronDegenerateRheniumPlasma.getFluid(10000))
                .EUt(1966080 * 4)
                .duration(100)
                .save(provider);

        FLUID_CANNER_RECIPES.recipeBuilder()
                .inputItems(dust,PLASMA_CONTAINMENT_CELL)
                .inputFluids(ElectronDegenerateRheniumPlasma.getFluid(1000))
                .outputItems(RHENIUM_PLASMA_CONTAINMENT_CELL)
                .EUt(30720)
                .duration(20)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder()
                .inputItems(dust,RHENIUM_PLASMA_CONTAINMENT_CELL)
                .inputFluids(LiquidHelium.getFluid(16000))
                .outputFluids(Helium.getFluid(16000))
                .notConsumable(PLATE_FIELD_SHAPE)
                .outputItems(DEGENERATE_RHENIUM_PLATE)
                .outputItems(PLASMA_CONTAINMENT_CELL)
                .EUt(122880)
                .duration(250)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder()
                .inputFluids(Helium.getFluid(5000))
                .outputFluids(LiquidHelium.getFluid(5000))
                .EUt(7680)
                .duration(20)
                .save(provider);
      
        OrePrefix plateB = plate;
        if (GAConfig.GT6.addCurvedPlates) {
            plateB = plateCurved;
        }
      
        ASSEMBLY_LINE_RECIPES.recipeBuilder()
                .inputItems(stickLong, NeodymiumMagnetic, 2)
                .inputItems(wireGtSingle, UVSuperconductor, 16)
                .inputItems(pipeLarge, Ultimet, 4)
                .inputItems(plateB, NaquadahAlloy, 8)
                .inputFluids(Titanium.getFluid(2592))
                .inputFluids(NaquadahEnriched.getFluid(1584))
                .outputItems(PLASMA_CONTAINMENT_CELL)
                .EUt(983040)
                .duration(50)
                .save(provider);

        MACERATOR_RECIPES.recipeBuilder()
                .inputItems(dust,DEGENERATE_RHENIUM_PLATE)
                .outputItems(DEGENERATE_RHENIUM_DUST, 4)
                .duration(100)
                .EUt(62_914_560)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder()
                .inputItems(plate, Mendelevium.getMaterial())
                .inputItems(dust,GELLED_TOLUENE, 4)
                .inputItems(stickLong, NaquadriaticTaranium)
                .inputItems(dust, Taranium)
                .inputItems(plate, Tritanium)
                .inputItems(dust,DEGENERATE_RHENIUM_DUST)
                .inputFluids(Glyceryl.getFluid(2500))
                .outputItems(GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.TARANIUM_CHARGE))
                .EUt(7_864_320)
                .duration(20)
                .save(provider);

        BLAST_ALLOY_RECIPES.recipeBuilder()
                .inputItems(dust, Seaborgium)
                .inputItems(dust, Bohrium)
                .inputItems(dust, Rutherfordium)
                .inputItems(dust, Dubnium)
                .circuitMeta(1)
                .outputFluids(SuperheavyMix.getFluid(4000))
                .EUt(25_000_000)
                .duration(40)
                .blastFurnaceTemp(11000)
                .save(provider);

        FLUID_SOLIDFICATION_RECIPES.recipeBuilder()
                .notConsumable(MetaItems.SHAPE_MOLD_BLOCK)
                .inputFluids(SuperheavyMix.getFluid(1000))
                .outputItems(GAMetaBlocks.SIMPLE_BLOCK.getItemVariant(GASimpleBlock.BlockType.SUPERHEAVY_BLOCK))
                .EUt(100000000)
                .duration(40)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder()
                .inputItems(dust,GAMetaBlocks.SIMPLE_BLOCK.getItemVariant(GASimpleBlock.BlockType.SUPERHEAVY_BLOCK))
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.TARANIUM_CHARGE))
                .outputFluids(NeutronPlasma.getFluid(1000))
                .EUt(100000000)
                .duration(10)
                .save(provider);

        FLUID_CANNER_RECIPES.recipeBuilder()
                .inputItems(dust,PLASMA_CONTAINMENT_CELL)
                .inputFluids(NeutronPlasma.getFluid(1000))
                .outputItems(NEUTRON_PLASMA_CONTAINMENT_CELL)
                .EUt(25000000)
                .duration(80)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder()
                .inputItems(dust,NEUTRON_PLASMA_CONTAINMENT_CELL)
                .inputFluids(LiquidHelium.getFluid(32000))
                .outputFluids(Helium.getFluid(32000))
                .notConsumable(INGOT_FIELD_SHAPE)
                .outputItems(ingot, Neutronium)
                .outputItems(PLASMA_CONTAINMENT_CELL)
                .EUt(10000000)
                .duration(500)
                .save(provider);
    }
}


public class UltimateMaterials {
        public static void init(Consumer<FinishedRecipe> provider) {

        LARGE_MIXER_RECIPES.recipeBuilder().duration(270).EUt(250000)
                .inputItems(dust, Ruthenium)
                .inputItems(dust, Rhodium)
                .inputItems(dust, Palladium)
                .inputItems(dust, Silver)
                .inputItems(dust, Rhenium)
                .inputItems(dust, Osmium)
                .inputItems(dust, Iridium)
                .inputItems(dust, Platinum)
                .inputItems(dust, Gold)
                .outputItems(PreciousMetals, 9)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(210).EUt(250000)
                .inputItems(dust, Zirconium)
                .inputItems(dust, Hafnium)
                .inputItems(dust, Niobium)
                .inputItems(dust, Tantalum)
                .inputItems(dust, Molybdenum)
                .inputItems(dust, Tungsten)
                .inputItems(dust, Technetium)
                .outputItems(RefractoryMetals, 7)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(240).EUt(250000)
                .inputItems(dust, Titanium)
                .inputItems(dust, Vanadium)
                .inputItems(dust, Manganese)
                .inputItems(dust, Chrome)
                .inputItems(dust, Iron)
                .inputItems(dust, Nickel)
                .inputItems(dust, Cobalt)
                .inputItems(dust, Copper)
                .outputItems(LightTranstionMetals, 8)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(420).EUt(250000)
                .inputItems(dust, Beryllium)
                .inputItems(dust, Magnesium)
                .inputItems(dust, Calcium)
                .inputItems(dust, Strontium)
                .inputItems(dust, Barium)
                .inputItems(dust, Radium)
                .inputItems(dust, Scandium)
                .inputItems(dust, Yttrium)
                .inputFluids(Lithium.getFluid(144))
                .inputFluids(Sodium.getFluid(144))
                .inputFluids(Potassium.getFluid(144))
                .inputFluids(Rubidium.getFluid(144))
                .inputFluids(Caesium.getFluid(144))
                .inputFluids(Francium.getFluid(144))
                .outputItems(Alkalis, 14)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(420).EUt(250000)
                .inputItems(dust, Zinc)
                .inputItems(dust, Cadmium)
                .inputItems(dust, Aluminium)
                .inputItems(dust, Silicon)
                .inputItems(dust, Germanium)
                .inputItems(dust, Antimony)
                .inputItems(dust, Thallium)
                .inputItems(dust, Lead)
                .inputFluids(Mercury.getFluid(144))
                .inputFluids(Tin.getFluid(144))
                .inputFluids(Gallium.getFluid(144))
                .inputFluids(Indium.getFluid(144))
                .inputFluids(Bismuth.getFluid(144))
                .inputFluids(Polonium.getFluid(144))
                .outputItems(PostTransitionMetals, 14)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(450).EUt(250000)
                .inputItems(dust, Samarium)
                .inputItems(dust, Gadolinium)
                .inputItems(dust, Terbium)
                .inputItems(dust, Thulium)
                .inputItems(dust, Holmium)
                .inputItems(dust, Lutetium)
                .inputItems(dust, Promethium)
                .inputItems(dust, Erbium)
                .inputItems(dust, Dysprosium)
                .inputFluids(Lanthanum.getFluid(144))
                .inputFluids(Cerium.getFluid(144))
                .inputFluids(Praseodymium.getFluid(144))
                .inputFluids(Neodymium.getFluid(144))
                .inputFluids(Europium.getFluid(144))
                .inputFluids(Ytterbium.getFluid(144))
                .outputItems(Lanthanoids, 15)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(390).EUt(250000)
                .inputItems(dust, Actinium)
                .inputItems(dust, Thorium)
                .inputItems(dust, Protactinium.getMaterial())
                .inputItems(dust, UraniumRadioactive.getMaterial())
                .inputItems(dust, Americium)
                .inputItems(dust, Curium.getMaterial())
                .inputItems(dust, Berkelium.getMaterial())
                .inputItems(dust, Fermium.getMaterial())
                .inputItems(dust, Californium.getMaterial())
                .inputFluids(Neptunium.getMaterial().getFluid(144))
                .inputFluids(Plutonium.getFluid(144))
                .inputFluids(Mendelevium.getMaterial().getFluid(144))
                .inputFluids(Einsteinium.getMaterial().getFluid(144))
                .outputItems(Actinoids, 13)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(450).EUt(250000)
                .inputItems(dust, Boron)
                .inputItems(dust, Carbon)
                .inputItems(dust, Phosphorus)
                .inputItems(dust, Sulfur)
                .inputItems(dust, Arsenic)
                .inputItems(dust, Selenium)
                .inputItems(dust, Tellurium)
                .inputItems(dust, Iodine)
                .inputItems(dust, Astatine)
                .inputFluids(Oxygen.getFluid(1000))
                .inputFluids(Nitrogen.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(1000))
                .inputFluids(Fluorine.getFluid(1000))
                .inputFluids(Chlorine.getFluid(1000))
                .inputFluids(Bromine.getFluid(1000))
                .outputFluids(NonMetals.getFluid(15000))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(180).EUt(250000)
                .inputFluids(Helium.getFluid(1000))
                .inputFluids(Neon.getFluid(1000))
                .inputFluids(Argon.getFluid(1000))
                .inputFluids(Krypton.getFluid(1000))
                .inputFluids(Xenon.getFluid(1000))
                .inputFluids(Radon.getFluid(1000))
                .outputFluids(GAMaterials.NobleGases.getFluid(6000))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(360).EUt(5400000)
                .inputItems(dust, SuperheavyLAlloy, 7)
                .inputItems(dust, SuperheavyHAlloy, 7)
                .inputItems(dust,Alkalis, 14)
                .inputItems(dust,RefractoryMetals, 7)
                .inputItems(dust,LightTranstionMetals, 8)
                .inputItems(dust,PreciousMetals, 9)
                .inputItems(dust,PostTransitionMetals, 14)
                .inputItems(dust,Lanthanoids, 15)
                .inputItems(dust,Actinoids, 13)
                .inputFluids(NonMetals.getFluid(15000))
                .inputFluids(GAMaterials.NobleGases.getFluid(6000))
                .outputItems(dust, Periodicium, 115)
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(20).EUt(30720)
                .inputFluids(Helium3.getFluid(5000))
                .outputFluids(LiquidHelium3.getFluid(5000))
                .save(provider);

        VACUUM_RECIPES.recipeBuilder().duration(20).EUt(480)
                .inputFluids(Nitrogen.getFluid(5000))
                .outputFluids(LiquidNitrogen.getFluid(5000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(60).EUt(7680)
                .inputFluids(LiquidHelium.getFluid(1000))
                .inputFluids(LiquidHelium3.getFluid(1000))
                .outputFluids(LiquidEnrichedHelium.getFluid(2000))
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(725000)
                .inputFluids(LiquidEnrichedHelium.getFluid(2000))
                .inputFluids(LiquidNitrogen.getFluid(1000))
                .outputFluids(SuperfluidHelium.getFluid(1000))
                .outputFluids(LiquidHelium3.getFluid(1000))
                .outputFluids(Nitrogen.getFluid(1000))
                .save(provider);

        OrePrefix plateB = plate;
        if (GAConfig.GT6.addCurvedPlates) {
            plateB = plateCurved;
        }

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(150).EUt(15000000)
                .inputItems(frameGt, QCDMatter)
                .inputItems(dust,GAMetaBlocks.FUSION_CASING.getItemVariant(GAFusionCasing.CasingType.ADV_FUSION_COIL_3))
                .inputItems(dust,ELECTRIC_PUMP_UMV, 2)
                .inputItems(circuit, UIV)
                .inputItems(pipeLarge, Neutronium, 4)
                .inputItems(plateB, Neutronium, 12)
                .inputFluids(ProtoAdamantium.getFluid(2592))
                .inputFluids(Taranium.getFluid(1584))
                .outputItems(EXTREMELY_DURABLE_PLASMA_CELL)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(10).EUt(125000000)
                .inputItems(block, Neutronium, 5)
                .inputItems(block, HeavyQuarkDegenerateMatter, 5)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.QCD_CHARGE))
                .inputFluids(HeavyLeptonMix.getFluid(6000))
                .inputFluids(Gluons.getFluid(6000))
                .inputFluids(Periodicium.getFluid(2736))
                .outputFluids(DenseNeutronPlasma.getFluid(18000))
                .save(provider);

        FLUID_CANNER_RECIPES.recipeBuilder().duration(90).EUt(62500000)
                .inputItems(dust,EXTREMELY_DURABLE_PLASMA_CELL)
                .inputFluids(DenseNeutronPlasma.getFluid(1000))
                .outputItems(DENSE_NEUTRON_PLASMA_CELL)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(10).EUt(125000000)
                .inputItems(dust,DENSE_NEUTRON_PLASMA_CELL)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.QCD_CHARGE,2))
                .outputItems(COSMIC_NEUTRON_PLASMA_CELL)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder().duration(500).EUt(10000000)
                .inputItems(dust,COSMIC_NEUTRON_PLASMA_CELL)
                .inputFluids(SuperfluidHelium.getFluid(48000))
                .outputFluids(Helium.getFluid(48000))
                .notConsumable(INGOT_FIELD_SHAPE)
                .outputItems(ingot, CosmicNeutronium)
                .outputItems(EXTREMELY_DURABLE_PLASMA_CELL)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(320000)
                .inputFluids(Cycloparaphenylene.getFluid(200))
                .inputFluids(Methane.getFluid(800))
                .inputItems(dust, Neutronium)
                .notConsumable(plate, Rhenium)
                .outputFluids(NeutroniumDopedNanotubes.getFluid(1000))
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(350).EUt(84500000)
                .inputItems(plate, CarbonNanotubes, 3)
                .inputItems(plate, CosmicNeutronium, 3)
                .inputItems(plate, FullerenePolymerMatrix, 3)
                .inputFluids(NeutroniumDopedNanotubes.getFluid(2000))
                .outputItems(HIGHLY_DENSE_POLYMER_PLATE)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(10).EUt(100000000)
                .inputItems(dust,HIGHLY_DENSE_POLYMER_PLATE)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.QCD_CHARGE))
                .outputFluids(CosmicMeshPlasma.getFluid(1000))
                .save(provider);

        FLUID_CANNER_RECIPES.recipeBuilder().duration(90).EUt(125000000)
                .inputItems(dust,TIME_DILATION_CONTAINMENT_UNIT)
                .inputFluids(CosmicMeshPlasma.getFluid(1000))
                .outputItems(COSMIC_MESH_CONTAINMENT_UNIT)
                .save(provider);

        MetaItem<?>.MetaValueItem[] fieldShapes = { PLATE_FIELD_SHAPE, INGOT_FIELD_SHAPE, WIRE_FIELD_SHAPE, SPHERE_FIELD_SHAPE, ROD_FIELD_SHAPE };
        MetaItem<?>.MetaValueItem[] molds = { SHAPE_MOLD_PLATE, SHAPE_MOLD_INGOT, SHAPE_EXTRUDER_WIRE, SHAPE_MOLD_BALL, SHAPE_EXTRUDER_ROD };
        for (int i = 0; i < fieldShapes.length; i++) {
            ASSEMBLER_RECIPES.recipeBuilder().duration(340).EUt(122880)
                    .inputItems(dust,molds[i])
                    .inputItems(plate, Polybenzimidazole, 2)
                    .inputItems(plate, Polyetheretherketone, 2)
                    .inputItems(circuit, MarkerMaterials.Tier.Master)
                    .outputItems(fieldShapes[i])
                    .save(provider);
        }

        PLASMA_CONDENSER_RECIPES.recipeBuilder().duration(500).EUt(10000000)
                .inputItems(dust,COSMIC_MESH_CONTAINMENT_UNIT)
                .inputFluids(SuperfluidHelium.getFluid(24000))
                .outputFluids(Helium.getFluid(24000))
                .notConsumable(PLATE_FIELD_SHAPE)
                .outputItems(COSMIC_MESH)
                .outputItems(TIME_DILATION_CONTAINMENT_UNIT)
                .save(provider);

        PLASMA_CONDENSER_RECIPES.recipeBuilder().duration(500).EUt(10000000)
                .inputItems(dust,COSMIC_MESH_CONTAINMENT_UNIT)
                .inputFluids(SuperfluidHelium.getFluid(24000))
                .inputFluids(Xenon.getFluid(500))
                .outputFluids(Helium.getFluid(24000))
                .notConsumable(WIRE_FIELD_SHAPE)
                .outputItems(COSMIC_FABRIC)
                .outputItems(TIME_DILATION_CONTAINMENT_UNIT)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(10).EUt(10000000)
                .inputItems(dust,COSMIC_FABRIC)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.QCD_CHARGE))
                .outputFluids(CosmicMeshPlasma.getFluid(1000))
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(10).EUt(10000000)
                .inputItems(dust,COSMIC_MESH)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.QCD_CHARGE))
                .outputFluids(CosmicMeshPlasma.getFluid(1000))
                .save(provider);
    }
}



public class UraniumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Pitchblende Processing was removed to save 2 steps
        // and was simplified to just electrolysis into Uraninite.

        // UO2 + 2 Cl + H2O -> [UO2Cl2 + H2O + ?]
        CHEMICAL_RECIPES.recipeBuilder().duration(50).EUt(120)
                .inputItems(dust, Uraninite, 3)
                .inputFluids(Chlorine.getFluid(2000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(UranylChlorideSolution.getFluid(1000))
                .save(provider);

        // [UO2Cl2 + H2O + ?] + 2HNO3 -> [UO2(NO3)2 + H2O + ?] + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(UranylChlorideSolution.getFluid(1000))
                .inputFluids(NitricAcid.getFluid(2000))
                .outputFluids(UranylNitrateSolution.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // [UO2(NO3)2 + H2O + ?] + H2SO4 -> [UO2(NO3)2 + H2O] + [? + SO4]
        CHEMICAL_RECIPES.recipeBuilder().duration(40).EUt(120)
                .inputFluids(UranylNitrateSolution.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(PurifiedUranylNitrate.getFluid(1000))
                .outputFluids(UraniumSulfateWasteSolution.getFluid(1000))
                .save(provider);

        // [? + SO4] -> Pb + 0.111Ra + 0.111Sr + H2SO4
        // Lead is okay here because of uranium decay
        ELECTROLYZER_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputFluids(UraniumSulfateWasteSolution.getFluid(1000))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(dust, Lead)
                .outputItems(dustTiny, Radium)
                .outputItems(dustTiny, Strontium)
                .outputItems(dustTiny, Barium)
                .save(provider);

        // 2[UO2(NO3)2 + H2O] + 4H2O + 8C -> (NH4)2U2O7 + 2HNO3 + 8CO
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputItems(dust, Carbon, 8)
                .inputFluids(PurifiedUranylNitrate.getFluid(2000))
                .inputFluids(Water.getFluid(4000))
                .outputFluids(UraniumDiuranate.getFluid(1000))
                .outputFluids(NitricAcid.getFluid(2000))
                .outputFluids(CarbonMonoxide.getFluid(8000))
                .save(provider);

        // CO2 + 2KOH -> K2CO3 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(30)
                .inputFluids(PotassiumHydroxide.getFluid(2000))
                .inputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(PotassiumCarbonate, 6)
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // (NH4)2U2O7 + 2K2CO3 -> 2UO2(CO3) + 2K2O + 2NH3 + H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(120)
                .inputFluids(UraniumDiuranate.getFluid(1000))
                .inputItems(dust,PotassiumCarbonate, 12)
                .outputItems(PotassiumUranylTricarbonate, 5)
                .outputFluids(Ammonia.getFluid(2000))
                .outputFluids(Water.getFluid(1000))
                .outputItems(dust, Potash, 6)
                .save(provider);

        // UO2(CO3) + [H2O2 + H2SO4] -> [UO3•H2O2 + ThO2] + [? + C + H2SO4]
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(480)
                .inputItems(dust,PotassiumUranylTricarbonate, 5)
                .inputFluids(PiranhaSolution.getFluid(2000))
                .outputFluids(UraniumRefinementWasteSolution.getFluid(1000))
                .outputItems(UraniumPeroxideThoriumOxide, 8)
                .save(provider);

        // [? + C + H2SO4] -> H2SO4 + CsOH + MoO3 + V2O5 (carbon voided, multiplied by 20 for game balance)
        ELECTROLYZER_RECIPES.recipeBuilder().duration(200).EUt(1920)
                .inputFluids(UraniumRefinementWasteSolution.getFluid(20000))
                .outputFluids(SulfuricAcid.getFluid(20000))
                .outputItems(CaesiumHydroxide, 3)
                .outputItems(MolybdenumTrioxide, 4)
                .outputItems(VanadiumOxide, 7)
                .save(provider);

        // KOH -> K + O + H
        ELECTROLYZER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(PotassiumHydroxide.getFluid(1000))
                .outputItems(dust, Potassium)
                .outputFluids(Hydrogen.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // CsOH -> Cs + O + H
        ELECTROLYZER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust,CaesiumHydroxide, 3)
                .outputItems(dust, Caesium)
                .outputFluids(Hydrogen.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // [UO3•H2O2 + ThO2] -> [UO2 + ThO2] + H2O + 2O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputItems(dust,UraniumPeroxideThoriumOxide, 8)
                .outputItems(UraniumThoriumOxide, 6)
                .outputFluids(HydrogenPeroxide.getFluid(1000))
                .outputFluids(Oxygen.getFluid(1000))
                .save(provider);

        // [UO2 + ThO2] + H2SO4 + S -> [UO2SO4 + ThO2] + H2S
        CHEMICAL_RECIPES.recipeBuilder().duration(110).EUt(120)
                .inputItems(dust,UraniumThoriumOxide, 6)
                .inputItems(dust, Sulfur)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(UranylThoriumSulfate, 11)
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .save(provider);

        // [UO2SO4 + ThO2] + 6HNO3 -> [UO2(NO3)2 + Th(NO3)4] + 2H2O + H2SO4
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust,UranylThoriumSulfate, 11)
                .inputFluids(NitricAcid.getFluid(6000))
                .outputItems(UranylThoriumNitrate.getItemStack(26))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .save(provider);

        // [UO2(NO3)2 + Th(NO3)4] + 2H -> [UO2 + Th(NO3)4] + 2HNO3
        BLAST_RECIPES.recipeBuilder().duration(200).EUt(120).blastFurnaceTemp(500)
                .inputItems(dust,UranylThoriumNitrate.getItemStack(26))
                .inputFluids(Hydrogen.getFluid(2000))
                .outputItems(UraniumOxideThoriumNitrate, 18)
                .outputFluids(NitricAcid.getFluid(2000))
                .save(provider);

        // [UO2 + Th(NO3)4] + H2O -> UO2 + [H2O + Th(NO3)4]
        MIXER_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputItems(dust,UraniumOxideThoriumNitrate, 18)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputItems(dioxide, UraniumRadioactive.getMaterial(), 3)
                .outputFluids(ThoriumNitrateSolution.getFluid(1000))
                .save(provider);

        // [H2O + Th(NO3)4] + 2Na -> ThO + 2NaNO3 + 2HNO3
        ELECTROLYZER_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Sodium, 2)
                .inputFluids(ThoriumNitrateSolution.getFluid(1000))
                .outputItems(oxide, Thorium, 2)
                .outputItems(dust, SodiumNitrate, 10)
                .outputFluids(NitricAcid.getFluid(2000))
                .save(provider);

        // NaNO3 + H2O -> NaOH + HNO3
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, SodiumNitrate, 5)
                .inputFluids(Water.getFluid(1000))
                .outputItems(dust, SodiumHydroxide, 3)
                .outputFluids(NitricAcid.getFluid(1000))
                .save(provider);

        // UO2 + C -> U + CO2
        BLAST_RECIPES.recipeBuilder().duration(150).EUt(120).blastFurnaceTemp(1000)
                .inputItems(dioxide, UraniumRadioactive.getMaterial())
                .inputItems(dust, Carbon)
                .outputItems(dust, UraniumRadioactive.getMaterial())
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // ThO + CaCl2 -> Th + CaO + 2Cl
        BLAST_RECIPES.recipeBuilder().duration(150).EUt(120).blastFurnaceTemp(1000)
                .inputItems(oxide, Thorium, 2)
                .inputItems(dust, CalciumChloride, 3)
                .outputItems(dust, ThoriumRadioactive.getMaterial())
                .outputItems(dust, Quicklime, 2)
                .outputFluids(Chlorine.getFluid(2000))
                .save(provider);
    }
}




public class VanadiumChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Fe3O4V + C = 3Fe + (VO)C(TiO2) + CO
        BLAST_RECIPES.recipeBuilder().duration(220).EUt(120).blastFurnaceTemp(1500)
                .inputItems(dust, VanadiumMagnetite, 4)
                .inputItems(dust, Carbon)
                .outputItems(ingot, Iron, 3)
                .outputItems(VanadiumSlag, 5)
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .save(provider);

        // (VO)C(TiO2) = Dark Ash + TiO2 + VO
        MACERATOR_RECIPES.recipeBuilder().duration(80).EUt(24)
                .inputItems(dust,VanadiumSlag, 5)
                .outputItems(dust, DarkAsh)
                .outputItems(dustSmall, Rutile)
                .outputItems(VanadiumSlagDust, 2)
                .save(provider);

        // 2VO + 3Na2CO3 = 2Na3VO4 + 3CO
        BLAST_RECIPES.recipeBuilder().duration(150).EUt(120).blastFurnaceTemp(700)
                .inputItems(dust,VanadiumSlagDust, 4)
                .inputItems(dust, SodaAsh, 18)
                .outputItems(SodiumVanadate, 16)
                .outputFluids(CarbonMonoxide.getFluid(3000))
                .save(provider);

        // H2SO4 + NH4Cl + Na3VO4 = NH4VO3 + [Cl + 3Na + O + H2SO4]
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .inputItems(dust,SodiumVanadate, 8)
                .inputFluids(AmmoniumChloride.getFluid(1000))
                .outputItems(AmmoniumVanadate, 9)
                .outputFluids(VanadiumWasteSolution.getFluid(1000))
                .save(provider);

        // [Cl + 3Na + O + H2SO4] = SiO2 + Al(OH)3 + NaCl + Na2SO4 + H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(VanadiumWasteSolution.getFluid(4000))
                .outputItems(dust, Salt, 2)
                .outputItems(dust, SodiumSulfate, 7)
                .chancedOutput(ChemicalHelper.get(dust, SiliconDioxide, 3), 5000, 1200)
                .chancedOutput(AluminiumHydroxide, 7, 5000, 1200)
                .save(provider);

        // Na2SO4 + H2 -> H2SO4 + 2Na
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(30)
                .inputItems(dust, SodiumSulfate, 7)
                .inputFluids(Hydrogen.getFluid(2000))
                .outputItems(dust, Sodium, 2)
                .outputFluids(SulfuricAcid.getFluid(1000))
                .save(provider);

        // 2NH4VO3 = V2O5 + 2NH3 + H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust,AmmoniumVanadate, 18)
                .outputItems(VanadiumOxide, 7)
                .outputFluids(Ammonia.getFluid(2000))
                .save(provider);

        // V2O5 + 2Al + C = Al2O3 + 2V + CO2
        BLAST_RECIPES.recipeBuilder().duration(200).EUt(120).blastFurnaceTemp(1200)
                .inputItems(dust,VanadiumOxide, 7)
                .inputItems(dust, Aluminium, 2)
                .inputItems(dust, Carbon)
                .outputItems(dust, Alumina, 5)
                .outputItems(dust, Vanadium, 2)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // Combined Step - Vanadium Magnetite
        CHEMICAL_BATH_RECIPES.recipeBuilder().EUt(1920).duration(200)
                .inputItems(dust, VanadiumMagnetite, 4)
                .inputFluids(SulfuricAcid.getFluid(3000))
                .outputItems(dust, Vanadium, 2)
                .outputItems(dust, Magnetite, 7)
                .outputItems(dust, Sulfur, 3)
                .save(provider);
    }
}




public class VariousChains {

        public static void init(Consumer<FinishedRecipe> provider) {
        memoryFoam();
        drillingMud();
        hydrogenPeroxide();
        fuels();
        coalTar();
        misc();
    }

    private static void misc() {

        // UU-Matter ===================================================================================================
        LARGE_MIXER_RECIPES.recipeBuilder().duration(50).EUt(491520)
                .inputFluids(BosonicUUMatter.getFluid(1000))
                .inputFluids(FermionicUUMatter.getFluid(1000))
                .inputFluids(FreeElectronGas.getFluid(2000))
                .outputFluids(UUMatter.getFluid(1000))
                .save(provider);

        // Sodium Hypochlorite =========================================================================================
        // 2NaOH + 2Cl -> H2O + NaCl + NaClO
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(120)
                .inputFluids(Chlorine.getFluid(2000))
                .inputItems(dust, SodiumHydroxide, 6)
                .outputFluids(Water.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .outputItems(SodiumHypochlorite, 3)
                .save(provider);

        // HClO + NaOH -> H2O + NaClO
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(120)
                .inputFluids(HypochlorousAcid.getFluid(1000))
                .inputItems(dust, SodiumHydroxide, 3)
                .circuitMeta(0)
                .outputFluids(Water.getFluid(1000))
                .outputItems(SodiumHypochlorite, 3)
                .save(provider);

        // 2 NaClO + CO2 + H2O -> 2 HClO + Na2CO3
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(120)
                .inputItems(dust,SodiumHypochlorite, 6)
                .inputFluids(CarbonDioxide.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputItems(dust, SodaAsh, 6)
                .outputFluids(HypochlorousAcid.getFluid(2000))
                .save(provider);

        // Lignite Processing ==========================================================================================
        FLUID_HEATER_RECIPES.recipeBuilder().duration(120).EUt(120)
                .circuitMeta(0)
                .inputFluids(Nitrogen.getFluid(1000))
                .outputFluids(HotNitrogen.getFluid(1000))
                .save(provider);

        // C2(H2O)4C + N(hot) -> N + 3C + 4H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(190).EUt(120)
                .inputItems(dust, Lignite)
                .inputFluids(HotNitrogen.getFluid(1000))
                .outputFluids(Nitrogen.getFluid(1000))
                .outputItems(DehydratedLignite, 3)
                .save(provider);

        COMPRESSOR_RECIPES.recipeBuilder().duration(40).EUt(30)
                .inputItems(dust,DehydratedLignite, 3)
                .outputItems(BCEPellet) //Todo make BCE pellet equivalent to coal as furnace fuel
                .save(provider);

        // Graphene ====================================================================================================
        // FeCl3 + C6H12O6 = [FeCl3 + C6H12O6]
        MIXER_RECIPES.recipeBuilder().duration(80).EUt(30)
                .inputFluids(IronChloride.getFluid(1000))
                .inputItems(dust,Glucose, 24)
                .outputFluids(GlucoseIronSolution.getFluid(1000))
                .save(provider);

        // [FeCl3 + C6H12O6] -> [6CO + Fe] + 3Cl + 5H2O + H2 (H2O and H2 lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(40).EUt(120)
                .notConsumable(stickLong, YttriumBariumCuprate)
                .inputFluids(GlucoseIronSolution.getFluid(1000))
                .outputItems(GRAPHENE_IRON_PLATE)
                .outputFluids(Chlorine.getFluid(3000))
                .save(provider);

        // KMnO4 + NaNO3 + H2SO4 = Graphene Oxidation Solution
        MIXER_RECIPES.recipeBuilder().duration(260).EUt(120)
                .inputItems(dust,PotassiumPermanganate, 6)
                .inputItems(dust, SodiumNitrate, 5)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(GrapheneOxidationSolution.getFluid(1000))
                .save(provider);

        // Graphite + Oxidation Solution = Graphite Oxide + Residue
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputItems(dust, Graphite, 3)
                .inputFluids(GrapheneOxidationSolution.getFluid(100))
                .outputItems(GraphiteOxide)
                .chancedOutput(GrapheneOxidationResidue, 8000, 1000)
                .save(provider);

        // Graphene + Oxidation Solution = Graphene Oxide + Residue
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(20).EUt(24)
                .inputItems(dust, Graphene)
                .inputFluids(GrapheneOxidationSolution.getFluid(100))
                .outputItems(GrapheneOxide, 3)
                .chancedOutput(GrapheneOxidationResidue, 8000, 1000)
                .save(provider);

        // Graphene Oxidation Residue -> Graphene Oxidation Solution
        FLUID_EXTRACTION_RECIPES.recipeBuilder().duration(65).EUt(24)
                .inputItems(dust,GrapheneOxidationResidue)
                .outputFluids(GrapheneOxidationSolution.getFluid(100))
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(100).EUt(24)
                .inputItems(dust,GraphiteOxide)
                .inputFluids(Water.getFluid(100))
                .outputItems(GrapheneOxide, 3)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(30).EUt(480)
                .inputItems(dust,GrapheneOxide, 3)
                .notConsumable(WHITE_HALIDE_LAMP)
                .notConsumable(Hydrazine.getFluid(0))
                .outputItems(dust, Graphene)
                .save(provider);

        // [6CO + Fe] -> C6O + Fe
        ELECTROMAGNETIC_SEPARATOR_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputItems(dust,GRAPHENE_IRON_PLATE)
                .outputItems(GrapheneOxide, 3)
                .outputItems(dust, Iron)
                .save(provider);

        // Liquid Air Distillation =====================================================================================
        DISTILLATION_RECIPES.recipeBuilder().duration(7500).EUt(1920)
                .inputFluids(LiquidAir.getFluid(100000))
                .outputFluids(Nitrogen.getFluid(78000))
                .outputFluids(Oxygen.getFluid(20000))
                .outputFluids(Argon.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(500))
                .outputFluids(Neon.getFluid(100))
                .outputFluids(Helium.getFluid(50))
                .outputFluids(Methane.getFluid(20))
                .outputFluids(Krypton.getFluid(10))
                .outputFluids(Hydrogen.getFluid(5))
                .outputFluids(Xenon.getFluid(1))
                .save(provider);

        // Pyrotheum ===================================================================================================
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(480)
                .inputItems(dust, Coal)
                .inputItems(dust, Sulfur)
                .notConsumable(Lava.getFluid(0))
                .outputItems(dust, Blaze, 2)
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(480)
                .inputItems(dust, Charcoal)
                .inputItems(dust, Sulfur)
                .notConsumable(Lava.getFluid(0))
                .outputItems(dust, Blaze, 2)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Redstone)
                .inputItems(dust, Sulfur)
                .inputItems(dust, Blaze, 2)
                .outputItems(dust, Pyrotheum, 4)
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().duration(32).EUt(24)
                .inputItems(dust, Pyrotheum)
                .outputFluids(Pyrotheum.getFluid(250))
                .save(provider);

        // Cryotheum ===================================================================================================
        CHEMICAL_RECIPES.recipeBuilder().duration(80).EUt(480)
                .inputItems(dust, Snow)
                .inputItems(dust, Redstone)
                .notConsumable(Ice.getFluid(0))
                .outputItems(dust, Blizz, 2)
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Redstone)
                .inputItems(dust, Snow)
                .inputItems(dust, Blizz, 2)
                .outputItems(dust, Cryotheum, 4)
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder().duration(32).EUt(24)
                .inputItems(dust, Cryotheum)
                .outputFluids(Cryotheum.getFluid(250))
                .save(provider);

        VACUUM_RECIPES.recipeBuilder()
                .duration(200)
                .EUt(480)
                .circuitMeta(0)
                .inputFluids(Cryotheum.getFluid(10000))
                .outputFluids(SupercooledCryotheum.getFluid(10000))
                .save(provider);

        // Nuclear Process Distillation ================================================================================
        DISTILLATION_RECIPES.recipeBuilder().duration(75).EUt(120)
                .inputFluids(RedOil.getFluid(3000))
                .outputItems(dust, FerriteMixture)
                .outputFluids(Hydrazine.getFluid(1000))
                .outputFluids(RP1.getFluid(1000))
                .outputFluids(TributylPhosphate.getFluid(1000))
                .save(provider);

        // 3Cl + P -> PCl3
        CHEMICAL_RECIPES.recipeBuilder().duration(60)
                .inputFluids(Chlorine.getFluid(3000))
                .inputItems(dust, Phosphorus)
                .circuitMeta(3)
                .outputFluids(PhosphorusTrichloride.getFluid(1000))
                .save(provider);

        // PCl3 + O -> POCl3
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputFluids(PhosphorusTrichloride.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(PhosphorylChloride.getFluid(1000))
                .save(provider);

        // POCl3 + 3C4H10O -> C12H27O4P + 3HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(100)
                .inputFluids(PhosphorylChloride.getFluid(1000))
                .inputFluids(Butanol.getFluid(3000))
                .outputFluids(HydrochloricAcid.getFluid(3000))
                .outputFluids(TributylPhosphate.getFluid(1000))
                .save(provider);

        // Formic acid =================================================================================================
        // CO + NaOH -> HCOONa
        CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(60)
                .inputFluids(CarbonMonoxide.getFluid(1000))
                .inputItems(dust, SodiumHydroxide, 3)
                .circuitMeta(0)
                .outputFluids(SodiumFormate.getFluid(1000))
                .save(provider);

        // HCOONa + H2SO4 -> CH2O2 + NaHSO4
        CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(60)
                .inputFluids(SodiumFormate.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(FormicAcid.getFluid(1000))
                .outputItems(dust, SodiumBisulfate, 7)
                .save(provider);

        // Misc Reactions ==============================================================================================
        // 3Ca + 3PO4 + H + O -> [3Ca + 3PO4 + H + O]
        CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(100)
                .inputItems(dust, Calcium, 3)
                .inputItems(dust, Phosphate, 3) // this is probably wrong
                .inputFluids(Hydrogen.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputItems(dust, OrganicFertilizer, 10)
                .save(provider);

        // 2HCl + CaCO3 -> H2O + CO2 + CaCl2
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .inputItems(dust, Calcite, 5)
                .outputFluids(Water.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(dust, CalciumChloride, 3)
                .save(provider);

        // Zr + 4Cl -> ZrCl4
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Zirconium)
                .inputFluids(Chlorine.getFluid(4000))
                .outputItems(ZirconiumTetrachloride, 5)
                .save(provider);

        // ZrCl4 -> Zr + 4Cl
        ELECTROLYZER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust,ZirconiumTetrachloride, 5)
                .outputItems(dust, Zirconium)
                .outputFluids(Chlorine.getFluid(4000))
                .save(provider);

        // SiF4 -> Si + 4F
        ELECTROLYZER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(SiliconFluoride.getFluid(1000))
                .outputItems(dust, Silicon)
                .outputFluids(Fluorine.getFluid(4000))
                .save(provider);

        // CF4 -> C + 4F
        ELECTROLYZER_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(CarbonFluoride.getFluid(1000))
                .outputItems(dust, Carbon)
                .outputFluids(Fluorine.getFluid(4000))
                .save(provider);

        // BaSO4 + H2O -> [BaSO4 + H2O]
        MIXER_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputItems(dust, Barite)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(BariumSulfateSolution.getFluid(1000))
                .save(provider);

        // CaCO3 + H2O -> [CaCO3 + H2O]
        MIXER_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputItems(dust, Calcite)
                .circuitMeta(0)
                .inputFluids(Water.getFluid(1000))
                .outputFluids(CalciumCarbonateSolution.getFluid(1000))
                .save(provider);

        // Bentonite + Clay + 2H2O -> 2[H2O + 0.5 Bentonite + 0.5 Clay]
        MIXER_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputItems(dust, Bentonite)
                .inputItems(dust, Clay)
                .inputFluids(Water.getFluid(2000))
                .outputFluids(BentoniteClaySlurry.getFluid(2000))
                .save(provider);

        // Fe + 3HCl -> FeCl3 + 3H
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputItems(dust, Iron)
                .inputFluids(HydrochloricAcid.getFluid(3000))
                .outputFluids(IronChloride.getFluid(1000))
                .outputFluids(Hydrogen.getFluid(3000))
                .save(provider);

        // LiCl -> Li + Cl
        ELECTROLYZER_RECIPES.recipeBuilder().duration(110).EUt(120)
                .inputItems(dust,LithiumChloride, 2)
                .outputFluids(Chlorine.getFluid(1000))
                .outputItems(dust, Lithium)
                .save(provider);

        // Li + Cl -> LiCl
        CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(120)
                .inputItems(dust, Lithium)
                .inputFluids(Chlorine.getFluid(1000))
                .notConsumable(IntCircuitIngredient.getIntegratedCircuit(1))
                .outputItems(LithiumChloride, 2)
                .save(provider);

        // Al + 3Cl -> AlCl3
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(30)
                .inputItems(dust, Aluminium)
                .inputFluids(Chlorine.getFluid(3000))
                .notConsumable(IntCircuitIngredient.getIntegratedCircuit(1))
                .outputItems(AluminiumChloride, 4)
                .save(provider);
    }

    private static void hydrogenPeroxide() {

        // C16H12O2H2 + 2O + C14H10 (catalyst) -> H2O2 + C16H12O2
        CHEMICAL_RECIPES.recipeBuilder().duration(600).EUt(240)
                .inputFluids(Oxygen.getFluid(2000))
                .inputFluids(EthylAnthraHydroQuinone.getFluid(1000))
                .notConsumable(Anthracene)
                .outputFluids(HydrogenPeroxide.getFluid(2000))
                .outputFluids(EthylAnthraQuinone.getFluid(1000))
                .save(provider);

        // 2H + C16H12O2 -> C16H12O2H2
        CHEMICAL_RECIPES.recipeBuilder().duration(600).EUt(120)
                .inputFluids(Hydrogen.getFluid(2000))
                .inputFluids(EthylAnthraQuinone.getFluid(1000))
                .outputFluids(EthylAnthraHydroQuinone.getFluid(1000))
                .save(provider);

        // C8H4O3 + C8H10 -> C16H12O2 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(120)
                .inputItems(dust, PhthalicAnhydride, 15)
                .inputFluids(EthylBenzene.getFluid(1000))
                .outputFluids(EthylAnthraQuinone.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // C2H4 + C6H6 -> C8H10
        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(60)
                .circuitMeta(1)
                .inputFluids(Ethylene.getFluid(1000))
                .inputFluids(Benzene.getFluid(1000))
                .outputFluids(EthylBenzene.getFluid(1000))
                .save(provider);

        // C8H6O4 -> C8H4O3 + H2O (H2O voided - Dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(600).EUt(120)
                .inputFluids(PhthalicAcid.getFluid(1000))
                .outputItems(dust, PhthalicAnhydride, 15)
                .save(provider);

        // 21O + 4 C10H8 -> 5C8H6O4 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(120)
                .notConsumable(dust, Lithium)
                .inputFluids(Oxygen.getFluid(21000))
                .inputFluids(Naphthalene.getFluid(4000))
                .outputFluids(PhthalicAcid.getFluid(5000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);
    }

    private static void drillingMud() {

        // HClO + C2H4 -> C2H5ClO
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(480)
                .inputFluids(HypochlorousAcid.getFluid(1000))
                .inputFluids(Ethylene.getFluid(1000))
                .outputFluids(Chloroethanol.getFluid(1000))
                .save(provider);

        // C2H5ClO + C3H9N + Na -> C5H14NO + NaCl
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(480)
                .inputItems(dust, Sodium)
                .inputFluids(Chloroethanol.getFluid(1000))
                .inputFluids(Trimethylamine.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .outputFluids(Choline.getFluid(1000))
                .save(provider);

        // C2(H2O)4C + C5H14NO -> ATL
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust, Lignite)
                .inputFluids(Choline.getFluid(1000))
                .outputFluids(ATL.getFluid(1000))
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder().duration(120).EUt(480)
                .inputFluids(BariumSulfateSolution.getFluid(1000))
                .inputFluids(CalciumCarbonateSolution.getFluid(1000))
                .inputFluids(BentoniteClaySlurry.getFluid(1000))
                .inputFluids(Lubricant.getFluid(1000))
                .inputFluids(ATL.getFluid(1000))
                .inputFluids(EthyleneGlycol.getFluid(1000))
                .outputFluids(DrillingMud.getFluid(6000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(BariumSulfateSolution.getFluid(1000))
                .inputFluids(CalciumCarbonateSolution.getFluid(1000))
                .outputFluids(CaCBaSMixture.getFluid(2000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(BentoniteClaySlurry.getFluid(1000))
                .inputFluids(Lubricant.getFluid(1000))
                .outputFluids(LubricantClaySlurry.getFluid(2000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(ATL.getFluid(1000))
                .inputFluids(EthyleneGlycol.getFluid(1000))
                .outputFluids(ATLEthylene.getFluid(2000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(60).EUt(120)
                .inputFluids(CaCBaSMixture.getFluid(2000))
                .inputFluids(LubricantClaySlurry.getFluid(2000))
                .outputFluids(DrillingMudMixture.getFluid(4000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(60).EUt(120)
                .inputFluids(DrillingMudMixture.getFluid(4000))
                .inputFluids(ATLEthylene.getFluid(2000))
                .outputFluids(DrillingMud.getFluid(6000))
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder().duration(120).EUt(30)
                .inputFluids(UsedDrillingMud.getFluid(1000))
                .outputFluids(DrillingMud.getFluid(990))
                .outputItems(new ItemStack(Blocks.GRAVEL))
                .save(provider);
    }

    private static void memoryFoam() {

        // C2H4O + H2O -> [C2H4O + H2O]
        MIXER_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputFluids(EthyleneOxide.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(WetEthyleneOxide.getFluid(1000))
                .save(provider);

        // [C2H4O + H2O] -> C2H6O2
        FLUID_HEATER_RECIPES.recipeBuilder().duration(130).EUt(120)
                .circuitMeta(0)
                .inputFluids(WetEthyleneOxide.getFluid(1000))
                .outputFluids(EthyleneGlycol.getFluid(1000))
                .save(provider);

        // C7H8 + 2COCl2 + 2HNO3 + 12 H -> C9H6N2O2 + 4 HCl + 6 H2O
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(480)
                .inputFluids(Toluene.getFluid(1000))
                .inputFluids(Phosgene.getFluid(2000))
                .inputFluids(NitricAcid.getFluid(2000))
                .inputFluids(Hydrogen.getFluid(10000))
                .outputFluids(TolueneDiisocyanate.getFluid(2000))
                .outputFluids(HydrochloricAcid.getFluid(4000))
                .outputFluids(Water.getFluid(6000))
                .save(provider);

        // C9H6N2O2 + 4C2H6O2 + O -> C17H16N2O4 + 7H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(110).EUt(480)
                .inputFluids(TolueneDiisocyanate.getFluid(1000))
                .inputFluids(EthyleneGlycol.getFluid(4000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(Polyurethane.getFluid(1000))
                .outputFluids(Water.getFluid(7000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(110).EUt(120)
                .inputFluids(Polyurethane.getFluid(1000))
                .inputFluids(EthyleneGlycol.getFluid(1000))
                .inputItems(dust, Calcite, 5)
                .outputFluids(ViscoelasticPolyurethane.getFluid(2000))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputFluids(ViscoelasticPolyurethane.getFluid(1000))
                .inputFluids(Air.getFluid(1000))
                .outputFluids(ViscoelasticPolyurethaneFoam.getFluid(2000))
                .save(provider);

        FLUID_SOLIDFICATION_RECIPES.recipeBuilder().duration(60).EUt(30)
                .inputFluids(ViscoelasticPolyurethaneFoam.getFluid(1000))
                .notConsumable(SHAPE_MOLD_BLOCK)
                .outputItems(MEMORY_FOAM_BLOCK)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(260).EUt(8)
                .inputItems(stick, Wood, 3)
                .inputItems(dust,MEMORY_FOAM_BLOCK, 3)
                .outputItems(new ItemStack(Items.BED))
                .save(provider);
    }

    private static void fuels() {

        // High Octane Gasoline
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(50).EUt(1920)
                .inputFluids(NitricOxide.getFluid(6000))
                .inputFluids(Gasoline.getFluid(20000))
                .inputFluids(Toluene.getFluid(1000))
                .inputFluids(Octane.getFluid(2000))
                .inputFluids(EthylTertButylEther.getFluid(3000))
                .outputFluids(HighOctaneGasoline.getFluid(32000))
                .save(provider);

        // Gasoline
        CHEMICAL_RECIPES.recipeBuilder().duration(10).EUt(480)
                .inputFluids(RawGasoline.getFluid(10000))
                .inputFluids(Toluene.getFluid(1000))
                .outputFluids(Gasoline.getFluid(11000))
                .save(provider);

        // Raw Gasoline
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputFluids(Naphtha.getFluid(16000))
                .inputFluids(Gas.getFluid(2000))
                .inputFluids(Methanol.getFluid(1000))
                .inputFluids(Acetone.getFluid(1000))
                .outputFluids(RawGasoline.getFluid(20000))
                .save(provider);

        CHEMICAL_RECIPES.recipeBuilder().duration(400).EUt(480)
                .inputFluids(Ethanol.getFluid(1000))
                .inputFluids(Butane.getFluid(1000))
                .outputFluids(EthylTertButylEther.getFluid(2000))
                .save(provider);

        // Rocket Fuel Tier T4
        // C2H8N2 + N2O4 = H8N4C2O4 (treat like chem reactor recipes)
        MIXER_RECIPES.recipeBuilder().duration(280).EUt(480)
                .inputFluids(Dimethylhydrazine.getFluid(1000))
                .inputFluids(DinitrogenTetroxide.getFluid(1000))
                .outputFluids(RocketFuelH8N4C2O4.getFluid(1000))
                .save(provider);

        // 2NO2 = N2O4
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(480)
                .notConsumable(dust, Copper)
                .inputFluids(NitrogenDioxide.getFluid(2000))
                .outputFluids(DinitrogenTetroxide.getFluid(1000))
                .save(provider);

        // Rocket Fuel Tier 3
        // HNO3 + CH3(NH)NH2 = CN3H7O3 (treat like chem reactor recipes)
        MIXER_RECIPES.recipeBuilder().duration(200).EUt(240)
                .inputFluids(NitricAcid.getFluid(1000))
                .inputFluids(MonoMethylHydrazine.getFluid(1000))
                .outputFluids(RocketFuelCN3H7O3.getFluid(1000))
                .save(provider);

        // C + 2H + N2H4 = CH3(NH)NH2
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(480).EUt(240)
                .inputItems(dust, Carbon)
                .inputFluids(Hydrogen.getFluid(2000))
                .inputFluids(Hydrazine.getFluid(1000))
                .outputFluids(MonoMethylHydrazine.getFluid(1000))
                .save(provider);

        // Rocket Fuel Tier 2
        // N2H4 + CH3OH = [N2H4 + CH3OH] (treat like chem reactor recipes)
        MIXER_RECIPES.recipeBuilder().duration(120).EUt(240)
                .inputFluids(Hydrazine.getFluid(1000))
                .inputFluids(Methanol.getFluid(1000))
                .outputFluids(DenseHydrazineFuelMixture.getFluid(1000))
                .save(provider);

        // Rocket Fuel Tier 1
        // O + RP-1 = [O + RP-1] (treat like chem reactor recipes)
        MIXER_RECIPES.recipeBuilder().duration(16).EUt(240)
                .inputFluids(LiquidOxygen.getFluid(1000))
                .inputFluids(RP1.getFluid(1000))
                .outputFluids(RP1RocketFuel.getFluid(1000))
                .save(provider);

        // Rocket fuel chemicals
        // 2NH3 + H2O2 = N2H4 + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(30)
                .inputFluids(Ammonia.getFluid(2000))
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputFluids(Hydrazine.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // LOX
        VACUUM_RECIPES.recipeBuilder().duration(30).EUt(480)
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(LiquidOxygen.getFluid(1000))
                .save(provider);

        // Liquid Hydrogen
        VACUUM_RECIPES.recipeBuilder().duration(16).EUt(540)
                .inputFluids(Hydrogen.getFluid(500))
                .outputFluids(LiquidHydrogen.getFluid(500))
                .save(provider);

        // RP1
        DISTILLERY_RECIPES.recipeBuilder().duration(16).EUt(120)
                .circuitMeta(0)
                .inputFluids(Kerosene.getFluid(50))
                .outputFluids(RP1.getFluid(25))
                .save(provider);
    }

    private static void coalTar() {

        PYROLYSE_RECIPES.recipeBuilder().duration(1080).EUt(60)
                .circuitMeta(20)
                .inputItems(gem, Lignite, 16)
                .outputItems(dust, Ash, 4)
                .outputFluids(CoalTar.getFluid(800))
                .save(provider);

        PYROLYSE_RECIPES.recipeBuilder().duration(360).EUt(120)
                .circuitMeta(20)
                .inputItems(gem, Charcoal, 32)
                .outputItems(dust, Ash, 4)
                .outputFluids(CoalTar.getFluid(800))
                .save(provider);
        PYROLYSE_RECIPES.recipeBuilder().duration(720).EUt(120)
                .circuitMeta(20)
                .inputItems(gem, Coal, 12)
                .outputItems(dust, Ash, 4)
                .outputFluids(CoalTar.getFluid(2200))
                .save(provider);

        PYROLYSE_RECIPES.recipeBuilder().duration(360).EUt(240)
                .circuitMeta(20)
                .inputItems(gem, Coke, 8)
                .outputItems(dust, Ash, 4)
                .outputFluids(CoalTar.getFluid(3400))
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder().duration(900).EUt(60)
                .inputFluids(CoalTar.getFluid(1000))
                .outputFluids(CoalTarOil.getFluid(500))
                .outputFluids(Kerosene.getFluid(200))
                .outputFluids(EthylBenzene.getFluid(150))
                .outputFluids(Naphtha.getFluid(100))
                .outputFluids(Anthracene.getFluid(50))
                .save(provider);

        MIXER_RECIPES.recipeBuilder().duration(320).EUt(30)
                .inputFluids(SulfuricAcid.getFluid(8000))
                .inputFluids(CoalTarOil.getFluid(8000))
                .outputFluids(SulfuricCoalTarOil.getFluid(16000))
                .save(provider);

        DISTILLERY_RECIPES.recipeBuilder().duration(80).EUt(30)
                .circuitMeta(0)
                .inputFluids(SulfuricCoalTarOil.getFluid(50))
                .outputFluids(Naphthalene.getFluid(50))
                .save(provider);

        DISTILLERY_RECIPES.recipeBuilder().duration(5).EUt(480)
                .circuitMeta(1)
                .inputFluids(SulfuricCoalTarOil.getFluid(800))
                .outputFluids(Naphthalene.getFluid(800))
                .save(provider);

        // Radon Production ==========================================
        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(122880)
                .inputItems(ingot, Plutonium,  8)
                .inputItems(dust, Uranium)
                .inputFluids(Air.getFluid(10000))
                .outputItems(dust, Plutonium, 8)
                .outputFluids(Radon.getFluid(1000))
                .save(provider);
    }
}




public class WetwareChain { // TODO

        public static void init(Consumer<FinishedRecipe> provider) {

        // GROWTH MEDIUM ===============================================================================================

        // 2CaO + 5C -> CO2 + 2CaC2
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust, Quicklime, 4)
                .inputItems(dust, Carbon, 5)
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .outputItems(CalciumCarbide, 6)
                .blastFurnaceTemp(2500)
                .EUt(120)
                .duration(300)
                .save(provider);

        // CaC2 + 2H2O -> Ca(OH)2 + C2H2
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,CalciumCarbide, 3)
                .inputFluids(Steam.getFluid(2000))
                .outputItems(CalciumHydroxide, 5)
                .outputFluids(Acetylene.getFluid(1000))
                .blastFurnaceTemp(2300)
                .EUt(120)
                .duration(200)
                .save(provider);

        // Ca(OH)2 + 2HCl -> 2H2O + CaCl2
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,CalciumHydroxide, 5)
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(Water.getFluid(2000))
                .outputItems(dust, CalciumChloride, 3)
                .EUt(120)
                .duration(60)
                .save(provider);

        // O + CH3OH -> CH2O + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(dust, Silver)
                .inputFluids(Oxygen.getFluid(1000))
                .inputFluids(Methanol.getFluid(1000))
                .outputFluids(Formaldehyde.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(30720)
                .duration(200)
                .save(provider);

        // CH2O + C2H2 -> C3H4O
        CHEMICAL_RECIPES.recipeBuilder()
                .notConsumable(dust, Copper)
                .inputFluids(Formaldehyde.getFluid(1000))
                .inputFluids(Acetylene.getFluid(1000))
                .outputFluids(PropargylAlcohol.getFluid(1000))
                .EUt(120)
                .duration(120)
                .save(provider);

        // C3H4O + HCl -> C3H3Cl + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(PropargylAlcohol.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputFluids(PropargylChloride.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(120)
                .duration(100)
                .save(provider);

        FLUID_EXTRACTION_RECIPES.recipeBuilder()
                .inputItems(dust,RUBBER_DROP)
                .outputFluids(Resin.getFluid(100))
                .EUt(24)
                .duration(100)
                .save(provider);

        DISTILLATION_RECIPES.recipeBuilder()
                .outputItems(dustSmall, RawRubber)
                .inputFluids(Resin.getFluid(1000))
                .outputFluids(Turpentine.getFluid(200))
                .outputFluids(Isoprene.getFluid(20))
                .EUt(480)
                .duration(500)
                .save(provider);

        // C10H16 + H2SO4 -> C10H16 + H2SO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Turpentine.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(BetaPinene.getItemStack(26))
                .outputFluids(SulfuricAcid.getFluid(1000))
                .EUt(480)
                .duration(110)
                .save(provider);

        // C10H16 + 2C5H8 + 2O -> 2C10H16O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,BetaPinene.getItemStack(26))
                .inputFluids(Isoprene.getFluid(2000))
                .inputFluids(Oxygen.getFluid(2000))
                .outputFluids(Citral.getFluid(2000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // C10H16O + C3H6O -> C13H20O + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Citral.getFluid(1000))
                .inputFluids(Acetone.getFluid(1000))
                .outputFluids(BetaIonone.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(120)
                .duration(250)
                .save(provider);

        // 25C13H20O + 5C3H3Cl -> 17C20H30O + 8O + 5HCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(BetaIonone.getFluid(25000))
                .inputFluids(PropargylChloride.getFluid(5000))
                .outputFluids(VitaminA.getFluid(17000))
                .outputFluids(Oxygen.getFluid(8000))
                .outputFluids(HydrochloricAcid.getFluid(5000))
                .EUt(480)
                .duration(150)
                .save(provider);

        // This needs to be better, Zalgo was working on something
        MACERATOR_RECIPES.recipeBuilder()
                .inputItems(dust,new ItemStack(APPLE))
                .chancedOutput(Yeast, 500, 500)
                .EUt(30)
                .duration(50)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(Biomass.getFluid(1000))
                .inputItems(dust,Yeast)
                .notConsumable(ULTRASONIC_HOMOGENIZER)
                .outputFluids(LinoleicAcid.getFluid(1000))
                .EUt(1920)
                .duration(200)
                .save(provider);

        // C2H4 + O -> C2H4O
        CHEMICAL_RECIPES.recipeBuilder()
                .circuitMeta(10)
                .inputFluids(Ethylene.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(EthyleneOxide.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // NH3 + C2H4O -> C2H7NO
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(EthyleneOxide.getFluid(1000))
                .outputFluids(Ethanolamine.getFluid(1000))
                .EUt(7680)
                .duration(60)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputItems(dust,CupriavidusNecator)
                .inputItems(dust, Sugar)
                .inputFluids(Nitrogen.getFluid(1000))
                .inputFluids(Hydrogen.getFluid(1000))
                .outputFluids(Biotin.getFluid(2000))
                .EUt(7680)
                .duration(40)
                .save(provider);

        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Biotin.getFluid(1000))
                .inputFluids(LinoleicAcid.getFluid(1000))
                .inputFluids(Catalase.getFluid(1000))
                .inputFluids(VitaminA.getFluid(1000))
                .inputFluids(Ethanolamine.getFluid(1000))
                .outputFluids(B27Supplement.getFluid(5000))
                .EUt(7680)
                .duration(150)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(Ammonia.getFluid(1000))
                .inputFluids(DistilledWater.getFluid(1000))
                .outputFluids(CleanAmmoniaSolution.getFluid(2000))
                .EUt(480)
                .duration(100)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(CleanAmmoniaSolution.getFluid(1000))
                .inputItems(dust,BrevibacteriumFlavium)
                .inputItems(dust, Sugar)
                .outputItems(Glutamine, 40)
                .EUt(30720)
                .duration(500)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputItems(dust, Meat)
                .outputFluids(Blood.getFluid(1000))
                .EUt(30)
                .duration(50)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(Blood.getFluid(1000))
                .outputFluids(BloodCells.getFluid(500))
                .outputFluids(BloodPlasma.getFluid(500))
                .EUt(480)
                .duration(200)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(BloodPlasma.getFluid(1000))
                .outputFluids(Catalase.getFluid(200))
                .outputFluids(BFGF.getFluid(200))
                .outputFluids(EGF.getFluid(200))
                .EUt(480)
                .duration(50)
                .save(provider);

        LARGE_MIXER_RECIPES.recipeBuilder()
                .inputFluids(B27Supplement.getFluid(1000))
                .inputFluids(AmmoniumNitrate.getFluid(1000))
                .inputItems(dust,Glutamine, 20)
                .inputFluids(BFGF.getFluid(1000))
                .inputFluids(EGF.getFluid(1000))
                .outputFluids(RawGrowthMedium.getFluid(4000))
                .EUt(480)
                .duration(500)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(BloodCells.getFluid(1000))
                .notConsumable(ULTRASONIC_HOMOGENIZER)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputFluids(BacterialGrowthMedium.getFluid(2000))
                .EUt(120)
                .duration(100)
                .save(provider);

        // STERILIZED GROWTH MEDIUM ====================================================================================

        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, SiliconDioxide, 3)
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputItems(dust, SodiumHydroxide, 3)
                .inputFluids(Steam.getFluid(1000))
                .outputFluids(SilicaGelBase.getFluid(3000))
                .EUt(120)
                .duration(120)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputFluids(SilicaGelBase.getFluid(1000))
                .outputItems(SilicaGel, 3)
                .outputItems(dust, Salt, 2)
                .EUt(480)
                .duration(125)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust,SilicaGel, 3)
                .inputItems(dust,Alumina, 5)
                .outputItems(SilicaAluminaGel, 8)
                .EUt(30)
                .duration(60)
                .save(provider);

        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,SilicaAluminaGel)
                .outputItems(ZeoliteSievingPellets)
                .blastFurnaceTemp(4500)
                .EUt(120)
                .duration(400)
                .save(provider);

        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder()
                .inputItems(dust,WetZeoliteSievingPellets)
                .outputItems(ZeoliteSievingPellets)
                .EUt(120)
                .duration(50)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust,ZeoliteSievingPellets)
                .inputFluids(Ethanol.getFluid(1000))
                .outputFluids(Ethanol100.getFluid(1000))
                .outputItems(WetZeoliteSievingPellets)
                .EUt(120)
                .duration(100)
                .save(provider);

        AUTOCLAVE_RECIPES.recipeBuilder()
                .inputItems(dust,PETRI_DISH)
                .inputFluids(Ethanol100.getFluid(100))
                .outputItems(STERILIZED_PETRI_DISH)
                .EUt(7680)
                .duration(25)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(PiranhaSolution.getFluid(2000))
                .EUt(30)
                .duration(50)
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder()
                .inputFluids(PiranhaSolution.getFluid(100))
                .inputItems(dust,CONTAMINATED_PETRI_DISH)
                .outputItems(PETRI_DISH)
                .EUt(30)
                .duration(25)
                .save(provider);

        // [H2SO4 + HNO3] + C6H6 -> C6H5NO2 + H2O + H2SO4
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(NitrationMixture.getFluid(2000))
                .inputFluids(Benzene.getFluid(1000))
                .outputFluids(NitroBenzene.getFluid(1000))
                .outputFluids(DilutedSulfuricAcid.getFluid(2000))
                .EUt(30)
                .duration(100)
                .save(provider);

        // 6H + C6H5NO2 -> C6H5NH2 + 2H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Hydrogen.getFluid(6000))
                .inputFluids(NitroBenzene.getFluid(1000))
                .notConsumable(dust, Zinc)
                .outputFluids(Aniline.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .EUt(30)
                .duration(100)
                .save(provider);

        // HCl + 2H2SO4 + O -> HSO3Cl + 2H2O + SO3
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(2000))
                .inputFluids(Oxygen.getFluid(1000))
                .outputFluids(ChlorosulfonicAcid.getFluid(2000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(SulfurTrioxide.getFluid(1000))
                .EUt(480)
                .duration(200)
                .save(provider);

        // C6H5NH2 + (CH3CO)2O + HSO3Cl -> C8H8ClNO3S + H2O + CH3COOH
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Aniline.getFluid(1000))
                .inputFluids(AceticAnhydride.getFluid(1000))
                .inputFluids(ChlorosulfonicAcid.getFluid(1000))
                .outputFluids(AcetylsulfanilylChloride.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .outputFluids(AceticAcid.getFluid(1000))
                .EUt(1920)
                .duration(100)
                .save(provider);

        // H2O + Na2CO3 -> NaHCO3 + NaOH
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(30)
                .inputFluids(Water.getFluid(1000))
                .inputItems(dust, SodaAsh, 6)
                .outputItems(SodiumBicarbonate, 6)
                .outputItems(dust, SodiumHydroxide, 3)
                .save(provider);

        // NaHCO3 -> NaOH + CO2
        ELECTROLYZER_RECIPES.recipeBuilder().duration(145).EUt(120)
                .inputItems(dust,SodiumBicarbonate, 6)
                .outputItems(dust, SodiumHydroxide, 3)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // NaHCO3 + C8H8ClNO3S + NH3 -> NaCl + C6H8N2O2S + CO2 + CH3COOH
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputItems(dust,SodiumBicarbonate, 6)
                .inputFluids(AcetylsulfanilylChloride.getFluid(1000))
                .inputFluids(Ammonia.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .outputFluids(Sulfanilamide.getFluid(1000))
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputFluids(AceticAcid.getFluid(1000))
                .EUt(30720)
                .duration(50)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(RawGrowthMedium.getFluid(1000))
                .inputFluids(Sulfanilamide.getFluid(250))
                .outputFluids(SterileGrowthMedium.getFluid(1250))
                .EUt(7680)
                .duration(100)
                .save(provider);

        // STEM CELLS ==================================================================================================

        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, Meat)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputFluids(AnimalCells.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .notConsumable(dust, Naquadria)
                .inputFluids(AnimalCells.getFluid(1000))
                .outputFluids(RapidlyReplicatingAnimalCells.getFluid(1000))
                .EUt(7680)
                .duration(500)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(RapidlyReplicatingAnimalCells.getFluid(1000))
                .circuitMeta(1)
                .EUt(480)
                .duration(100)
                .outputFluids(MycGene.getFluid(1000))
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(RapidlyReplicatingAnimalCells.getFluid(1000))
                .circuitMeta(2)
                .EUt(480)
                .duration(100)
                .outputFluids(Oct4Gene.getFluid(1000))
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(RapidlyReplicatingAnimalCells.getFluid(1000))
                .circuitMeta(3)
                .EUt(480)
                .duration(100)
                .outputFluids(SOX2Gene.getFluid(1000))
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(RapidlyReplicatingAnimalCells.getFluid(1000))
                .circuitMeta(4)
                .EUt(480)
                .duration(100)
                .outputFluids(KFL4Gene.getFluid(1000))
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(SterileGrowthMedium.getFluid(1000))
                .inputFluids(AnimalCells.getFluid(1000))
                .inputFluids(GeneTherapyFluid.getFluid(1000))
                .EUt(30720)
                .duration(1000)
                .outputItems(STEM_CELLS)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputItems(dust,STEM_CELLS)
                .inputFluids(SterileGrowthMedium.getFluid(1000))
                .outputItems(STEM_CELLS, 2)
                .outputFluids(DepletedGrowthMedium.getFluid(500))
                .EUt(480)
                .duration(100)
                .save(provider);

        FERMENTING_RECIPES.recipeBuilder()
                .inputFluids(DepletedGrowthMedium.getFluid(1000))
                .outputFluids(FermentedBiomass.getFluid(1000))
                .EUt(30)
                .duration(100)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .notConsumable(ULTRASONIC_HOMOGENIZER)
                .inputItems(dust,StreptococcusPyogenes)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputFluids(Cas9.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(Cas9.getFluid(1000))
                .inputFluids(MycGene.getFluid(1000))
                .inputFluids(Oct4Gene.getFluid(1000))
                .inputFluids(SOX2Gene.getFluid(1000))
                .inputFluids(KFL4Gene.getFluid(1000))
                .inputItems(dust,EschericiaColi)
                .outputFluids(GenePlasmids.getFluid(5000))
                .EUt(1920)
                .duration(50)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .notConsumable(ULTRASONIC_HOMOGENIZER)
                .inputItems("listAllmushroom", 1)
                .outputFluids(Chitin.getFluid(100))
                .EUt(30)
                .duration(100)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .notConsumable(ULTRASONIC_HOMOGENIZER)
                .inputItems(dust,new ItemStack(Blocks.BROWN_MUSHROOM, 1))
                .outputFluids(Chitin.getFluid(100))
                .EUt(30)
                .duration(100)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .notConsumable(ULTRASONIC_HOMOGENIZER)
                .inputItems(dust,new ItemStack(Blocks.RED_MUSHROOM, 1))
                .outputFluids(Chitin.getFluid(100))
                .EUt(30)
                .duration(100)
                .save(provider);

        BIO_REACTOR_RECIPES.recipeBuilder()
                .inputFluids(Chitin.getFluid(1000))
                .inputItems(dust,BifidobacteriumBreve)
                .outputFluids(Chitosan.getFluid(1000))
                .EUt(120)
                .duration(100)
                .save(provider);

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(GenePlasmids.getFluid(1000))
                .inputFluids(Chitosan.getFluid(1000))
                .outputFluids(GeneTherapyFluid.getFluid(2000))
                .EUt(7680)
                .duration(25)
                .save(provider);
    }
}




public class WormholeGeneratorChain {
    public static void init(){
        PLASMA_CONDENSER_RECIPES.recipeBuilder().duration(500).EUt(400000)
                .inputItems(dust,NEUTRON_PLASMA_CONTAINMENT_CELL)
                .notConsumable(SPHERE_FIELD_SHAPE)
                .inputFluids(LiquidHelium.getFluid(32000))
                .outputItems(NEUTRONIUM_SPHERE, 4)
                .outputItems(PLASMA_CONTAINMENT_CELL)
                .outputFluids(Helium.getFluid(32000))
                .save(provider);

        POLARIZER_RECIPES.recipeBuilder().duration(200).EUt(500000)
                .inputItems(dust,NEUTRONIUM_SPHERE)
                .outputItems(TRIPLET_NEUTRONIUM_SPHERE)
                .save(provider);

        LARGE_CENTRIFUGE_RECIPES.recipeBuilder().duration(40).EUt(100000)
                .notConsumable(SEPARATION_ELECTROMAGNET)
                .inputFluids(Helium.getPlasma(1000))
                .outputFluids(FreeAlphaGas.getFluid(1000))
                .outputFluids(FreeElectronGas.getFluid(1000))
                .save(provider);

        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(200).EUt(50000)
                .inputItems(dust,TRIPLET_NEUTRONIUM_SPHERE)
                .inputFluids(FreeAlphaGas.getFluid(1000))
                .outputItems(CHARGED_TRIPLET_NEUTRONIUM_SPHERE)
                .save(provider);

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(100).EUt(100000)
                .inputFluids(Tritanium.getFluid(144))
                .inputItems(stick, NaquadahAlloy, 4)
                .inputItems(wireGtSingle, UVSuperconductor, 2)
                .inputItems(dust,DEGENERATE_RHENIUM_PLATE, 4)
                .inputItems(dust,EMITTER_UV, 2)
                .outputItems(TIME_DILATION_CONTAINMENT_UNIT)
                .save(provider);

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(100).EUt(800000)
                .inputFluids(Tritanium.getFluid(144))
                .inputItems(stick, NaquadahAlloy, 4)
                .inputItems(wireGtSingle, UHVSuperconductor, 2)
                .inputItems(dust,DEGENERATE_RHENIUM_PLATE, 4)
                .inputItems(dust,EMITTER_UHV, 2)
                .outputItems(TIME_DILATION_CONTAINMENT_UNIT, 4)
                .save(provider);

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(100).EUt(12800000)
                .inputFluids(Tritanium.getFluid(144))
                .inputItems(stick, NaquadahAlloy, 4)
                .inputItems(wireGtSingle, UEVSuperconductor, 2)
                .inputItems(dust,QCD_PROTECTIVE_PLATING)
                .inputItems(dust,FIELD_GENERATOR_UHV, 2)
                .inputItems(dust,CHARGED_LEPTON_TRAP_CRYSTAL, 2)
                .outputItems(TIME_DILATION_CONTAINMENT_UNIT, 16)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(200).EUt(288566)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.TARANIUM_CHARGE))
                .inputItems(dust,TIME_DILATION_CONTAINMENT_UNIT.getStackForm(64))
                .inputItems(dust,CHARGED_TRIPLET_NEUTRONIUM_SPHERE.getStackForm(64))
                .outputItems(CONTAINED_REISSNER_NORDSTROM_SINGULARITY.getStackForm(64))
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(600).EUt(6000000)
                .inputItems(dust,CONTAINED_REISSNER_NORDSTROM_SINGULARITY.getStackForm(64))
                .outputItems(CONTAINED_KERR_NEWMANN_SINGULARITY)
                .outputItems(TIME_DILATION_CONTAINMENT_UNIT.getStackForm(63))
                .save(provider);

        FLUID_CANNER_RECIPES.recipeBuilder().duration(40).EUt(100000)
                .inputFluids(FreeElectronGas.getFluid(1000))
                .inputItems(dust,CONTAINED_KERR_NEWMANN_SINGULARITY)
                .outputItems(CONTAINED_KERR_SINGULARITY)
                .save(provider);

        ASSEMBLER_RECIPES.recipeBuilder().duration(200).EUt(100000)
                .inputFluids(FreeElectronGas.getFluid(1000))
                .inputItems(plate, MetastableOganesson, 1)
                .inputItems(plate, Vibranium, 1)
                .inputItems(plate, Trinium)
                .inputItems(dustSmall, Mendelevium.getMaterial(), 1)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.TARANIUM_CHARGE))
                .outputItems(GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.LEPTONIC_CHARGE))
                .save(provider);

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(100).EUt(100000)
                .inputFluids(Tritanium.getFluid(576))
                .inputItems(dust,EMITTER_ZPM, 2)
                .inputItems(dust,FIELD_GENERATOR_ZPM)
                .inputItems(dust,CONTAINED_KERR_SINGULARITY)
                .inputItems(wireGtSingle, UVSuperconductor, 2)
                .inputItems(plate, Neutronium, 2)
                .outputItems(MICROWORMHOLE_GENERATOR)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(400).EUt(1000000)
                .inputItems(dust,NEUTRONIUM_SPHERE)
                .inputItems(dust,TIME_DILATION_CONTAINMENT_UNIT)
                .outputItems(CONTAINED_HIGH_DENSITY_PROTONIC_MATTER)
                .save(provider);

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(200).EUt(1000000)
                .inputFluids(NaquadahAlloy.getFluid(576))
                .inputItems(dust,CONTAINED_HIGH_DENSITY_PROTONIC_MATTER)
                .inputItems(dust,MICROWORMHOLE_GENERATOR)
                .inputItems(dust,CONTAINED_KERR_SINGULARITY)
                .inputItems(dust,EMITTER_UV, 4)
                .inputItems(dust,FIELD_GENERATOR_UV, 2)
                .inputItems(dust,SENSOR_UV, 4)
                .inputItems(dust,BATTERY_SMALL_LIS)
                .outputItems(MACROWORMHOLE_GENERATOR)
                .save(provider);

        STELLAR_FORGE_RECIPES.recipeBuilder().duration(600).EUt(5000000)
                .inputItems(dust,DEGENERATE_RHENIUM_DUST)
                .inputItems(dust,GAMetaBlocks.EXPLOSIVE.getItemVariant(GAExplosive.ExplosiveType.LEPTONIC_CHARGE))
                .inputItems(dust,CONTAINED_HIGH_DENSITY_PROTONIC_MATTER)
                .outputItems(CONTAINED_EXOTIC_MATTER)
                .save(provider);

        ASSEMBLY_LINE_RECIPES.recipeBuilder().duration(400).EUt(6000000)
                .inputFluids(Naquadria.getFluid(288))
                .inputFluids(EnrichedNaquadahAlloy.getFluid(144))
                .inputFluids(Neutronium.getFluid(144))
                .inputFluids(Taranium.getFluid(72))
                .inputItems(dust,EMITTER_UHV, 2)
                .inputItems(dust,FIELD_GENERATOR_UHV, 2)
                .inputItems(dust,SENSOR_UHV, 2)
                .inputItems(dust,BATTERY_SMALL_FLUORIDE)
                .inputItems(dust,CONTAINED_EXOTIC_MATTER)
                .inputItems(dust,MACROWORMHOLE_GENERATOR)
                .outputItems(STABILIZED_WORMHOLE_GENERATOR)
                .save(provider);
    }
}




public class ZincChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // ZnS + C + H2O = [ZnS + C + H2O]
        MIXER_RECIPES.recipeBuilder().duration(50).EUt(120)
                .inputItems(dust, Sphalerite)
                .inputItems(dust, Coke)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputItems(ZincCokePellets, 3)
                .save(provider);

        // 2[ZnS + C + H2O] + 6O = 2ZnO + Zinc Residual Slag + Zinc Exhaust [Contains: Dark Ash + CO2 + SO2]
        BLAST_RECIPES.recipeBuilder().duration(120).EUt(120).blastFurnaceTemp(1500)
                .inputItems(dust,ZincCokePellets, 6)
                .inputFluids(Oxygen.getFluid(6000))
                .outputItems(dust, Zincite, 4)
                .outputItems(ZincResidualSlag)
                .outputFluids(ZincExhaustMixture.getFluid(1000))
                .save(provider);

        // ZnO + 2H2SO4 = ZnSO4 + ZincLeachingResidue [Contains: (H2O)(H2SO4)]
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(40).EUt(480)
                .inputItems(dust, Zincite, 2)
                .inputFluids(SulfuricAcid.getFluid(2000))
                .outputItems(dust, ZincSulfate, 6)
                .outputItems(ZincLeachingResidue)
                .save(provider);

        // Zinc Exhaust = Dark Ash + Zinc Flue Dust + CO2 + SO2
        CENTRIFUGE_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputFluids(ZincExhaustMixture.getFluid(1000))
                .chancedOutput(ZincFlueDust, 4500, 750)
                .outputItems(dustSmall, DarkAsh)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputFluids(SulfurDioxide.getFluid(1000))
                .save(provider);

        // Zinc Residual Slag = Fine Zinc Slag Dust
        MACERATOR_RECIPES.recipeBuilder().duration(80).EUt(120)
                .inputItems(dust,ZincResidualSlag)
                .outputItems(FineZincSlagDust)
                .save(provider);

        // Fine Zinc Slag Dust + H2O = Zinc Slag Slurry [Contains: Fine Zinc Slag Dust + H2O]
        MIXER_RECIPES.recipeBuilder().duration(80).EUt(30)
                .inputItems(dust,FineZincSlagDust)
                .inputFluids(DistilledWater.getFluid(1000))
                .outputFluids(ZincSlagSlurry.getFluid(1000))
                .save(provider);

        // [Fine Zinc Slag Dust + H2O] = Metal Rich Slag Slurry [Contains: H2O] + Zinc ResidualS lag
        ELECTROLYZER_RECIPES.recipeBuilder().duration(130).EUt(30)
                .inputFluids(ZincSlagSlurry.getFluid(1000))
                .outputFluids(MetalRichSlagSlurry.getFluid(1000))
                .chancedOutput(ZincResidualSlag, 2500, 0)
                .save(provider);

        // Metal Rich Slag Slurry [Contains: H2O] + H3PO4 = Acidic Metal Slurry [Contains: H2O + H3PO4]
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(30)
                .inputFluids(MetalRichSlagSlurry.getFluid(1000))
                .inputFluids(PhosphoricAcid.getFluid(1000))
                .outputFluids(AcidicMetalSlurry.getFluid(1000))
                .save(provider);

        // 2 Acidic Metal Slurry [Contains: H2O + H3PO4] + H3PO4 = Separated Metal Slurry [Contains: 3 H3PO4 + H2O] + Metal Rich Slag Slurry [Contains: H2O]
        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(30)
                .inputFluids(AcidicMetalSlurry.getFluid(2000))
                .inputFluids(PhosphoricAcid.getFluid(1000))
                .outputFluids(SeparatedMetalSlurry.getFluid(1000))
                .outputFluids(MetalRichSlagSlurry.getFluid(1000))
                .save(provider);

        // Separated Metal Slurry [Contains: 3 H3PO4 + H2O] + 2NaOH = Metal Hydroxide Mix + Na2HPO4 + 2H2O
        // 3 H3PO4 + 6 NaOH + H2O = 3 Na2HPO4 + 7 H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(30)
                .inputFluids(SeparatedMetalSlurry.getFluid(1000))
                .inputItems(dust, SodiumHydroxide, 6)
                .outputFluids(MetalHydroxideMix.getFluid(1000))
                .outputFluids(Water.getFluid(7000))
                .outputItems(DisodiumPhosphate, 24)
                .save(provider);

        // Na2HPO4 = H + 4O + P + 2Na
        ELECTROLYZER_RECIPES.recipeBuilder().duration(50).EUt(120)
                .inputItems(dust,DisodiumPhosphate, 8)
                .outputFluids(Hydrogen.getFluid(1000))
                .outputFluids(Oxygen.getFluid(4000))
                .outputItems(dust, Phosphorus)
                .outputItems(dust, Sodium, 2)
                .save(provider);

        // Metal Hydroxide Mix = 0.25Zn + Zinc Poor Mix
        //
        // People were regularly confused about these three recipes, as it essentially just gave 0.5 of the metal per
        // recipe, so I changed it to not consume the fine wire, and output 2 Small Dusts of the metal instead.
        ELECTROLYZER_RECIPES.recipeBuilder().duration(130).EUt(120)
                .inputFluids(MetalHydroxideMix.getFluid(1000))
                .notConsumable(wireFine, Zinc)
                .outputItems(dustSmall, Zinc, 2)
                .outputFluids(ZincPoorMix.getFluid(1000))
                .save(provider);

        // Zinc Poor Mix = 0.25Fe + Iron Poor Mix
        ELECTROLYZER_RECIPES.recipeBuilder().duration(130).EUt(120)
                .inputFluids(ZincPoorMix.getFluid(1000))
                .notConsumable(wireFine, Iron)
                .outputItems(dustSmall, Iron, 2)
                .outputFluids(IronPoorMix.getFluid(1000))
                .save(provider);

        // Iron Poor Mix = 0.25Cu + Indium Hydroxide Concentrate [Contains: In(OH)3]
        ELECTROLYZER_RECIPES.recipeBuilder().duration(50).EUt(480)
                .inputFluids(IronPoorMix.getFluid(1000))
                .notConsumable(wireFine, Copper)
                .outputItems(dustSmall, Copper, 2)
                .outputFluids(IndiumHydroxideConcentrate.getFluid(1000))
                .save(provider);

        // Indium Hydroxide Concentrate [Contains: In(OH)3] = In(OH)3
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(230).EUt(120)
                .inputFluids(IndiumHydroxideConcentrate.getFluid(1000))
                .outputItems(IndiumHydroxide, 7)
                .save(provider);

        // In(OH)3 + 3H = In + 3H2O
        BLAST_RECIPES.recipeBuilder().duration(240).EUt(120)
                .blastFurnaceTemp(4500)
                .inputItems(dust,IndiumHydroxide, 7)
                .inputFluids(Hydrogen.getFluid(3000))
                .outputItems(dust, Indium)
                .outputFluids(Steam.getFluid(3000))
                .save(provider);

        // Zinc Flue Dust + H2SO4 = Cadmium Zinc Dust [Contains: Cd + Zn + H2SO4]
        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(180).EUt(960)
                .inputItems(dust,ZincFlueDust)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputItems(CadmiumZincDust, 3)
                .save(provider);

        // Cadmium Zinc Dust [Contains: Cd + Zn + H2SO4] + Hg = Cadmium Thallium Liquor [Contains: Cd + Tl + H2SO4] + Zinc Amalgam [Contains: Zn + Hg]
        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputItems(dust,CadmiumZincDust, 3)
                .inputFluids(Mercury.getFluid(1000))
                .outputFluids(CadmiumThalliumLiquor.getFluid(1000))
                .outputFluids(ZincAmalgam.getFluid(1000))
                .save(provider);

        // Zinc Amalgam [Contains: Zn + Hg] = Zn + Hg
        CENTRIFUGE_RECIPES.recipeBuilder().duration(220).EUt(120)
                .inputFluids(ZincAmalgam.getFluid(1000))
                .outputFluids(Mercury.getFluid(1000))
                .chancedOutput(ChemicalHelper.get(dust, Zinc), 6500, 550)
                .save(provider);

        // 9 Cadmium Thallium Liquor [Contains: Cd + Tl + H2SO4] = Thallium Residue [Contains: 2 Tl] + 9 Cadmium Sulfate Solution [Contains: CdSO4]
        CENTRIFUGE_RECIPES.recipeBuilder().duration(110).EUt(1920)
                .inputFluids(CadmiumThalliumLiquor.getFluid(9000))
                .outputItems(ThalliumResidue)
                .outputFluids(CadmiumSulfateSolution.getFluid(9000))
                .save(provider);

        // 9 Cadmium Sulfate Solution [Contains: CdSO4] = 9 H2SO4 + Cd
        ELECTROLYZER_RECIPES.recipeBuilder().duration(110).EUt(120)
                .inputFluids(CadmiumSulfateSolution.getFluid(9000))
                .outputFluids(SulfuricAcid.getFluid(9000))
                .outputItems(dust, Cadmium)
                .save(provider);

        // Thallium Residue [Contains: 2 Tl] + H2SO4 = Thallium Sulfate Solution [Contains: Tl2SO4]
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust,ThalliumResidue)
                .inputFluids(SulfuricAcid.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(ThalliumSulfateSolution.getFluid(1000))
                .save(provider);

        // Thallium Sulfate Solution [Contains: Tl2SO4 + H2O] + 2 HCl  = 2TlCl + H2SO4 + H2O (because solution)
        CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(120)
                .inputFluids(ThalliumSulfateSolution.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(2000))
                .outputItems(ThalliumChloride, 4)
                .outputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // 2TlCl + Zn = 2Tl + ZnCl2
        BLAST_RECIPES.recipeBuilder().duration(240).EUt(120).blastFurnaceTemp(750)
                .inputItems(dust,ThalliumChloride, 4)
                .inputItems(dust, Zinc)
                .outputItems(dust, Thallium, 2)
                .outputItems(ZincChloride, 3)
                .save(provider);

        // ZnCl2 = Zn + 2Cl
        ELECTROLYZER_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust,ZincChloride, 3)
                .outputItems(dust, Zinc)
                .outputFluids(Chlorine.getFluid(2000))
                .save(provider);

        // Na2CO3 + SO2 = Na2SO3 + CO2
        CHEMICAL_RECIPES.recipeBuilder().duration(70).EUt(30)
                .inputItems(dust, SodaAsh, 6)
                .inputFluids(SulfurDioxide.getFluid(1000))
                .outputItems(SodiumSulfite, 6)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .save(provider);

        // 2 Wood + Na2SO4 + H2O2 + [NaOH + H2O] = 2C6H10O5 + Polyphenol Mix
        // This recipe is close enough
        CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(30)
                .inputItems(dust, Wood, 2)
                .inputItems(dust,SodiumSulfite, 6)
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .inputFluids(SodiumHydroxideSolution.getFluid(1000))
                .outputItems(Cellulose, 42)
                .outputFluids(PolyphenolMix.getFluid(1000))
                .save(provider);

        FORMING_PRESS_RECIPES.recipeBuilder().duration(250).EUt(30)
                .inputItems(dust,Cellulose)
                .notConsumable(SHAPE_MOLD_PLATE)
                .outputItems(new ItemStack(Items.PAPER))
                .save(provider);

        // Polyphenol Mix = Acidified Polyphenol Mix
        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(30)
                .inputFluids(PolyphenolMix.getFluid(1000))
                .notConsumable(HydrochloricAcid.getFluid(0))
                .outputFluids(AcidifiedPolyphenolMix.getFluid(1000))
                .save(provider);

        // 2C2H5OH = (C2H5)2O + H2O (H2O lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(750)
                .inputFluids(Ethanol.getFluid(2000))
                .notConsumable(SulfuricAcid.getFluid(0))
                .circuitMeta(1)
                .outputFluids(Diethylether.getFluid(1000))
                .save(provider);

        // 0.5(C2H5)2O + Acidified Polyphenol Mix = 1 Tannic Acid + 0.5 Wood Tar
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputFluids(Diethylether.getFluid(500))
                .inputFluids(AcidifiedPolyphenolMix.getFluid(1000))
                .outputFluids(TannicAcid.getFluid(1000))
                .outputFluids(WoodTar.getFluid(500))
                .save(provider);

        // ZincLeachingResidue [Contains: (H2O)(H2SO4)] -> FeSO4 + 0.5H4GeO4
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputItems(dust,ZincLeachingResidue)
                .notConsumable(TannicAcid.getFluid(1))
                .outputItems(IronSulfateDust, 6)
                .outputFluids(GermanicAcidSolution.getFluid(500))
                .save(provider);

        // H4GeO4 + 4HCl = [GeCl4 + 4H2O]
        CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(120)
                .inputFluids(GermanicAcidSolution.getFluid(1000))
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .outputFluids(GermaniumChloride.getFluid(1000))
                .save(provider);

        // [GeCl4 + 4H2O] = 4HCl + GeO2 + 2H2O (lost to dehydrator)
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(60).EUt(1920)
                .inputFluids(GermaniumChloride.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(4000))
                .outputItems(GermaniumOxide, 3)
                .save(provider);

        // GeO2 + 4H = Ge + 2H2O
        BLAST_RECIPES.recipeBuilder().duration(220).EUt(120).blastFurnaceTemp(1300)
                .inputItems(dust,GermaniumOxide, 3)
                .inputFluids(Hydrogen.getFluid(4000))
                .outputItems(dust, Germanium)
                .outputFluids(Water.getFluid(2000))
                .save(provider);
    }
}


public class ZirconChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        // Ba + H2O2 = Ba(OH)2
        CHEMICAL_RECIPES.recipeBuilder().duration(125).EUt(480)
                .inputItems(dust, Barium)
                .inputFluids(HydrogenPeroxide.getFluid(1000))
                .outputItems(BariumHydroxide, 5)
                .save(provider);

        // 2C3H6O = C6H10O + H2O
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .notConsumable(BariumHydroxide)
                .inputFluids(Acetone.getFluid(2000))
                .outputFluids(MesitylOxide.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .save(provider);

        // C6H10O + C + H2O = C6H12O + CO
        CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(480)
                .notConsumable(PdCCatalyst)
                .inputItems(dust, Carbon)
                .inputFluids(MesitylOxide.getFluid(1000))
                .inputFluids(Water.getFluid(1000))
                .outputFluids(MethylIsobutylKetone.getFluid(1000))
                .outputFluids(CarbonMonoxide.getFluid(1000))
                .save(provider);

        // S + HCN = HSCN
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(120)
                .inputItems(dust, Sulfur)
                .inputFluids(HydrogenCyanide.getFluid(1000))
                .outputFluids(ThiocyanicAcid.getFluid(1000))
                .save(provider);

        // C6H12O + HSCN = [C6H12O + HSCN]
        MIXER_RECIPES.recipeBuilder().duration(80).EUt(120)
                .inputFluids(MethylIsobutylKetone.getFluid(1000))
                .inputFluids(ThiocyanicAcid.getFluid(1000))
                .outputFluids(ZrHfSeparationMix.getFluid(2000))
                .save(provider);

        // ZrSiO4 + 8Cl = ZrHfCl4 + SiCl4?
        CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(120)
                .inputItems(dust, Zircon, 6)
                .inputFluids(Chlorine.getFluid(4000))
                .outputFluids(ZrHfChloride.getFluid(1000))
                .outputFluids(ZirconChlorinatingResidue.getFluid(1000))
                .save(provider);

        // SiCl4? = SiCl4 + Co + RareEarth
        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(140).EUt(120)
                .inputFluids(ZirconChlorinatingResidue.getFluid(1000))
                .outputItems(SiliconChloride, 5)
                .chancedOutput(ChemicalHelper.get(dust, Cobalt), 7500, 450)
                .chancedOutput(ChemicalHelper.get(dust, RareEarth), 200, 20)
                .save(provider);

        // SiCl4 = Si + 4Cl
        ELECTROLYZER_RECIPES.recipeBuilder().duration(240).EUt(120)
                .inputItems(dust,SiliconChloride, 5)
                .outputItems(dust, Silicon)
                .outputFluids(Chlorine.getFluid(4000))
                .save(provider);

        // ZrHfCl4 + H2O = Cl2HfOZr + 2HCl
        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)
                .inputFluids(Water.getFluid(1000))
                .inputFluids(ZrHfChloride.getFluid(1000))
                .outputFluids(ZrHfOxyChloride.getFluid(1000))
                .outputFluids(HydrochloricAcid.getFluid(2000))
                .save(provider);

        // 3Cl2HfOZr + 3HClO + 3H2SO4 + 15NH3 + 3H2O2 = 9NH4Cl + 3(NH4)2SO4 + 3ZrO2 + 3HfO2 (THIS IS TOO BIG)
        // 3Cl2HfOZr + 3H2SO4 + 6NH4Cl + 9O = 3(NH4)2SO4 + 6HCl + 6Cl + 3ZrO2 + 3HfO2 (THIS FITS)
        // 3Cl2HfOZr + 3SO3 + 6NH4Cl + 6H2O2 = 3(NH4)2SO4 + 12HCl + 3ZrO2 + 3HfO2 (CURRENTLY USING)
        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(1920)
                .inputFluids(ZrHfOxyChloride.getFluid(3000))
                .inputFluids(SulfurTrioxide.getFluid(3000))
                .inputFluids(AmmoniumChloride.getFluid(6000))
                .inputFluids(HydrogenPeroxide.getFluid(6000))
                .notConsumable(ZrHfSeparationMix.getFluid(0))
                .outputFluids(AmmoniumSulfate.getFluid(3000))
                .outputFluids(HydrochloricAcid.getFluid(12000))
                .outputItems(dust, CubicZirconia, 3)
                .chancedOutput(HafniumOxide, 3, 1000, 0)
                .save(provider);

        // C + 4Cl + ZrO2 = CO2 + ZrCl4
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(480)
                .inputItems(dust, Carbon)
                .inputFluids(Chlorine.getFluid(4000))
                .inputItems(dust, CubicZirconia, 3)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(ZirconiumTetrachloride, 5)
                .save(provider);

        // ZrCl4 + 2Mg = Zr + 2MgCl2
        BLAST_RECIPES.recipeBuilder().duration(300).EUt(120).blastFurnaceTemp(2500)
                .inputItems(dust,ZirconiumTetrachloride, 5)
                .inputItems(dust, Magnesium, 2)
                .outputItems(dust, Zirconium)
                .outputItems(dust, MagnesiumChloride, 6)
                .save(provider);

        // C + 4Cl + HfO2 = CO2 + HfCl4
        CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)
                .inputItems(dust, Carbon)
                .inputFluids(Chlorine.getFluid(4000))
                .inputItems(dust,HafniumOxide, 3)
                .outputFluids(CarbonDioxide.getFluid(1000))
                .outputItems(HafniumChloride, 5)
                .save(provider);

        // HfCl4 + 2Mg = Hf + 2MgCl2
        BLAST_RECIPES.recipeBuilder().duration(300).EUt(120).blastFurnaceTemp(2500)
                .inputItems(dust,HafniumChloride, 5)
                .inputItems(dust, Magnesium, 2)
                .outputItems(dust, Hafnium)
                .outputItems(dust, MagnesiumChloride, 6)
                .save(provider);
    }
}





public class ZylonChain {
        public static void init(Consumer<FinishedRecipe> provider) {

        MIXER_RECIPES.recipeBuilder()
                .inputFluids(OrthoXylene.getFluid(1000))
                .inputItems(dust, Zeolite)
                .outputFluids(OrthoXyleneZeoliteMixture.getFluid(1000))
                .EUt(480)
                .duration(50)
                .save(provider);

        CENTRIFUGE_RECIPES.recipeBuilder()
                .inputFluids(OrthoXyleneZeoliteMixture.getFluid(1000))
                .outputItems(dust, Zeolite)
                .outputFluids(ParaXylene.getFluid(1000))
                .EUt(480)
                .duration(100)
                .save(provider);

        // C8H10 + O + 2Br -> C8H8Br2 + H2O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(ParaXylene.getFluid(1000))
                .inputFluids(Oxygen.getFluid(1000))
                .inputFluids(Bromine.getFluid(2000))
                .outputFluids(Dibromomethylbenzene.getFluid(1000))
                .outputFluids(Water.getFluid(1000))
                .EUt(7680)
                .duration(150)
                .save(provider);

        // C8H8Br2 + H2SO4 -> 2Br + H2O2 + H2S + C8H6O2
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Dibromomethylbenzene.getFluid(1000))
                .inputFluids(SulfuricAcid.getFluid(1000))
                .outputFluids(Bromine.getFluid(2000))
                .outputFluids(HydrogenSulfide.getFluid(1000))
                .outputFluids(HydrogenPeroxide.getFluid(1000))
                .outputItems(Terephthalaldehyde, 16)
                .EUt(7680)
                .duration(50)
                .save(provider);

        // Au + Pd + C -> AuPdC
        MIXER_RECIPES.recipeBuilder()
                .inputItems(dust, Gold)
                .inputItems(dust,PdCCatalyst, 2)
                .outputItems(AuPdCCatalyst, 3)
                .EUt(2000000)
                .duration(60)
                .save(provider);

        // HCl + C3H6 -> C3H7Cl
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(HydrochloricAcid.getFluid(1000))
                .inputFluids(Propene.getFluid(1000))
                .outputFluids(Isochloropropane.getFluid(1000))
                .EUt(480)
                .duration(110)
                .save(provider);

        // C2H2O + CH3COOH -> C4H6O3
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Ethenone.getFluid(1000))
                .inputFluids(AceticAcid.getFluid(1000))
                .outputFluids(AceticAnhydride.getFluid(1000))
                .EUt(480)
                .duration(80)
                .save(provider);

        // C6H6O2 + C3H7Cl + C4H6O3 + 2HNO3 + Na2O + C3H6 -> C12H16O2(NO2)2 + 2H2O + CH3COOH + C2H3NaO2 + NaCl
        LARGE_CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Resorcinol.getFluid(1000))
                .inputFluids(Isochloropropane.getFluid(1000))
                .inputFluids(AceticAnhydride.getFluid(1000))
                .inputFluids(NitricAcid.getFluid(2000))
                .inputFluids(Propene.getFluid(1000))
                .inputItems(dust,SodiumOxide, 3)
                .outputFluids(Dinitrodipropanyloxybenzene.getFluid(1000))
                .outputFluids(Water.getFluid(2000))
                .outputFluids(AceticAcid.getFluid(1000))
                .outputFluids(SodiumAcetate.getFluid(1000))
                .outputItems(dust, Salt, 2)
                .EUt(7680)
                .duration(50)
                .save(provider);

        // C2H3NaO2 -> NaOH + C2H2O
        ELECTROLYZER_RECIPES.recipeBuilder().duration(80).EUt(120)
                .inputFluids(SodiumAcetate.getFluid(1000))
                .outputItems(dust, SodiumHydroxide, 3)
                .outputFluids(Ethenone.getFluid(1000))
                .save(provider);

        // C12H16O2(NO2)2 + C8H6O2 -> C20H22N2O2 + 6O
        CHEMICAL_RECIPES.recipeBuilder()
                .inputFluids(Dinitrodipropanyloxybenzene.getFluid(1000))
                .inputItems(dust,Terephthalaldehyde, 16)
                .notConsumable(AuPdCCatalyst)
                .outputItems(PreZylon)
                .outputFluids(Oxygen.getFluid(6000))
                .EUt(1966080)
                .duration(50)
                .save(provider);

        // C20H22N2O2 -> 2C3H8 + C14H6N2O2
        BLAST_RECIPES.recipeBuilder()
                .inputItems(dust,PreZylon)
                .outputFluids(Propane.getFluid(2000))
                .outputItems(dust, Zylon)
                .EUt(120)
                .duration(16000)
                .blastFurnaceTemp(10000)
                .save(provider);
    }
}